@startuml
/'
Copyright 2024 Google LLC All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
'/

'https://plantuml.com/sequence-diagram

participant Matchmaker
participant Agones

participant "Canary Fleet\nResource" as CanaryFleet
participant "Stable Fleet\nResource" as StableFleet

Matchmaker -> Agones: Create: <i>GameServerAllocation</i>
note left
  <i>GameServerAllocation</i> is implemented to prefer
  allocating from the Canary <i>Fleet</i>, but if a Ready
  <i>GameServer</i> cannot be found in the Canary Fleet,
  to fall back to the Stable <i>Fleet</i>.
end note

group GameServerAllocation
else Check Canary Fleet first
Agones -> CanaryFleet: Check if <i>GameServer<i> is available
note right
  The Canary <i>Fleet</i> is
  usually a small, fixed size
end note
else None available in Canary Fleet
Agones -> StableFleet: Check if <i>GameServer<i> is available
note right
  When the Canary <i>Fleet</i> is fully allocated, the
  allocation falls over to the Stable <i>Fleet</i>.
end note
end group

Matchmaker <-- Agones: returns <i>Allocated GameServer</i> record

@enduml
