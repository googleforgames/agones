// Copyright 2024 Google LLC All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This code was autogenerated. Do not edit directly.
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: google/api/http.proto
// Protobuf C++ Version: 6.30.0

#ifndef google_2fapi_2fhttp_2eproto_2epb_2eh
#define google_2fapi_2fhttp_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6030000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fhttp_2eproto AGONES_EXPORT

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct AGONES_EXPORT TableStruct_google_2fapi_2fhttp_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
AGONES_EXPORT extern const ::google::protobuf::internal::DescriptorTable descriptor_table_google_2fapi_2fhttp_2eproto;
}  // extern "C"
namespace google {
namespace api {
class CustomHttpPattern;
struct CustomHttpPatternDefaultTypeInternal;
AGONES_EXPORT extern CustomHttpPatternDefaultTypeInternal _CustomHttpPattern_default_instance_;
AGONES_EXPORT extern const ::google::protobuf::internal::ClassDataFull CustomHttpPattern_class_data_;
class Http;
struct HttpDefaultTypeInternal;
AGONES_EXPORT extern HttpDefaultTypeInternal _Http_default_instance_;
AGONES_EXPORT extern const ::google::protobuf::internal::ClassDataFull Http_class_data_;
class HttpRule;
struct HttpRuleDefaultTypeInternal;
AGONES_EXPORT extern HttpRuleDefaultTypeInternal _HttpRule_default_instance_;
AGONES_EXPORT extern const ::google::protobuf::internal::ClassDataFull HttpRule_class_data_;
}  // namespace api
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace google {
namespace api {

// ===================================================================


// -------------------------------------------------------------------

class AGONES_EXPORT CustomHttpPattern final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:google.api.CustomHttpPattern) */ {
 public:
  inline CustomHttpPattern() : CustomHttpPattern(nullptr) {}
  ~CustomHttpPattern() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CustomHttpPattern* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CustomHttpPattern));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CustomHttpPattern(::google::protobuf::internal::ConstantInitialized);

  inline CustomHttpPattern(const CustomHttpPattern& from) : CustomHttpPattern(nullptr, from) {}
  inline CustomHttpPattern(CustomHttpPattern&& from) noexcept
      : CustomHttpPattern(nullptr, std::move(from)) {}
  inline CustomHttpPattern& operator=(const CustomHttpPattern& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomHttpPattern& operator=(CustomHttpPattern&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomHttpPattern& default_instance() {
    return *reinterpret_cast<const CustomHttpPattern*>(
        &_CustomHttpPattern_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CustomHttpPattern& a, CustomHttpPattern& b) { a.Swap(&b); }
  inline void Swap(CustomHttpPattern* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomHttpPattern* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomHttpPattern* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CustomHttpPattern>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CustomHttpPattern& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CustomHttpPattern& from) { CustomHttpPattern::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CustomHttpPattern* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "google.api.CustomHttpPattern"; }

 protected:
  explicit CustomHttpPattern(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CustomHttpPattern(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CustomHttpPattern& from);
  CustomHttpPattern(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CustomHttpPattern&& from) noexcept
      : CustomHttpPattern(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kKindFieldNumber = 1,
    kPathFieldNumber = 2,
  };
  // string kind = 1;
  void clear_kind() ;
  const std::string& kind() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_kind(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_kind();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_kind();
  void set_allocated_kind(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_kind() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_kind(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_kind();

  public:
  // string path = 2;
  void clear_path() ;
  const std::string& path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_path(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_path();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_path();
  void set_allocated_path(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_path() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_path(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_path();

  public:
  // @@protoc_insertion_point(class_scope:google.api.CustomHttpPattern)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 45,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CustomHttpPattern& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr kind_;
    ::google::protobuf::internal::ArenaStringPtr path_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fapi_2fhttp_2eproto;
};

AGONES_EXPORT extern const ::google::protobuf::internal::ClassDataFull CustomHttpPattern_class_data_;
// -------------------------------------------------------------------

class AGONES_EXPORT HttpRule final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:google.api.HttpRule) */ {
 public:
  inline HttpRule() : HttpRule(nullptr) {}
  ~HttpRule() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(HttpRule* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(HttpRule));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HttpRule(::google::protobuf::internal::ConstantInitialized);

  inline HttpRule(const HttpRule& from) : HttpRule(nullptr, from) {}
  inline HttpRule(HttpRule&& from) noexcept
      : HttpRule(nullptr, std::move(from)) {}
  inline HttpRule& operator=(const HttpRule& from) {
    CopyFrom(from);
    return *this;
  }
  inline HttpRule& operator=(HttpRule&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HttpRule& default_instance() {
    return *reinterpret_cast<const HttpRule*>(
        &_HttpRule_default_instance_);
  }
  enum PatternCase {
    kGet = 2,
    kPut = 3,
    kPost = 4,
    kDelete = 5,
    kPatch = 6,
    kCustom = 8,
    PATTERN_NOT_SET = 0,
  };
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(HttpRule& a, HttpRule& b) { a.Swap(&b); }
  inline void Swap(HttpRule* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HttpRule* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HttpRule* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<HttpRule>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HttpRule& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HttpRule& from) { HttpRule::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(HttpRule* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "google.api.HttpRule"; }

 protected:
  explicit HttpRule(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  HttpRule(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const HttpRule& from);
  HttpRule(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, HttpRule&& from) noexcept
      : HttpRule(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAdditionalBindingsFieldNumber = 11,
    kSelectorFieldNumber = 1,
    kBodyFieldNumber = 7,
    kResponseBodyFieldNumber = 12,
    kGetFieldNumber = 2,
    kPutFieldNumber = 3,
    kPostFieldNumber = 4,
    kDeleteFieldNumber = 5,
    kPatchFieldNumber = 6,
    kCustomFieldNumber = 8,
  };
  // repeated .google.api.HttpRule additional_bindings = 11;
  int additional_bindings_size() const;
  private:
  int _internal_additional_bindings_size() const;

  public:
  void clear_additional_bindings() ;
  ::google::api::HttpRule* PROTOBUF_NONNULL mutable_additional_bindings(int index);
  ::google::protobuf::RepeatedPtrField<::google::api::HttpRule>* PROTOBUF_NONNULL mutable_additional_bindings();

  private:
  const ::google::protobuf::RepeatedPtrField<::google::api::HttpRule>& _internal_additional_bindings() const;
  ::google::protobuf::RepeatedPtrField<::google::api::HttpRule>* PROTOBUF_NONNULL _internal_mutable_additional_bindings();
  public:
  const ::google::api::HttpRule& additional_bindings(int index) const;
  ::google::api::HttpRule* PROTOBUF_NONNULL add_additional_bindings();
  const ::google::protobuf::RepeatedPtrField<::google::api::HttpRule>& additional_bindings() const;
  // string selector = 1;
  void clear_selector() ;
  const std::string& selector() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_selector(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_selector();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_selector();
  void set_allocated_selector(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_selector() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_selector(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_selector();

  public:
  // string body = 7;
  void clear_body() ;
  const std::string& body() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_body(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_body();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_body();
  void set_allocated_body(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_body() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_body(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_body();

  public:
  // string response_body = 12;
  void clear_response_body() ;
  const std::string& response_body() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_response_body(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_response_body();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_response_body();
  void set_allocated_response_body(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_response_body() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_response_body(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_response_body();

  public:
  // string get = 2;
  bool has_get() const;
  void clear_get() ;
  const std::string& get() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_get(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_get();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_get();
  void set_allocated_get(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_get() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_get(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_get();

  public:
  // string put = 3;
  bool has_put() const;
  void clear_put() ;
  const std::string& put() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_put(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_put();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_put();
  void set_allocated_put(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_put() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_put(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_put();

  public:
  // string post = 4;
  bool has_post() const;
  void clear_post() ;
  const std::string& post() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_post(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_post();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_post();
  void set_allocated_post(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_post() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_post(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_post();

  public:
  // string delete = 5;
  bool has_delete_() const;
  void clear_delete_() ;
  const std::string& delete_() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_delete_(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_delete_();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_delete_();
  void set_allocated_delete_(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_delete_() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_delete_(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_delete_();

  public:
  // string patch = 6;
  bool has_patch() const;
  void clear_patch() ;
  const std::string& patch() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_patch(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_patch();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_patch();
  void set_allocated_patch(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_patch() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_patch(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_patch();

  public:
  // .google.api.CustomHttpPattern custom = 8;
  bool has_custom() const;
  private:
  bool _internal_has_custom() const;

  public:
  void clear_custom() ;
  const ::google::api::CustomHttpPattern& custom() const;
  [[nodiscard]] ::google::api::CustomHttpPattern* PROTOBUF_NULLABLE release_custom();
  ::google::api::CustomHttpPattern* PROTOBUF_NONNULL mutable_custom();
  void set_allocated_custom(::google::api::CustomHttpPattern* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_custom(::google::api::CustomHttpPattern* PROTOBUF_NULLABLE value);
  ::google::api::CustomHttpPattern* PROTOBUF_NULLABLE unsafe_arena_release_custom();

  private:
  const ::google::api::CustomHttpPattern& _internal_custom() const;
  ::google::api::CustomHttpPattern* PROTOBUF_NONNULL _internal_mutable_custom();

  public:
  void clear_pattern();
  PatternCase pattern_case() const;
  // @@protoc_insertion_point(class_scope:google.api.HttpRule)
 private:
  class _Internal;
  void set_has_get();
  void set_has_put();
  void set_has_post();
  void set_has_delete_();
  void set_has_patch();
  void set_has_custom();
  inline bool has_pattern() const;
  inline void clear_has_pattern();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 10,
                                   2, 82,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const HttpRule& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::google::api::HttpRule > additional_bindings_;
    ::google::protobuf::internal::ArenaStringPtr selector_;
    ::google::protobuf::internal::ArenaStringPtr body_;
    ::google::protobuf::internal::ArenaStringPtr response_body_;
    union PatternUnion {
      constexpr PatternUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::internal::ArenaStringPtr get_;
      ::google::protobuf::internal::ArenaStringPtr put_;
      ::google::protobuf::internal::ArenaStringPtr post_;
      ::google::protobuf::internal::ArenaStringPtr delete__;
      ::google::protobuf::internal::ArenaStringPtr patch_;
      ::google::api::CustomHttpPattern* PROTOBUF_NULLABLE custom_;
    } pattern_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fapi_2fhttp_2eproto;
};

AGONES_EXPORT extern const ::google::protobuf::internal::ClassDataFull HttpRule_class_data_;
// -------------------------------------------------------------------

class AGONES_EXPORT Http final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:google.api.Http) */ {
 public:
  inline Http() : Http(nullptr) {}
  ~Http() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Http* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Http));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Http(::google::protobuf::internal::ConstantInitialized);

  inline Http(const Http& from) : Http(nullptr, from) {}
  inline Http(Http&& from) noexcept
      : Http(nullptr, std::move(from)) {}
  inline Http& operator=(const Http& from) {
    CopyFrom(from);
    return *this;
  }
  inline Http& operator=(Http&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Http& default_instance() {
    return *reinterpret_cast<const Http*>(
        &_Http_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Http& a, Http& b) { a.Swap(&b); }
  inline void Swap(Http* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Http* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Http* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Http>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Http& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Http& from) { Http::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Http* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "google.api.Http"; }

 protected:
  explicit Http(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Http(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Http& from);
  Http(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Http&& from) noexcept
      : Http(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRulesFieldNumber = 1,
    kFullyDecodeReservedExpansionFieldNumber = 2,
  };
  // repeated .google.api.HttpRule rules = 1;
  int rules_size() const;
  private:
  int _internal_rules_size() const;

  public:
  void clear_rules() ;
  ::google::api::HttpRule* PROTOBUF_NONNULL mutable_rules(int index);
  ::google::protobuf::RepeatedPtrField<::google::api::HttpRule>* PROTOBUF_NONNULL mutable_rules();

  private:
  const ::google::protobuf::RepeatedPtrField<::google::api::HttpRule>& _internal_rules() const;
  ::google::protobuf::RepeatedPtrField<::google::api::HttpRule>* PROTOBUF_NONNULL _internal_mutable_rules();
  public:
  const ::google::api::HttpRule& rules(int index) const;
  ::google::api::HttpRule* PROTOBUF_NONNULL add_rules();
  const ::google::protobuf::RepeatedPtrField<::google::api::HttpRule>& rules() const;
  // bool fully_decode_reserved_expansion = 2;
  void clear_fully_decode_reserved_expansion() ;
  bool fully_decode_reserved_expansion() const;
  void set_fully_decode_reserved_expansion(bool value);

  private:
  bool _internal_fully_decode_reserved_expansion() const;
  void _internal_set_fully_decode_reserved_expansion(bool value);

  public:
  // @@protoc_insertion_point(class_scope:google.api.Http)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Http& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::google::api::HttpRule > rules_;
    bool fully_decode_reserved_expansion_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fapi_2fhttp_2eproto;
};

AGONES_EXPORT extern const ::google::protobuf::internal::ClassDataFull Http_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Http

// repeated .google.api.HttpRule rules = 1;
inline int Http::_internal_rules_size() const {
  return _internal_rules().size();
}
inline int Http::rules_size() const {
  return _internal_rules_size();
}
inline void Http::clear_rules() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rules_.Clear();
}
inline ::google::api::HttpRule* PROTOBUF_NONNULL Http::mutable_rules(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:google.api.Http.rules)
  return _internal_mutable_rules()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::google::api::HttpRule>* PROTOBUF_NONNULL Http::mutable_rules()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:google.api.Http.rules)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_rules();
}
inline const ::google::api::HttpRule& Http::rules(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.api.Http.rules)
  return _internal_rules().Get(index);
}
inline ::google::api::HttpRule* PROTOBUF_NONNULL Http::add_rules()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::api::HttpRule* _add = _internal_mutable_rules()->Add();
  // @@protoc_insertion_point(field_add:google.api.Http.rules)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::google::api::HttpRule>& Http::rules() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:google.api.Http.rules)
  return _internal_rules();
}
inline const ::google::protobuf::RepeatedPtrField<::google::api::HttpRule>&
Http::_internal_rules() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rules_;
}
inline ::google::protobuf::RepeatedPtrField<::google::api::HttpRule>* PROTOBUF_NONNULL
Http::_internal_mutable_rules() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.rules_;
}

// bool fully_decode_reserved_expansion = 2;
inline void Http::clear_fully_decode_reserved_expansion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fully_decode_reserved_expansion_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool Http::fully_decode_reserved_expansion() const {
  // @@protoc_insertion_point(field_get:google.api.Http.fully_decode_reserved_expansion)
  return _internal_fully_decode_reserved_expansion();
}
inline void Http::set_fully_decode_reserved_expansion(bool value) {
  _internal_set_fully_decode_reserved_expansion(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:google.api.Http.fully_decode_reserved_expansion)
}
inline bool Http::_internal_fully_decode_reserved_expansion() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fully_decode_reserved_expansion_;
}
inline void Http::_internal_set_fully_decode_reserved_expansion(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fully_decode_reserved_expansion_ = value;
}

// -------------------------------------------------------------------

// HttpRule

// string selector = 1;
inline void HttpRule::clear_selector() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.selector_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& HttpRule::selector() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.api.HttpRule.selector)
  return _internal_selector();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void HttpRule::set_selector(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.selector_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:google.api.HttpRule.selector)
}
inline std::string* PROTOBUF_NONNULL HttpRule::mutable_selector()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_selector();
  // @@protoc_insertion_point(field_mutable:google.api.HttpRule.selector)
  return _s;
}
inline const std::string& HttpRule::_internal_selector() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.selector_.Get();
}
inline void HttpRule::_internal_set_selector(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.selector_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL HttpRule::_internal_mutable_selector() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.selector_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE HttpRule::release_selector() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:google.api.HttpRule.selector)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.selector_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.selector_.Set("", GetArena());
  }
  return released;
}
inline void HttpRule::set_allocated_selector(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.selector_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.selector_.IsDefault()) {
    _impl_.selector_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.HttpRule.selector)
}

// string get = 2;
inline bool HttpRule::has_get() const {
  return pattern_case() == kGet;
}
inline void HttpRule::set_has_get() {
  _impl_._oneof_case_[0] = kGet;
}
inline void HttpRule::clear_get() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (pattern_case() == kGet) {
    _impl_.pattern_.get_.Destroy();
    clear_has_pattern();
  }
}
inline const std::string& HttpRule::get() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.api.HttpRule.get)
  return _internal_get();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void HttpRule::set_get(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (pattern_case() != kGet) {
    clear_pattern();

    set_has_get();
    _impl_.pattern_.get_.InitDefault();
  }
  _impl_.pattern_.get_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:google.api.HttpRule.get)
}
inline std::string* PROTOBUF_NONNULL HttpRule::mutable_get()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_get();
  // @@protoc_insertion_point(field_mutable:google.api.HttpRule.get)
  return _s;
}
inline const std::string& HttpRule::_internal_get() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (pattern_case() != kGet) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.pattern_.get_.Get();
}
inline void HttpRule::_internal_set_get(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (pattern_case() != kGet) {
    clear_pattern();

    set_has_get();
    _impl_.pattern_.get_.InitDefault();
  }
  _impl_.pattern_.get_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL HttpRule::_internal_mutable_get() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (pattern_case() != kGet) {
    clear_pattern();

    set_has_get();
    _impl_.pattern_.get_.InitDefault();
  }
  return _impl_.pattern_.get_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE HttpRule::release_get() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:google.api.HttpRule.get)
  if (pattern_case() != kGet) {
    return nullptr;
  }
  clear_has_pattern();
  return _impl_.pattern_.get_.Release();
}
inline void HttpRule::set_allocated_get(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_pattern()) {
    clear_pattern();
  }
  if (value != nullptr) {
    set_has_get();
    _impl_.pattern_.get_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.HttpRule.get)
}

// string put = 3;
inline bool HttpRule::has_put() const {
  return pattern_case() == kPut;
}
inline void HttpRule::set_has_put() {
  _impl_._oneof_case_[0] = kPut;
}
inline void HttpRule::clear_put() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (pattern_case() == kPut) {
    _impl_.pattern_.put_.Destroy();
    clear_has_pattern();
  }
}
inline const std::string& HttpRule::put() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.api.HttpRule.put)
  return _internal_put();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void HttpRule::set_put(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (pattern_case() != kPut) {
    clear_pattern();

    set_has_put();
    _impl_.pattern_.put_.InitDefault();
  }
  _impl_.pattern_.put_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:google.api.HttpRule.put)
}
inline std::string* PROTOBUF_NONNULL HttpRule::mutable_put()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_put();
  // @@protoc_insertion_point(field_mutable:google.api.HttpRule.put)
  return _s;
}
inline const std::string& HttpRule::_internal_put() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (pattern_case() != kPut) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.pattern_.put_.Get();
}
inline void HttpRule::_internal_set_put(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (pattern_case() != kPut) {
    clear_pattern();

    set_has_put();
    _impl_.pattern_.put_.InitDefault();
  }
  _impl_.pattern_.put_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL HttpRule::_internal_mutable_put() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (pattern_case() != kPut) {
    clear_pattern();

    set_has_put();
    _impl_.pattern_.put_.InitDefault();
  }
  return _impl_.pattern_.put_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE HttpRule::release_put() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:google.api.HttpRule.put)
  if (pattern_case() != kPut) {
    return nullptr;
  }
  clear_has_pattern();
  return _impl_.pattern_.put_.Release();
}
inline void HttpRule::set_allocated_put(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_pattern()) {
    clear_pattern();
  }
  if (value != nullptr) {
    set_has_put();
    _impl_.pattern_.put_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.HttpRule.put)
}

// string post = 4;
inline bool HttpRule::has_post() const {
  return pattern_case() == kPost;
}
inline void HttpRule::set_has_post() {
  _impl_._oneof_case_[0] = kPost;
}
inline void HttpRule::clear_post() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (pattern_case() == kPost) {
    _impl_.pattern_.post_.Destroy();
    clear_has_pattern();
  }
}
inline const std::string& HttpRule::post() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.api.HttpRule.post)
  return _internal_post();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void HttpRule::set_post(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (pattern_case() != kPost) {
    clear_pattern();

    set_has_post();
    _impl_.pattern_.post_.InitDefault();
  }
  _impl_.pattern_.post_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:google.api.HttpRule.post)
}
inline std::string* PROTOBUF_NONNULL HttpRule::mutable_post()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_post();
  // @@protoc_insertion_point(field_mutable:google.api.HttpRule.post)
  return _s;
}
inline const std::string& HttpRule::_internal_post() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (pattern_case() != kPost) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.pattern_.post_.Get();
}
inline void HttpRule::_internal_set_post(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (pattern_case() != kPost) {
    clear_pattern();

    set_has_post();
    _impl_.pattern_.post_.InitDefault();
  }
  _impl_.pattern_.post_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL HttpRule::_internal_mutable_post() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (pattern_case() != kPost) {
    clear_pattern();

    set_has_post();
    _impl_.pattern_.post_.InitDefault();
  }
  return _impl_.pattern_.post_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE HttpRule::release_post() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:google.api.HttpRule.post)
  if (pattern_case() != kPost) {
    return nullptr;
  }
  clear_has_pattern();
  return _impl_.pattern_.post_.Release();
}
inline void HttpRule::set_allocated_post(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_pattern()) {
    clear_pattern();
  }
  if (value != nullptr) {
    set_has_post();
    _impl_.pattern_.post_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.HttpRule.post)
}

// string delete = 5;
inline bool HttpRule::has_delete_() const {
  return pattern_case() == kDelete;
}
inline void HttpRule::set_has_delete_() {
  _impl_._oneof_case_[0] = kDelete;
}
inline void HttpRule::clear_delete_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (pattern_case() == kDelete) {
    _impl_.pattern_.delete__.Destroy();
    clear_has_pattern();
  }
}
inline const std::string& HttpRule::delete_() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.api.HttpRule.delete)
  return _internal_delete_();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void HttpRule::set_delete_(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (pattern_case() != kDelete) {
    clear_pattern();

    set_has_delete_();
    _impl_.pattern_.delete__.InitDefault();
  }
  _impl_.pattern_.delete__.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:google.api.HttpRule.delete)
}
inline std::string* PROTOBUF_NONNULL HttpRule::mutable_delete_()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_delete_();
  // @@protoc_insertion_point(field_mutable:google.api.HttpRule.delete)
  return _s;
}
inline const std::string& HttpRule::_internal_delete_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (pattern_case() != kDelete) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.pattern_.delete__.Get();
}
inline void HttpRule::_internal_set_delete_(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (pattern_case() != kDelete) {
    clear_pattern();

    set_has_delete_();
    _impl_.pattern_.delete__.InitDefault();
  }
  _impl_.pattern_.delete__.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL HttpRule::_internal_mutable_delete_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (pattern_case() != kDelete) {
    clear_pattern();

    set_has_delete_();
    _impl_.pattern_.delete__.InitDefault();
  }
  return _impl_.pattern_.delete__.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE HttpRule::release_delete_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:google.api.HttpRule.delete)
  if (pattern_case() != kDelete) {
    return nullptr;
  }
  clear_has_pattern();
  return _impl_.pattern_.delete__.Release();
}
inline void HttpRule::set_allocated_delete_(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_pattern()) {
    clear_pattern();
  }
  if (value != nullptr) {
    set_has_delete_();
    _impl_.pattern_.delete__.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.HttpRule.delete)
}

// string patch = 6;
inline bool HttpRule::has_patch() const {
  return pattern_case() == kPatch;
}
inline void HttpRule::set_has_patch() {
  _impl_._oneof_case_[0] = kPatch;
}
inline void HttpRule::clear_patch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (pattern_case() == kPatch) {
    _impl_.pattern_.patch_.Destroy();
    clear_has_pattern();
  }
}
inline const std::string& HttpRule::patch() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.api.HttpRule.patch)
  return _internal_patch();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void HttpRule::set_patch(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (pattern_case() != kPatch) {
    clear_pattern();

    set_has_patch();
    _impl_.pattern_.patch_.InitDefault();
  }
  _impl_.pattern_.patch_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:google.api.HttpRule.patch)
}
inline std::string* PROTOBUF_NONNULL HttpRule::mutable_patch()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_patch();
  // @@protoc_insertion_point(field_mutable:google.api.HttpRule.patch)
  return _s;
}
inline const std::string& HttpRule::_internal_patch() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (pattern_case() != kPatch) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.pattern_.patch_.Get();
}
inline void HttpRule::_internal_set_patch(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (pattern_case() != kPatch) {
    clear_pattern();

    set_has_patch();
    _impl_.pattern_.patch_.InitDefault();
  }
  _impl_.pattern_.patch_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL HttpRule::_internal_mutable_patch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (pattern_case() != kPatch) {
    clear_pattern();

    set_has_patch();
    _impl_.pattern_.patch_.InitDefault();
  }
  return _impl_.pattern_.patch_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE HttpRule::release_patch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:google.api.HttpRule.patch)
  if (pattern_case() != kPatch) {
    return nullptr;
  }
  clear_has_pattern();
  return _impl_.pattern_.patch_.Release();
}
inline void HttpRule::set_allocated_patch(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_pattern()) {
    clear_pattern();
  }
  if (value != nullptr) {
    set_has_patch();
    _impl_.pattern_.patch_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.HttpRule.patch)
}

// .google.api.CustomHttpPattern custom = 8;
inline bool HttpRule::has_custom() const {
  return pattern_case() == kCustom;
}
inline bool HttpRule::_internal_has_custom() const {
  return pattern_case() == kCustom;
}
inline void HttpRule::set_has_custom() {
  _impl_._oneof_case_[0] = kCustom;
}
inline void HttpRule::clear_custom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (pattern_case() == kCustom) {
    if (GetArena() == nullptr) {
      delete _impl_.pattern_.custom_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.pattern_.custom_);
    }
    clear_has_pattern();
  }
}
inline ::google::api::CustomHttpPattern* PROTOBUF_NULLABLE HttpRule::release_custom() {
  // @@protoc_insertion_point(field_release:google.api.HttpRule.custom)
  if (pattern_case() == kCustom) {
    clear_has_pattern();
    auto* temp = _impl_.pattern_.custom_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.pattern_.custom_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::api::CustomHttpPattern& HttpRule::_internal_custom() const {
  return pattern_case() == kCustom ? *_impl_.pattern_.custom_ : reinterpret_cast<::google::api::CustomHttpPattern&>(::google::api::_CustomHttpPattern_default_instance_);
}
inline const ::google::api::CustomHttpPattern& HttpRule::custom() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.api.HttpRule.custom)
  return _internal_custom();
}
inline ::google::api::CustomHttpPattern* PROTOBUF_NULLABLE HttpRule::unsafe_arena_release_custom() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.HttpRule.custom)
  if (pattern_case() == kCustom) {
    clear_has_pattern();
    auto* temp = _impl_.pattern_.custom_;
    _impl_.pattern_.custom_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void HttpRule::unsafe_arena_set_allocated_custom(
    ::google::api::CustomHttpPattern* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_pattern();
  if (value) {
    set_has_custom();
    _impl_.pattern_.custom_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.HttpRule.custom)
}
inline ::google::api::CustomHttpPattern* PROTOBUF_NONNULL HttpRule::_internal_mutable_custom() {
  if (pattern_case() != kCustom) {
    clear_pattern();
    set_has_custom();
    _impl_.pattern_.custom_ = 
        ::google::protobuf::Message::DefaultConstruct<::google::api::CustomHttpPattern>(GetArena());
  }
  return _impl_.pattern_.custom_;
}
inline ::google::api::CustomHttpPattern* PROTOBUF_NONNULL HttpRule::mutable_custom()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::api::CustomHttpPattern* _msg = _internal_mutable_custom();
  // @@protoc_insertion_point(field_mutable:google.api.HttpRule.custom)
  return _msg;
}

// string body = 7;
inline void HttpRule::clear_body() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.body_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& HttpRule::body() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.api.HttpRule.body)
  return _internal_body();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void HttpRule::set_body(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.body_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:google.api.HttpRule.body)
}
inline std::string* PROTOBUF_NONNULL HttpRule::mutable_body()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_body();
  // @@protoc_insertion_point(field_mutable:google.api.HttpRule.body)
  return _s;
}
inline const std::string& HttpRule::_internal_body() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.body_.Get();
}
inline void HttpRule::_internal_set_body(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.body_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL HttpRule::_internal_mutable_body() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.body_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE HttpRule::release_body() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:google.api.HttpRule.body)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.body_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.body_.Set("", GetArena());
  }
  return released;
}
inline void HttpRule::set_allocated_body(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.body_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.body_.IsDefault()) {
    _impl_.body_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.HttpRule.body)
}

// string response_body = 12;
inline void HttpRule::clear_response_body() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_body_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& HttpRule::response_body() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.api.HttpRule.response_body)
  return _internal_response_body();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void HttpRule::set_response_body(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.response_body_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:google.api.HttpRule.response_body)
}
inline std::string* PROTOBUF_NONNULL HttpRule::mutable_response_body()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_response_body();
  // @@protoc_insertion_point(field_mutable:google.api.HttpRule.response_body)
  return _s;
}
inline const std::string& HttpRule::_internal_response_body() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.response_body_.Get();
}
inline void HttpRule::_internal_set_response_body(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.response_body_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL HttpRule::_internal_mutable_response_body() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.response_body_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE HttpRule::release_response_body() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:google.api.HttpRule.response_body)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.response_body_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.response_body_.Set("", GetArena());
  }
  return released;
}
inline void HttpRule::set_allocated_response_body(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.response_body_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.response_body_.IsDefault()) {
    _impl_.response_body_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.HttpRule.response_body)
}

// repeated .google.api.HttpRule additional_bindings = 11;
inline int HttpRule::_internal_additional_bindings_size() const {
  return _internal_additional_bindings().size();
}
inline int HttpRule::additional_bindings_size() const {
  return _internal_additional_bindings_size();
}
inline void HttpRule::clear_additional_bindings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.additional_bindings_.Clear();
}
inline ::google::api::HttpRule* PROTOBUF_NONNULL HttpRule::mutable_additional_bindings(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:google.api.HttpRule.additional_bindings)
  return _internal_mutable_additional_bindings()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::google::api::HttpRule>* PROTOBUF_NONNULL HttpRule::mutable_additional_bindings()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:google.api.HttpRule.additional_bindings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_additional_bindings();
}
inline const ::google::api::HttpRule& HttpRule::additional_bindings(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.api.HttpRule.additional_bindings)
  return _internal_additional_bindings().Get(index);
}
inline ::google::api::HttpRule* PROTOBUF_NONNULL HttpRule::add_additional_bindings()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::api::HttpRule* _add = _internal_mutable_additional_bindings()->Add();
  // @@protoc_insertion_point(field_add:google.api.HttpRule.additional_bindings)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::google::api::HttpRule>& HttpRule::additional_bindings() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:google.api.HttpRule.additional_bindings)
  return _internal_additional_bindings();
}
inline const ::google::protobuf::RepeatedPtrField<::google::api::HttpRule>&
HttpRule::_internal_additional_bindings() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.additional_bindings_;
}
inline ::google::protobuf::RepeatedPtrField<::google::api::HttpRule>* PROTOBUF_NONNULL
HttpRule::_internal_mutable_additional_bindings() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.additional_bindings_;
}

inline bool HttpRule::has_pattern() const {
  return pattern_case() != PATTERN_NOT_SET;
}
inline void HttpRule::clear_has_pattern() {
  _impl_._oneof_case_[0] = PATTERN_NOT_SET;
}
inline HttpRule::PatternCase HttpRule::pattern_case() const {
  return HttpRule::PatternCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// CustomHttpPattern

// string kind = 1;
inline void CustomHttpPattern::clear_kind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CustomHttpPattern::kind() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.api.CustomHttpPattern.kind)
  return _internal_kind();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CustomHttpPattern::set_kind(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.kind_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:google.api.CustomHttpPattern.kind)
}
inline std::string* PROTOBUF_NONNULL CustomHttpPattern::mutable_kind()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_kind();
  // @@protoc_insertion_point(field_mutable:google.api.CustomHttpPattern.kind)
  return _s;
}
inline const std::string& CustomHttpPattern::_internal_kind() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.kind_.Get();
}
inline void CustomHttpPattern::_internal_set_kind(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.kind_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CustomHttpPattern::_internal_mutable_kind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.kind_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CustomHttpPattern::release_kind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:google.api.CustomHttpPattern.kind)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.kind_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.kind_.Set("", GetArena());
  }
  return released;
}
inline void CustomHttpPattern::set_allocated_kind(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.kind_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.kind_.IsDefault()) {
    _impl_.kind_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.CustomHttpPattern.kind)
}

// string path = 2;
inline void CustomHttpPattern::clear_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CustomHttpPattern::path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.api.CustomHttpPattern.path)
  return _internal_path();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CustomHttpPattern::set_path(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:google.api.CustomHttpPattern.path)
}
inline std::string* PROTOBUF_NONNULL CustomHttpPattern::mutable_path()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_path();
  // @@protoc_insertion_point(field_mutable:google.api.CustomHttpPattern.path)
  return _s;
}
inline const std::string& CustomHttpPattern::_internal_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.path_.Get();
}
inline void CustomHttpPattern::_internal_set_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.path_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CustomHttpPattern::_internal_mutable_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.path_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CustomHttpPattern::release_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:google.api.CustomHttpPattern.path)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.path_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.path_.Set("", GetArena());
  }
  return released;
}
inline void CustomHttpPattern::set_allocated_path(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.path_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.path_.IsDefault()) {
    _impl_.path_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.CustomHttpPattern.path)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace google


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // google_2fapi_2fhttp_2eproto_2epb_2eh
