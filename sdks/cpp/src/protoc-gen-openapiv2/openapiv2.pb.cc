// Copyright 2022 Google LLC All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This code was autogenerated. Do not edit directly.
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protoc-gen-openapiv2/options/openapiv2.proto

#include "protoc-gen-openapiv2/options/openapiv2.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace grpc {
namespace gateway {
namespace protoc_gen_openapiv2 {
namespace options {
constexpr Swagger_ResponsesEntry_DoNotUse::Swagger_ResponsesEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Swagger_ResponsesEntry_DoNotUseDefaultTypeInternal {
  constexpr Swagger_ResponsesEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Swagger_ResponsesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Swagger_ResponsesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Swagger_ResponsesEntry_DoNotUseDefaultTypeInternal _Swagger_ResponsesEntry_DoNotUse_default_instance_;
constexpr Swagger_ExtensionsEntry_DoNotUse::Swagger_ExtensionsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Swagger_ExtensionsEntry_DoNotUseDefaultTypeInternal {
  constexpr Swagger_ExtensionsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Swagger_ExtensionsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Swagger_ExtensionsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Swagger_ExtensionsEntry_DoNotUseDefaultTypeInternal _Swagger_ExtensionsEntry_DoNotUse_default_instance_;
constexpr Swagger::Swagger(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : schemes_()
  , _schemes_cached_byte_size_(0)
  , consumes_()
  , produces_()
  , responses_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , security_()
  , extensions_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , swagger_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , host_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , base_path_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , info_(nullptr)
  , security_definitions_(nullptr)
  , external_docs_(nullptr){}
struct SwaggerDefaultTypeInternal {
  constexpr SwaggerDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SwaggerDefaultTypeInternal() {}
  union {
    Swagger _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SwaggerDefaultTypeInternal _Swagger_default_instance_;
constexpr Operation_ResponsesEntry_DoNotUse::Operation_ResponsesEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Operation_ResponsesEntry_DoNotUseDefaultTypeInternal {
  constexpr Operation_ResponsesEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Operation_ResponsesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Operation_ResponsesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Operation_ResponsesEntry_DoNotUseDefaultTypeInternal _Operation_ResponsesEntry_DoNotUse_default_instance_;
constexpr Operation_ExtensionsEntry_DoNotUse::Operation_ExtensionsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Operation_ExtensionsEntry_DoNotUseDefaultTypeInternal {
  constexpr Operation_ExtensionsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Operation_ExtensionsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Operation_ExtensionsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Operation_ExtensionsEntry_DoNotUseDefaultTypeInternal _Operation_ExtensionsEntry_DoNotUse_default_instance_;
constexpr Operation::Operation(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : tags_()
  , consumes_()
  , produces_()
  , responses_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , schemes_()
  , _schemes_cached_byte_size_(0)
  , security_()
  , extensions_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , summary_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , operation_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , external_docs_(nullptr)
  , deprecated_(false){}
struct OperationDefaultTypeInternal {
  constexpr OperationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OperationDefaultTypeInternal() {}
  union {
    Operation _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT OperationDefaultTypeInternal _Operation_default_instance_;
constexpr Header::Header(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , type_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , format_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , default__(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pattern_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct HeaderDefaultTypeInternal {
  constexpr HeaderDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HeaderDefaultTypeInternal() {}
  union {
    Header _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HeaderDefaultTypeInternal _Header_default_instance_;
constexpr Response_HeadersEntry_DoNotUse::Response_HeadersEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Response_HeadersEntry_DoNotUseDefaultTypeInternal {
  constexpr Response_HeadersEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Response_HeadersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Response_HeadersEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Response_HeadersEntry_DoNotUseDefaultTypeInternal _Response_HeadersEntry_DoNotUse_default_instance_;
constexpr Response_ExamplesEntry_DoNotUse::Response_ExamplesEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Response_ExamplesEntry_DoNotUseDefaultTypeInternal {
  constexpr Response_ExamplesEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Response_ExamplesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Response_ExamplesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Response_ExamplesEntry_DoNotUseDefaultTypeInternal _Response_ExamplesEntry_DoNotUse_default_instance_;
constexpr Response_ExtensionsEntry_DoNotUse::Response_ExtensionsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Response_ExtensionsEntry_DoNotUseDefaultTypeInternal {
  constexpr Response_ExtensionsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Response_ExtensionsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Response_ExtensionsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Response_ExtensionsEntry_DoNotUseDefaultTypeInternal _Response_ExtensionsEntry_DoNotUse_default_instance_;
constexpr Response::Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : headers_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , examples_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , extensions_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , schema_(nullptr){}
struct ResponseDefaultTypeInternal {
  constexpr ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResponseDefaultTypeInternal() {}
  union {
    Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResponseDefaultTypeInternal _Response_default_instance_;
constexpr Info_ExtensionsEntry_DoNotUse::Info_ExtensionsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Info_ExtensionsEntry_DoNotUseDefaultTypeInternal {
  constexpr Info_ExtensionsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Info_ExtensionsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Info_ExtensionsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Info_ExtensionsEntry_DoNotUseDefaultTypeInternal _Info_ExtensionsEntry_DoNotUse_default_instance_;
constexpr Info::Info(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : extensions_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , title_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , terms_of_service_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , version_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , contact_(nullptr)
  , license_(nullptr){}
struct InfoDefaultTypeInternal {
  constexpr InfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~InfoDefaultTypeInternal() {}
  union {
    Info _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT InfoDefaultTypeInternal _Info_default_instance_;
constexpr Contact::Contact(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , url_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , email_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ContactDefaultTypeInternal {
  constexpr ContactDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ContactDefaultTypeInternal() {}
  union {
    Contact _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ContactDefaultTypeInternal _Contact_default_instance_;
constexpr License::License(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , url_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct LicenseDefaultTypeInternal {
  constexpr LicenseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~LicenseDefaultTypeInternal() {}
  union {
    License _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT LicenseDefaultTypeInternal _License_default_instance_;
constexpr ExternalDocumentation::ExternalDocumentation(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , url_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ExternalDocumentationDefaultTypeInternal {
  constexpr ExternalDocumentationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ExternalDocumentationDefaultTypeInternal() {}
  union {
    ExternalDocumentation _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ExternalDocumentationDefaultTypeInternal _ExternalDocumentation_default_instance_;
constexpr Schema::Schema(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : discriminator_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , example_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , json_schema_(nullptr)
  , external_docs_(nullptr)
  , read_only_(false){}
struct SchemaDefaultTypeInternal {
  constexpr SchemaDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SchemaDefaultTypeInternal() {}
  union {
    Schema _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SchemaDefaultTypeInternal _Schema_default_instance_;
constexpr JSONSchema_FieldConfiguration::JSONSchema_FieldConfiguration(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : path_param_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct JSONSchema_FieldConfigurationDefaultTypeInternal {
  constexpr JSONSchema_FieldConfigurationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~JSONSchema_FieldConfigurationDefaultTypeInternal() {}
  union {
    JSONSchema_FieldConfiguration _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT JSONSchema_FieldConfigurationDefaultTypeInternal _JSONSchema_FieldConfiguration_default_instance_;
constexpr JSONSchema_ExtensionsEntry_DoNotUse::JSONSchema_ExtensionsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct JSONSchema_ExtensionsEntry_DoNotUseDefaultTypeInternal {
  constexpr JSONSchema_ExtensionsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~JSONSchema_ExtensionsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    JSONSchema_ExtensionsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT JSONSchema_ExtensionsEntry_DoNotUseDefaultTypeInternal _JSONSchema_ExtensionsEntry_DoNotUse_default_instance_;
constexpr JSONSchema::JSONSchema(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : required_()
  , array_()
  , type_()
  , _type_cached_byte_size_(0)
  , enum__()
  , extensions_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , ref_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , title_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , default__(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , example_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pattern_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , format_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , field_configuration_(nullptr)
  , multiple_of_(0)
  , maximum_(0)
  , minimum_(0)
  , max_length_(uint64_t{0u})
  , min_length_(uint64_t{0u})
  , max_items_(uint64_t{0u})
  , min_items_(uint64_t{0u})
  , max_properties_(uint64_t{0u})
  , min_properties_(uint64_t{0u})
  , read_only_(false)
  , exclusive_maximum_(false)
  , exclusive_minimum_(false)
  , unique_items_(false){}
struct JSONSchemaDefaultTypeInternal {
  constexpr JSONSchemaDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~JSONSchemaDefaultTypeInternal() {}
  union {
    JSONSchema _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT JSONSchemaDefaultTypeInternal _JSONSchema_default_instance_;
constexpr Tag::Tag(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , external_docs_(nullptr){}
struct TagDefaultTypeInternal {
  constexpr TagDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TagDefaultTypeInternal() {}
  union {
    Tag _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TagDefaultTypeInternal _Tag_default_instance_;
constexpr SecurityDefinitions_SecurityEntry_DoNotUse::SecurityDefinitions_SecurityEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct SecurityDefinitions_SecurityEntry_DoNotUseDefaultTypeInternal {
  constexpr SecurityDefinitions_SecurityEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SecurityDefinitions_SecurityEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SecurityDefinitions_SecurityEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SecurityDefinitions_SecurityEntry_DoNotUseDefaultTypeInternal _SecurityDefinitions_SecurityEntry_DoNotUse_default_instance_;
constexpr SecurityDefinitions::SecurityDefinitions(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : security_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct SecurityDefinitionsDefaultTypeInternal {
  constexpr SecurityDefinitionsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SecurityDefinitionsDefaultTypeInternal() {}
  union {
    SecurityDefinitions _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SecurityDefinitionsDefaultTypeInternal _SecurityDefinitions_default_instance_;
constexpr SecurityScheme_ExtensionsEntry_DoNotUse::SecurityScheme_ExtensionsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct SecurityScheme_ExtensionsEntry_DoNotUseDefaultTypeInternal {
  constexpr SecurityScheme_ExtensionsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SecurityScheme_ExtensionsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SecurityScheme_ExtensionsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SecurityScheme_ExtensionsEntry_DoNotUseDefaultTypeInternal _SecurityScheme_ExtensionsEntry_DoNotUse_default_instance_;
constexpr SecurityScheme::SecurityScheme(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : extensions_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , authorization_url_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , token_url_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , scopes_(nullptr)
  , type_(0)

  , in_(0)

  , flow_(0)
{}
struct SecuritySchemeDefaultTypeInternal {
  constexpr SecuritySchemeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SecuritySchemeDefaultTypeInternal() {}
  union {
    SecurityScheme _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SecuritySchemeDefaultTypeInternal _SecurityScheme_default_instance_;
constexpr SecurityRequirement_SecurityRequirementValue::SecurityRequirement_SecurityRequirementValue(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : scope_(){}
struct SecurityRequirement_SecurityRequirementValueDefaultTypeInternal {
  constexpr SecurityRequirement_SecurityRequirementValueDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SecurityRequirement_SecurityRequirementValueDefaultTypeInternal() {}
  union {
    SecurityRequirement_SecurityRequirementValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SecurityRequirement_SecurityRequirementValueDefaultTypeInternal _SecurityRequirement_SecurityRequirementValue_default_instance_;
constexpr SecurityRequirement_SecurityRequirementEntry_DoNotUse::SecurityRequirement_SecurityRequirementEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct SecurityRequirement_SecurityRequirementEntry_DoNotUseDefaultTypeInternal {
  constexpr SecurityRequirement_SecurityRequirementEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SecurityRequirement_SecurityRequirementEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SecurityRequirement_SecurityRequirementEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SecurityRequirement_SecurityRequirementEntry_DoNotUseDefaultTypeInternal _SecurityRequirement_SecurityRequirementEntry_DoNotUse_default_instance_;
constexpr SecurityRequirement::SecurityRequirement(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : security_requirement_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct SecurityRequirementDefaultTypeInternal {
  constexpr SecurityRequirementDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SecurityRequirementDefaultTypeInternal() {}
  union {
    SecurityRequirement _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SecurityRequirementDefaultTypeInternal _SecurityRequirement_default_instance_;
constexpr Scopes_ScopeEntry_DoNotUse::Scopes_ScopeEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Scopes_ScopeEntry_DoNotUseDefaultTypeInternal {
  constexpr Scopes_ScopeEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Scopes_ScopeEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Scopes_ScopeEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Scopes_ScopeEntry_DoNotUseDefaultTypeInternal _Scopes_ScopeEntry_DoNotUse_default_instance_;
constexpr Scopes::Scopes(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : scope_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct ScopesDefaultTypeInternal {
  constexpr ScopesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ScopesDefaultTypeInternal() {}
  union {
    Scopes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ScopesDefaultTypeInternal _Scopes_default_instance_;
}  // namespace options
}  // namespace protoc_gen_openapiv2
}  // namespace gateway
}  // namespace grpc
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[30];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto = nullptr;

const uint32_t TableStruct_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ResponsesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ResponsesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ResponsesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ResponsesEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ExtensionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ExtensionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ExtensionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ExtensionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger, swagger_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger, info_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger, host_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger, base_path_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger, schemes_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger, consumes_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger, produces_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger, responses_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger, security_definitions_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger, security_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger, external_docs_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger, extensions_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation_ResponsesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation_ResponsesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation_ResponsesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation_ResponsesEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation_ExtensionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation_ExtensionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation_ExtensionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation_ExtensionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation, tags_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation, summary_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation, description_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation, external_docs_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation, operation_id_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation, consumes_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation, produces_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation, responses_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation, schemes_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation, deprecated_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation, security_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation, extensions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Header, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Header, description_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Header, type_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Header, format_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Header, default__),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Header, pattern_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response_HeadersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response_HeadersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response_HeadersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response_HeadersEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response_ExamplesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response_ExamplesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response_ExamplesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response_ExamplesEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response_ExtensionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response_ExtensionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response_ExtensionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response_ExtensionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response, description_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response, schema_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response, headers_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response, examples_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response, extensions_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Info_ExtensionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Info_ExtensionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Info_ExtensionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Info_ExtensionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Info, title_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Info, description_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Info, terms_of_service_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Info, contact_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Info, license_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Info, version_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Info, extensions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Contact, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Contact, name_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Contact, url_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Contact, email_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::License, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::License, name_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::License, url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation, description_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation, url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Schema, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Schema, json_schema_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Schema, discriminator_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Schema, read_only_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Schema, external_docs_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Schema, example_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema_FieldConfiguration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema_FieldConfiguration, path_param_name_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema_ExtensionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema_ExtensionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema_ExtensionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema_ExtensionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, ref_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, title_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, description_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, default__),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, read_only_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, example_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, multiple_of_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, maximum_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, exclusive_maximum_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, minimum_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, exclusive_minimum_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, max_length_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, min_length_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, pattern_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, max_items_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, min_items_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, unique_items_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, max_properties_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, min_properties_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, required_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, array_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, type_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, format_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, enum__),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, field_configuration_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, extensions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Tag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Tag, description_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Tag, external_docs_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions_SecurityEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions_SecurityEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions_SecurityEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions_SecurityEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions, security_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme_ExtensionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme_ExtensionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme_ExtensionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme_ExtensionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme, type_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme, description_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme, name_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme, in_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme, flow_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme, authorization_url_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme, token_url_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme, scopes_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme, extensions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementValue, scope_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement, security_requirement_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Scopes_ScopeEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Scopes_ScopeEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Scopes_ScopeEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Scopes_ScopeEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Scopes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Scopes, scope_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ResponsesEntry_DoNotUse)},
  { 10, 18, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ExtensionsEntry_DoNotUse)},
  { 20, -1, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Swagger)},
  { 38, 46, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Operation_ResponsesEntry_DoNotUse)},
  { 48, 56, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Operation_ExtensionsEntry_DoNotUse)},
  { 58, -1, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Operation)},
  { 76, -1, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Header)},
  { 87, 95, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Response_HeadersEntry_DoNotUse)},
  { 97, 105, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Response_ExamplesEntry_DoNotUse)},
  { 107, 115, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Response_ExtensionsEntry_DoNotUse)},
  { 117, -1, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Response)},
  { 128, 136, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Info_ExtensionsEntry_DoNotUse)},
  { 138, -1, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Info)},
  { 151, -1, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Contact)},
  { 160, -1, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::License)},
  { 168, -1, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation)},
  { 176, -1, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Schema)},
  { 187, -1, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema_FieldConfiguration)},
  { 194, 202, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema_ExtensionsEntry_DoNotUse)},
  { 204, -1, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema)},
  { 236, -1, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Tag)},
  { 244, 252, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions_SecurityEntry_DoNotUse)},
  { 254, -1, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions)},
  { 261, 269, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme_ExtensionsEntry_DoNotUse)},
  { 271, -1, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme)},
  { 286, -1, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementValue)},
  { 293, 301, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementEntry_DoNotUse)},
  { 303, -1, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement)},
  { 310, 318, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Scopes_ScopeEntry_DoNotUse)},
  { 320, -1, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Scopes)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Swagger_ResponsesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Swagger_ExtensionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Swagger_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Operation_ResponsesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Operation_ExtensionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Operation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Header_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Response_HeadersEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Response_ExamplesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Response_ExtensionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Info_ExtensionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Info_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Contact_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_License_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_ExternalDocumentation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Schema_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_JSONSchema_FieldConfiguration_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_JSONSchema_ExtensionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_JSONSchema_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Tag_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_SecurityDefinitions_SecurityEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_SecurityDefinitions_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_SecurityScheme_ExtensionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_SecurityScheme_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_SecurityRequirement_SecurityRequirementValue_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_SecurityRequirement_SecurityRequirementEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_SecurityRequirement_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Scopes_ScopeEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Scopes_default_instance_),
};

const char descriptor_table_protodef_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n,protoc-gen-openapiv2/options/openapiv2"
  ".proto\022)grpc.gateway.protoc_gen_openapiv"
  "2.options\032\034google/protobuf/struct.proto\""
  "\335\006\n\007Swagger\022\017\n\007swagger\030\001 \001(\t\022=\n\004info\030\002 \001"
  "(\0132/.grpc.gateway.protoc_gen_openapiv2.o"
  "ptions.Info\022\014\n\004host\030\003 \001(\t\022\021\n\tbase_path\030\004"
  " \001(\t\022B\n\007schemes\030\005 \003(\01621.grpc.gateway.pro"
  "toc_gen_openapiv2.options.Scheme\022\020\n\010cons"
  "umes\030\006 \003(\t\022\020\n\010produces\030\007 \003(\t\022T\n\tresponse"
  "s\030\n \003(\0132A.grpc.gateway.protoc_gen_openap"
  "iv2.options.Swagger.ResponsesEntry\022\\\n\024se"
  "curity_definitions\030\013 \001(\0132>.grpc.gateway."
  "protoc_gen_openapiv2.options.SecurityDef"
  "initions\022P\n\010security\030\014 \003(\0132>.grpc.gatewa"
  "y.protoc_gen_openapiv2.options.SecurityR"
  "equirement\022W\n\rexternal_docs\030\016 \001(\0132@.grpc"
  ".gateway.protoc_gen_openapiv2.options.Ex"
  "ternalDocumentation\022V\n\nextensions\030\017 \003(\0132"
  "B.grpc.gateway.protoc_gen_openapiv2.opti"
  "ons.Swagger.ExtensionsEntry\032e\n\016Responses"
  "Entry\022\013\n\003key\030\001 \001(\t\022B\n\005value\030\002 \001(\01323.grpc"
  ".gateway.protoc_gen_openapiv2.options.Re"
  "sponse:\0028\001\032I\n\017ExtensionsEntry\022\013\n\003key\030\001 \001"
  "(\t\022%\n\005value\030\002 \001(\0132\026.google.protobuf.Valu"
  "e:\0028\001J\004\010\010\020\tJ\004\010\t\020\nJ\004\010\r\020\016\"\346\005\n\tOperation\022\014\n"
  "\004tags\030\001 \003(\t\022\017\n\007summary\030\002 \001(\t\022\023\n\013descript"
  "ion\030\003 \001(\t\022W\n\rexternal_docs\030\004 \001(\0132@.grpc."
  "gateway.protoc_gen_openapiv2.options.Ext"
  "ernalDocumentation\022\024\n\014operation_id\030\005 \001(\t"
  "\022\020\n\010consumes\030\006 \003(\t\022\020\n\010produces\030\007 \003(\t\022V\n\t"
  "responses\030\t \003(\0132C.grpc.gateway.protoc_ge"
  "n_openapiv2.options.Operation.ResponsesE"
  "ntry\022B\n\007schemes\030\n \003(\01621.grpc.gateway.pro"
  "toc_gen_openapiv2.options.Scheme\022\022\n\ndepr"
  "ecated\030\013 \001(\010\022P\n\010security\030\014 \003(\0132>.grpc.ga"
  "teway.protoc_gen_openapiv2.options.Secur"
  "ityRequirement\022X\n\nextensions\030\r \003(\0132D.grp"
  "c.gateway.protoc_gen_openapiv2.options.O"
  "peration.ExtensionsEntry\032e\n\016ResponsesEnt"
  "ry\022\013\n\003key\030\001 \001(\t\022B\n\005value\030\002 \001(\01323.grpc.ga"
  "teway.protoc_gen_openapiv2.options.Respo"
  "nse:\0028\001\032I\n\017ExtensionsEntry\022\013\n\003key\030\001 \001(\t\022"
  "%\n\005value\030\002 \001(\0132\026.google.protobuf.Value:\002"
  "8\001J\004\010\010\020\t\"\253\001\n\006Header\022\023\n\013description\030\001 \001(\t"
  "\022\014\n\004type\030\002 \001(\t\022\016\n\006format\030\003 \001(\t\022\017\n\007defaul"
  "t\030\006 \001(\t\022\017\n\007pattern\030\r \001(\tJ\004\010\004\020\005J\004\010\005\020\006J\004\010\007"
  "\020\010J\004\010\010\020\tJ\004\010\t\020\nJ\004\010\n\020\013J\004\010\013\020\014J\004\010\014\020\rJ\004\010\016\020\017J\004"
  "\010\017\020\020J\004\010\020\020\021J\004\010\021\020\022J\004\010\022\020\023\"\302\004\n\010Response\022\023\n\013d"
  "escription\030\001 \001(\t\022A\n\006schema\030\002 \001(\01321.grpc."
  "gateway.protoc_gen_openapiv2.options.Sch"
  "ema\022Q\n\007headers\030\003 \003(\0132@.grpc.gateway.prot"
  "oc_gen_openapiv2.options.Response.Header"
  "sEntry\022S\n\010examples\030\004 \003(\0132A.grpc.gateway."
  "protoc_gen_openapiv2.options.Response.Ex"
  "amplesEntry\022W\n\nextensions\030\005 \003(\0132C.grpc.g"
  "ateway.protoc_gen_openapiv2.options.Resp"
  "onse.ExtensionsEntry\032a\n\014HeadersEntry\022\013\n\003"
  "key\030\001 \001(\t\022@\n\005value\030\002 \001(\01321.grpc.gateway."
  "protoc_gen_openapiv2.options.Header:\0028\001\032"
  "/\n\rExamplesEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002"
  " \001(\t:\0028\001\032I\n\017ExtensionsEntry\022\013\n\003key\030\001 \001(\t"
  "\022%\n\005value\030\002 \001(\0132\026.google.protobuf.Value:"
  "\0028\001\"\377\002\n\004Info\022\r\n\005title\030\001 \001(\t\022\023\n\013descripti"
  "on\030\002 \001(\t\022\030\n\020terms_of_service\030\003 \001(\t\022C\n\007co"
  "ntact\030\004 \001(\01322.grpc.gateway.protoc_gen_op"
  "enapiv2.options.Contact\022C\n\007license\030\005 \001(\013"
  "22.grpc.gateway.protoc_gen_openapiv2.opt"
  "ions.License\022\017\n\007version\030\006 \001(\t\022S\n\nextensi"
  "ons\030\007 \003(\0132\?.grpc.gateway.protoc_gen_open"
  "apiv2.options.Info.ExtensionsEntry\032I\n\017Ex"
  "tensionsEntry\022\013\n\003key\030\001 \001(\t\022%\n\005value\030\002 \001("
  "\0132\026.google.protobuf.Value:\0028\001\"3\n\007Contact"
  "\022\014\n\004name\030\001 \001(\t\022\013\n\003url\030\002 \001(\t\022\r\n\005email\030\003 \001"
  "(\t\"$\n\007License\022\014\n\004name\030\001 \001(\t\022\013\n\003url\030\002 \001(\t"
  "\"9\n\025ExternalDocumentation\022\023\n\013description"
  "\030\001 \001(\t\022\013\n\003url\030\002 \001(\t\"\356\001\n\006Schema\022J\n\013json_s"
  "chema\030\001 \001(\01325.grpc.gateway.protoc_gen_op"
  "enapiv2.options.JSONSchema\022\025\n\rdiscrimina"
  "tor\030\002 \001(\t\022\021\n\tread_only\030\003 \001(\010\022W\n\rexternal"
  "_docs\030\005 \001(\0132@.grpc.gateway.protoc_gen_op"
  "enapiv2.options.ExternalDocumentation\022\017\n"
  "\007example\030\006 \001(\tJ\004\010\004\020\005\"\242\010\n\nJSONSchema\022\013\n\003r"
  "ef\030\003 \001(\t\022\r\n\005title\030\005 \001(\t\022\023\n\013description\030\006"
  " \001(\t\022\017\n\007default\030\007 \001(\t\022\021\n\tread_only\030\010 \001(\010"
  "\022\017\n\007example\030\t \001(\t\022\023\n\013multiple_of\030\n \001(\001\022\017"
  "\n\007maximum\030\013 \001(\001\022\031\n\021exclusive_maximum\030\014 \001"
  "(\010\022\017\n\007minimum\030\r \001(\001\022\031\n\021exclusive_minimum"
  "\030\016 \001(\010\022\022\n\nmax_length\030\017 \001(\004\022\022\n\nmin_length"
  "\030\020 \001(\004\022\017\n\007pattern\030\021 \001(\t\022\021\n\tmax_items\030\024 \001"
  "(\004\022\021\n\tmin_items\030\025 \001(\004\022\024\n\014unique_items\030\026 "
  "\001(\010\022\026\n\016max_properties\030\030 \001(\004\022\026\n\016min_prope"
  "rties\030\031 \001(\004\022\020\n\010required\030\032 \003(\t\022\r\n\005array\030\""
  " \003(\t\022Y\n\004type\030# \003(\0162K.grpc.gateway.protoc"
  "_gen_openapiv2.options.JSONSchema.JSONSc"
  "hemaSimpleTypes\022\016\n\006format\030$ \001(\t\022\014\n\004enum\030"
  ". \003(\t\022f\n\023field_configuration\030\351\007 \001(\0132H.gr"
  "pc.gateway.protoc_gen_openapiv2.options."
  "JSONSchema.FieldConfiguration\022Y\n\nextensi"
  "ons\0300 \003(\0132E.grpc.gateway.protoc_gen_open"
  "apiv2.options.JSONSchema.ExtensionsEntry"
  "\032-\n\022FieldConfiguration\022\027\n\017path_param_nam"
  "e\030/ \001(\t\032I\n\017ExtensionsEntry\022\013\n\003key\030\001 \001(\t\022"
  "%\n\005value\030\002 \001(\0132\026.google.protobuf.Value:\002"
  "8\001\"w\n\025JSONSchemaSimpleTypes\022\013\n\007UNKNOWN\020\000"
  "\022\t\n\005ARRAY\020\001\022\013\n\007BOOLEAN\020\002\022\013\n\007INTEGER\020\003\022\010\n"
  "\004NULL\020\004\022\n\n\006NUMBER\020\005\022\n\n\006OBJECT\020\006\022\n\n\006STRIN"
  "G\020\007J\004\010\001\020\002J\004\010\002\020\003J\004\010\004\020\005J\004\010\022\020\023J\004\010\023\020\024J\004\010\027\020\030J"
  "\004\010\033\020\034J\004\010\034\020\035J\004\010\035\020\036J\004\010\036\020\"J\004\010%\020*J\004\010*\020+J\004\010+\020"
  ".\"y\n\003Tag\022\023\n\013description\030\002 \001(\t\022W\n\rexterna"
  "l_docs\030\003 \001(\0132@.grpc.gateway.protoc_gen_o"
  "penapiv2.options.ExternalDocumentationJ\004"
  "\010\001\020\002\"\341\001\n\023SecurityDefinitions\022^\n\010security"
  "\030\001 \003(\0132L.grpc.gateway.protoc_gen_openapi"
  "v2.options.SecurityDefinitions.SecurityE"
  "ntry\032j\n\rSecurityEntry\022\013\n\003key\030\001 \001(\t\022H\n\005va"
  "lue\030\002 \001(\01329.grpc.gateway.protoc_gen_open"
  "apiv2.options.SecurityScheme:\0028\001\"\240\006\n\016Sec"
  "urityScheme\022L\n\004type\030\001 \001(\0162>.grpc.gateway"
  ".protoc_gen_openapiv2.options.SecuritySc"
  "heme.Type\022\023\n\013description\030\002 \001(\t\022\014\n\004name\030\003"
  " \001(\t\022H\n\002in\030\004 \001(\0162<.grpc.gateway.protoc_g"
  "en_openapiv2.options.SecurityScheme.In\022L"
  "\n\004flow\030\005 \001(\0162>.grpc.gateway.protoc_gen_o"
  "penapiv2.options.SecurityScheme.Flow\022\031\n\021"
  "authorization_url\030\006 \001(\t\022\021\n\ttoken_url\030\007 \001"
  "(\t\022A\n\006scopes\030\010 \001(\01321.grpc.gateway.protoc"
  "_gen_openapiv2.options.Scopes\022]\n\nextensi"
  "ons\030\t \003(\0132I.grpc.gateway.protoc_gen_open"
  "apiv2.options.SecurityScheme.ExtensionsE"
  "ntry\032I\n\017ExtensionsEntry\022\013\n\003key\030\001 \001(\t\022%\n\005"
  "value\030\002 \001(\0132\026.google.protobuf.Value:\0028\001\""
  "K\n\004Type\022\020\n\014TYPE_INVALID\020\000\022\016\n\nTYPE_BASIC\020"
  "\001\022\020\n\014TYPE_API_KEY\020\002\022\017\n\013TYPE_OAUTH2\020\003\"1\n\002"
  "In\022\016\n\nIN_INVALID\020\000\022\014\n\010IN_QUERY\020\001\022\r\n\tIN_H"
  "EADER\020\002\"j\n\004Flow\022\020\n\014FLOW_INVALID\020\000\022\021\n\rFLO"
  "W_IMPLICIT\020\001\022\021\n\rFLOW_PASSWORD\020\002\022\024\n\020FLOW_"
  "APPLICATION\020\003\022\024\n\020FLOW_ACCESS_CODE\020\004\"\315\002\n\023"
  "SecurityRequirement\022u\n\024security_requirem"
  "ent\030\001 \003(\0132W.grpc.gateway.protoc_gen_open"
  "apiv2.options.SecurityRequirement.Securi"
  "tyRequirementEntry\032)\n\030SecurityRequiremen"
  "tValue\022\r\n\005scope\030\001 \003(\t\032\223\001\n\030SecurityRequir"
  "ementEntry\022\013\n\003key\030\001 \001(\t\022f\n\005value\030\002 \001(\0132W"
  ".grpc.gateway.protoc_gen_openapiv2.optio"
  "ns.SecurityRequirement.SecurityRequireme"
  "ntValue:\0028\001\"\203\001\n\006Scopes\022K\n\005scope\030\001 \003(\0132<."
  "grpc.gateway.protoc_gen_openapiv2.option"
  "s.Scopes.ScopeEntry\032,\n\nScopeEntry\022\013\n\003key"
  "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001*;\n\006Scheme\022\013\n\007U"
  "NKNOWN\020\000\022\010\n\004HTTP\020\001\022\t\n\005HTTPS\020\002\022\006\n\002WS\020\003\022\007\n"
  "\003WSS\020\004BHZFgithub.com/grpc-ecosystem/grpc"
  "-gateway/v2/protoc-gen-openapiv2/options"
  "b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto = {
  false, false, 6088, descriptor_table_protodef_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto, "protoc-gen-openapiv2/options/openapiv2.proto", 
  &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once, descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_deps, 1, 30,
  schemas, file_default_instances, TableStruct_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto::offsets,
  file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto, file_level_enum_descriptors_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto, file_level_service_descriptors_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter() {
  return &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto(&descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto);
namespace grpc {
namespace gateway {
namespace protoc_gen_openapiv2 {
namespace options {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* JSONSchema_JSONSchemaSimpleTypes_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto);
  return file_level_enum_descriptors_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[0];
}
bool JSONSchema_JSONSchemaSimpleTypes_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr JSONSchema_JSONSchemaSimpleTypes JSONSchema::UNKNOWN;
constexpr JSONSchema_JSONSchemaSimpleTypes JSONSchema::ARRAY;
constexpr JSONSchema_JSONSchemaSimpleTypes JSONSchema::BOOLEAN;
constexpr JSONSchema_JSONSchemaSimpleTypes JSONSchema::INTEGER;
constexpr JSONSchema_JSONSchemaSimpleTypes JSONSchema::NULL_;
constexpr JSONSchema_JSONSchemaSimpleTypes JSONSchema::NUMBER;
constexpr JSONSchema_JSONSchemaSimpleTypes JSONSchema::OBJECT;
constexpr JSONSchema_JSONSchemaSimpleTypes JSONSchema::STRING;
constexpr JSONSchema_JSONSchemaSimpleTypes JSONSchema::JSONSchemaSimpleTypes_MIN;
constexpr JSONSchema_JSONSchemaSimpleTypes JSONSchema::JSONSchemaSimpleTypes_MAX;
constexpr int JSONSchema::JSONSchemaSimpleTypes_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SecurityScheme_Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto);
  return file_level_enum_descriptors_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[1];
}
bool SecurityScheme_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr SecurityScheme_Type SecurityScheme::TYPE_INVALID;
constexpr SecurityScheme_Type SecurityScheme::TYPE_BASIC;
constexpr SecurityScheme_Type SecurityScheme::TYPE_API_KEY;
constexpr SecurityScheme_Type SecurityScheme::TYPE_OAUTH2;
constexpr SecurityScheme_Type SecurityScheme::Type_MIN;
constexpr SecurityScheme_Type SecurityScheme::Type_MAX;
constexpr int SecurityScheme::Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SecurityScheme_In_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto);
  return file_level_enum_descriptors_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[2];
}
bool SecurityScheme_In_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr SecurityScheme_In SecurityScheme::IN_INVALID;
constexpr SecurityScheme_In SecurityScheme::IN_QUERY;
constexpr SecurityScheme_In SecurityScheme::IN_HEADER;
constexpr SecurityScheme_In SecurityScheme::In_MIN;
constexpr SecurityScheme_In SecurityScheme::In_MAX;
constexpr int SecurityScheme::In_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SecurityScheme_Flow_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto);
  return file_level_enum_descriptors_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[3];
}
bool SecurityScheme_Flow_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr SecurityScheme_Flow SecurityScheme::FLOW_INVALID;
constexpr SecurityScheme_Flow SecurityScheme::FLOW_IMPLICIT;
constexpr SecurityScheme_Flow SecurityScheme::FLOW_PASSWORD;
constexpr SecurityScheme_Flow SecurityScheme::FLOW_APPLICATION;
constexpr SecurityScheme_Flow SecurityScheme::FLOW_ACCESS_CODE;
constexpr SecurityScheme_Flow SecurityScheme::Flow_MIN;
constexpr SecurityScheme_Flow SecurityScheme::Flow_MAX;
constexpr int SecurityScheme::Flow_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Scheme_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto);
  return file_level_enum_descriptors_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[4];
}
bool Scheme_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

Swagger_ResponsesEntry_DoNotUse::Swagger_ResponsesEntry_DoNotUse() {}
Swagger_ResponsesEntry_DoNotUse::Swagger_ResponsesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Swagger_ResponsesEntry_DoNotUse::MergeFrom(const Swagger_ResponsesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Swagger_ResponsesEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter, &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once,
      file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[0]);
}

// ===================================================================

Swagger_ExtensionsEntry_DoNotUse::Swagger_ExtensionsEntry_DoNotUse() {}
Swagger_ExtensionsEntry_DoNotUse::Swagger_ExtensionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Swagger_ExtensionsEntry_DoNotUse::MergeFrom(const Swagger_ExtensionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Swagger_ExtensionsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter, &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once,
      file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[1]);
}

// ===================================================================

class Swagger::_Internal {
 public:
  static const ::grpc::gateway::protoc_gen_openapiv2::options::Info& info(const Swagger* msg);
  static const ::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions& security_definitions(const Swagger* msg);
  static const ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation& external_docs(const Swagger* msg);
};

const ::grpc::gateway::protoc_gen_openapiv2::options::Info&
Swagger::_Internal::info(const Swagger* msg) {
  return *msg->info_;
}
const ::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions&
Swagger::_Internal::security_definitions(const Swagger* msg) {
  return *msg->security_definitions_;
}
const ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation&
Swagger::_Internal::external_docs(const Swagger* msg) {
  return *msg->external_docs_;
}
void Swagger::clear_extensions() {
  extensions_.Clear();
}
Swagger::Swagger(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  schemes_(arena),
  consumes_(arena),
  produces_(arena),
  responses_(arena),
  security_(arena),
  extensions_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.Swagger)
}
Swagger::Swagger(const Swagger& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      schemes_(from.schemes_),
      consumes_(from.consumes_),
      produces_(from.produces_),
      security_(from.security_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  responses_.MergeFrom(from.responses_);
  extensions_.MergeFrom(from.extensions_);
  swagger_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    swagger_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_swagger().empty()) {
    swagger_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_swagger(), 
      GetArenaForAllocation());
  }
  host_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    host_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_host().empty()) {
    host_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_host(), 
      GetArenaForAllocation());
  }
  base_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    base_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_base_path().empty()) {
    base_path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_base_path(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc::gateway::protoc_gen_openapiv2::options::Info(*from.info_);
  } else {
    info_ = nullptr;
  }
  if (from._internal_has_security_definitions()) {
    security_definitions_ = new ::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions(*from.security_definitions_);
  } else {
    security_definitions_ = nullptr;
  }
  if (from._internal_has_external_docs()) {
    external_docs_ = new ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation(*from.external_docs_);
  } else {
    external_docs_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.Swagger)
}

inline void Swagger::SharedCtor() {
swagger_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  swagger_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
host_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  host_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
base_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  base_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&info_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&external_docs_) -
    reinterpret_cast<char*>(&info_)) + sizeof(external_docs_));
}

Swagger::~Swagger() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.Swagger)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Swagger::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  swagger_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  host_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  base_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete info_;
  if (this != internal_default_instance()) delete security_definitions_;
  if (this != internal_default_instance()) delete external_docs_;
}

void Swagger::ArenaDtor(void* object) {
  Swagger* _this = reinterpret_cast< Swagger* >(object);
  (void)_this;
  _this->responses_. ~MapField();
  _this->extensions_. ~MapField();
}
inline void Swagger::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &Swagger::ArenaDtor);
  }
}
void Swagger::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Swagger::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.Swagger)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  schemes_.Clear();
  consumes_.Clear();
  produces_.Clear();
  responses_.Clear();
  security_.Clear();
  extensions_.Clear();
  swagger_.ClearToEmpty();
  host_.ClearToEmpty();
  base_path_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  if (GetArenaForAllocation() == nullptr && security_definitions_ != nullptr) {
    delete security_definitions_;
  }
  security_definitions_ = nullptr;
  if (GetArenaForAllocation() == nullptr && external_docs_ != nullptr) {
    delete external_docs_;
  }
  external_docs_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Swagger::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string swagger = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_swagger();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Swagger.swagger"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpc.gateway.protoc_gen_openapiv2.options.Info info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string host = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_host();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Swagger.host"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string base_path = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_base_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Swagger.base_path"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .grpc.gateway.protoc_gen_openapiv2.options.Scheme schemes = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_schemes(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 40) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_schemes(static_cast<::grpc::gateway::protoc_gen_openapiv2::options::Scheme>(val));
        } else
          goto handle_unusual;
        continue;
      // repeated string consumes = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_consumes();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Swagger.consumes"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated string produces = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_produces();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Swagger.produces"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, .grpc.gateway.protoc_gen_openapiv2.options.Response> responses = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&responses_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions security_definitions = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_security_definitions(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement security = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_security(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<98>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation external_docs = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_external_docs(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, .google.protobuf.Value> extensions = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&extensions_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<122>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Swagger::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.Swagger)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string swagger = 1;
  if (!this->_internal_swagger().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_swagger().data(), static_cast<int>(this->_internal_swagger().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Swagger.swagger");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_swagger(), target);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.Info info = 2;
  if (this->_internal_has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::info(this), target, stream);
  }

  // string host = 3;
  if (!this->_internal_host().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_host().data(), static_cast<int>(this->_internal_host().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Swagger.host");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_host(), target);
  }

  // string base_path = 4;
  if (!this->_internal_base_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_base_path().data(), static_cast<int>(this->_internal_base_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Swagger.base_path");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_base_path(), target);
  }

  // repeated .grpc.gateway.protoc_gen_openapiv2.options.Scheme schemes = 5;
  {
    int byte_size = _schemes_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          5, schemes_, byte_size, target);
    }
  }

  // repeated string consumes = 6;
  for (int i = 0, n = this->_internal_consumes_size(); i < n; i++) {
    const auto& s = this->_internal_consumes(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Swagger.consumes");
    target = stream->WriteString(6, s, target);
  }

  // repeated string produces = 7;
  for (int i = 0, n = this->_internal_produces_size(); i < n; i++) {
    const auto& s = this->_internal_produces(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Swagger.produces");
    target = stream->WriteString(7, s, target);
  }

  // map<string, .grpc.gateway.protoc_gen_openapiv2.options.Response> responses = 10;
  if (!this->_internal_responses().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::Response >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc.gateway.protoc_gen_openapiv2.options.Swagger.ResponsesEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_responses().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_responses().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::Response >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::Response >::const_iterator
          it = this->_internal_responses().begin();
          it != this->_internal_responses().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Swagger_ResponsesEntry_DoNotUse::Funcs::InternalSerialize(10, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::Response >::const_iterator
          it = this->_internal_responses().begin();
          it != this->_internal_responses().end(); ++it) {
        target = Swagger_ResponsesEntry_DoNotUse::Funcs::InternalSerialize(10, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions security_definitions = 11;
  if (this->_internal_has_security_definitions()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::security_definitions(this), target, stream);
  }

  // repeated .grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement security = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_security_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, this->_internal_security(i), target, stream);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation external_docs = 14;
  if (this->_internal_has_external_docs()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        14, _Internal::external_docs(this), target, stream);
  }

  // map<string, .google.protobuf.Value> extensions = 15;
  if (!this->_internal_extensions().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Value >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc.gateway.protoc_gen_openapiv2.options.Swagger.ExtensionsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_extensions().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_extensions().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Value >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Value >::const_iterator
          it = this->_internal_extensions().begin();
          it != this->_internal_extensions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Swagger_ExtensionsEntry_DoNotUse::Funcs::InternalSerialize(15, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Value >::const_iterator
          it = this->_internal_extensions().begin();
          it != this->_internal_extensions().end(); ++it) {
        target = Swagger_ExtensionsEntry_DoNotUse::Funcs::InternalSerialize(15, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.Swagger)
  return target;
}

size_t Swagger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.Swagger)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc.gateway.protoc_gen_openapiv2.options.Scheme schemes = 5;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_schemes_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_schemes(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _schemes_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated string consumes = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(consumes_.size());
  for (int i = 0, n = consumes_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      consumes_.Get(i));
  }

  // repeated string produces = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(produces_.size());
  for (int i = 0, n = produces_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      produces_.Get(i));
  }

  // map<string, .grpc.gateway.protoc_gen_openapiv2.options.Response> responses = 10;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_responses_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::Response >::const_iterator
      it = this->_internal_responses().begin();
      it != this->_internal_responses().end(); ++it) {
    total_size += Swagger_ResponsesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // repeated .grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement security = 12;
  total_size += 1UL * this->_internal_security_size();
  for (const auto& msg : this->security_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // map<string, .google.protobuf.Value> extensions = 15;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_extensions_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Value >::const_iterator
      it = this->_internal_extensions().begin();
      it != this->_internal_extensions().end(); ++it) {
    total_size += Swagger_ExtensionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string swagger = 1;
  if (!this->_internal_swagger().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_swagger());
  }

  // string host = 3;
  if (!this->_internal_host().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_host());
  }

  // string base_path = 4;
  if (!this->_internal_base_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_base_path());
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.Info info = 2;
  if (this->_internal_has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions security_definitions = 11;
  if (this->_internal_has_security_definitions()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *security_definitions_);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation external_docs = 14;
  if (this->_internal_has_external_docs()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *external_docs_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Swagger::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Swagger::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Swagger::GetClassData() const { return &_class_data_; }

void Swagger::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Swagger *>(to)->MergeFrom(
      static_cast<const Swagger &>(from));
}


void Swagger::MergeFrom(const Swagger& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.Swagger)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  schemes_.MergeFrom(from.schemes_);
  consumes_.MergeFrom(from.consumes_);
  produces_.MergeFrom(from.produces_);
  responses_.MergeFrom(from.responses_);
  security_.MergeFrom(from.security_);
  extensions_.MergeFrom(from.extensions_);
  if (!from._internal_swagger().empty()) {
    _internal_set_swagger(from._internal_swagger());
  }
  if (!from._internal_host().empty()) {
    _internal_set_host(from._internal_host());
  }
  if (!from._internal_base_path().empty()) {
    _internal_set_base_path(from._internal_base_path());
  }
  if (from._internal_has_info()) {
    _internal_mutable_info()->::grpc::gateway::protoc_gen_openapiv2::options::Info::MergeFrom(from._internal_info());
  }
  if (from._internal_has_security_definitions()) {
    _internal_mutable_security_definitions()->::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions::MergeFrom(from._internal_security_definitions());
  }
  if (from._internal_has_external_docs()) {
    _internal_mutable_external_docs()->::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation::MergeFrom(from._internal_external_docs());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Swagger::CopyFrom(const Swagger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.Swagger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Swagger::IsInitialized() const {
  return true;
}

void Swagger::InternalSwap(Swagger* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  schemes_.InternalSwap(&other->schemes_);
  consumes_.InternalSwap(&other->consumes_);
  produces_.InternalSwap(&other->produces_);
  responses_.InternalSwap(&other->responses_);
  security_.InternalSwap(&other->security_);
  extensions_.InternalSwap(&other->extensions_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &swagger_, lhs_arena,
      &other->swagger_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &host_, lhs_arena,
      &other->host_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &base_path_, lhs_arena,
      &other->base_path_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Swagger, external_docs_)
      + sizeof(Swagger::external_docs_)
      - PROTOBUF_FIELD_OFFSET(Swagger, info_)>(
          reinterpret_cast<char*>(&info_),
          reinterpret_cast<char*>(&other->info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Swagger::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter, &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once,
      file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[2]);
}

// ===================================================================

Operation_ResponsesEntry_DoNotUse::Operation_ResponsesEntry_DoNotUse() {}
Operation_ResponsesEntry_DoNotUse::Operation_ResponsesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Operation_ResponsesEntry_DoNotUse::MergeFrom(const Operation_ResponsesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Operation_ResponsesEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter, &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once,
      file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[3]);
}

// ===================================================================

Operation_ExtensionsEntry_DoNotUse::Operation_ExtensionsEntry_DoNotUse() {}
Operation_ExtensionsEntry_DoNotUse::Operation_ExtensionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Operation_ExtensionsEntry_DoNotUse::MergeFrom(const Operation_ExtensionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Operation_ExtensionsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter, &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once,
      file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[4]);
}

// ===================================================================

class Operation::_Internal {
 public:
  static const ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation& external_docs(const Operation* msg);
};

const ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation&
Operation::_Internal::external_docs(const Operation* msg) {
  return *msg->external_docs_;
}
void Operation::clear_extensions() {
  extensions_.Clear();
}
Operation::Operation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  tags_(arena),
  consumes_(arena),
  produces_(arena),
  responses_(arena),
  schemes_(arena),
  security_(arena),
  extensions_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.Operation)
}
Operation::Operation(const Operation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      tags_(from.tags_),
      consumes_(from.consumes_),
      produces_(from.produces_),
      schemes_(from.schemes_),
      security_(from.security_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  responses_.MergeFrom(from.responses_);
  extensions_.MergeFrom(from.extensions_);
  summary_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    summary_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_summary().empty()) {
    summary_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_summary(), 
      GetArenaForAllocation());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArenaForAllocation());
  }
  operation_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    operation_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_operation_id().empty()) {
    operation_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_operation_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_external_docs()) {
    external_docs_ = new ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation(*from.external_docs_);
  } else {
    external_docs_ = nullptr;
  }
  deprecated_ = from.deprecated_;
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.Operation)
}

inline void Operation::SharedCtor() {
summary_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  summary_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
operation_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  operation_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&external_docs_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&deprecated_) -
    reinterpret_cast<char*>(&external_docs_)) + sizeof(deprecated_));
}

Operation::~Operation() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.Operation)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Operation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  summary_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  operation_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete external_docs_;
}

void Operation::ArenaDtor(void* object) {
  Operation* _this = reinterpret_cast< Operation* >(object);
  (void)_this;
  _this->responses_. ~MapField();
  _this->extensions_. ~MapField();
}
inline void Operation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &Operation::ArenaDtor);
  }
}
void Operation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Operation::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.Operation)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  consumes_.Clear();
  produces_.Clear();
  responses_.Clear();
  schemes_.Clear();
  security_.Clear();
  extensions_.Clear();
  summary_.ClearToEmpty();
  description_.ClearToEmpty();
  operation_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && external_docs_ != nullptr) {
    delete external_docs_;
  }
  external_docs_ = nullptr;
  deprecated_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Operation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string tags = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_tags();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Operation.tags"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string summary = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_summary();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Operation.summary"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Operation.description"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation external_docs = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_external_docs(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string operation_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_operation_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Operation.operation_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string consumes = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_consumes();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Operation.consumes"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated string produces = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_produces();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Operation.produces"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, .grpc.gateway.protoc_gen_openapiv2.options.Response> responses = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&responses_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .grpc.gateway.protoc_gen_openapiv2.options.Scheme schemes = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_schemes(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 80) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_schemes(static_cast<::grpc::gateway::protoc_gen_openapiv2::options::Scheme>(val));
        } else
          goto handle_unusual;
        continue;
      // bool deprecated = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          deprecated_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement security = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_security(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<98>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, .google.protobuf.Value> extensions = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&extensions_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Operation::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.Operation)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string tags = 1;
  for (int i = 0, n = this->_internal_tags_size(); i < n; i++) {
    const auto& s = this->_internal_tags(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Operation.tags");
    target = stream->WriteString(1, s, target);
  }

  // string summary = 2;
  if (!this->_internal_summary().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_summary().data(), static_cast<int>(this->_internal_summary().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Operation.summary");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_summary(), target);
  }

  // string description = 3;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Operation.description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation external_docs = 4;
  if (this->_internal_has_external_docs()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::external_docs(this), target, stream);
  }

  // string operation_id = 5;
  if (!this->_internal_operation_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_operation_id().data(), static_cast<int>(this->_internal_operation_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Operation.operation_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_operation_id(), target);
  }

  // repeated string consumes = 6;
  for (int i = 0, n = this->_internal_consumes_size(); i < n; i++) {
    const auto& s = this->_internal_consumes(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Operation.consumes");
    target = stream->WriteString(6, s, target);
  }

  // repeated string produces = 7;
  for (int i = 0, n = this->_internal_produces_size(); i < n; i++) {
    const auto& s = this->_internal_produces(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Operation.produces");
    target = stream->WriteString(7, s, target);
  }

  // map<string, .grpc.gateway.protoc_gen_openapiv2.options.Response> responses = 9;
  if (!this->_internal_responses().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::Response >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc.gateway.protoc_gen_openapiv2.options.Operation.ResponsesEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_responses().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_responses().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::Response >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::Response >::const_iterator
          it = this->_internal_responses().begin();
          it != this->_internal_responses().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Operation_ResponsesEntry_DoNotUse::Funcs::InternalSerialize(9, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::Response >::const_iterator
          it = this->_internal_responses().begin();
          it != this->_internal_responses().end(); ++it) {
        target = Operation_ResponsesEntry_DoNotUse::Funcs::InternalSerialize(9, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // repeated .grpc.gateway.protoc_gen_openapiv2.options.Scheme schemes = 10;
  {
    int byte_size = _schemes_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          10, schemes_, byte_size, target);
    }
  }

  // bool deprecated = 11;
  if (this->_internal_deprecated() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(11, this->_internal_deprecated(), target);
  }

  // repeated .grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement security = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_security_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, this->_internal_security(i), target, stream);
  }

  // map<string, .google.protobuf.Value> extensions = 13;
  if (!this->_internal_extensions().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Value >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc.gateway.protoc_gen_openapiv2.options.Operation.ExtensionsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_extensions().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_extensions().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Value >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Value >::const_iterator
          it = this->_internal_extensions().begin();
          it != this->_internal_extensions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Operation_ExtensionsEntry_DoNotUse::Funcs::InternalSerialize(13, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Value >::const_iterator
          it = this->_internal_extensions().begin();
          it != this->_internal_extensions().end(); ++it) {
        target = Operation_ExtensionsEntry_DoNotUse::Funcs::InternalSerialize(13, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.Operation)
  return target;
}

size_t Operation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.Operation)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string tags = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(tags_.size());
  for (int i = 0, n = tags_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      tags_.Get(i));
  }

  // repeated string consumes = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(consumes_.size());
  for (int i = 0, n = consumes_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      consumes_.Get(i));
  }

  // repeated string produces = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(produces_.size());
  for (int i = 0, n = produces_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      produces_.Get(i));
  }

  // map<string, .grpc.gateway.protoc_gen_openapiv2.options.Response> responses = 9;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_responses_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::Response >::const_iterator
      it = this->_internal_responses().begin();
      it != this->_internal_responses().end(); ++it) {
    total_size += Operation_ResponsesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // repeated .grpc.gateway.protoc_gen_openapiv2.options.Scheme schemes = 10;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_schemes_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_schemes(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _schemes_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement security = 12;
  total_size += 1UL * this->_internal_security_size();
  for (const auto& msg : this->security_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // map<string, .google.protobuf.Value> extensions = 13;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_extensions_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Value >::const_iterator
      it = this->_internal_extensions().begin();
      it != this->_internal_extensions().end(); ++it) {
    total_size += Operation_ExtensionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string summary = 2;
  if (!this->_internal_summary().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_summary());
  }

  // string description = 3;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string operation_id = 5;
  if (!this->_internal_operation_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_operation_id());
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation external_docs = 4;
  if (this->_internal_has_external_docs()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *external_docs_);
  }

  // bool deprecated = 11;
  if (this->_internal_deprecated() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Operation::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Operation::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Operation::GetClassData() const { return &_class_data_; }

void Operation::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Operation *>(to)->MergeFrom(
      static_cast<const Operation &>(from));
}


void Operation::MergeFrom(const Operation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.Operation)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  consumes_.MergeFrom(from.consumes_);
  produces_.MergeFrom(from.produces_);
  responses_.MergeFrom(from.responses_);
  schemes_.MergeFrom(from.schemes_);
  security_.MergeFrom(from.security_);
  extensions_.MergeFrom(from.extensions_);
  if (!from._internal_summary().empty()) {
    _internal_set_summary(from._internal_summary());
  }
  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  if (!from._internal_operation_id().empty()) {
    _internal_set_operation_id(from._internal_operation_id());
  }
  if (from._internal_has_external_docs()) {
    _internal_mutable_external_docs()->::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation::MergeFrom(from._internal_external_docs());
  }
  if (from._internal_deprecated() != 0) {
    _internal_set_deprecated(from._internal_deprecated());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Operation::CopyFrom(const Operation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.Operation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Operation::IsInitialized() const {
  return true;
}

void Operation::InternalSwap(Operation* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  tags_.InternalSwap(&other->tags_);
  consumes_.InternalSwap(&other->consumes_);
  produces_.InternalSwap(&other->produces_);
  responses_.InternalSwap(&other->responses_);
  schemes_.InternalSwap(&other->schemes_);
  security_.InternalSwap(&other->security_);
  extensions_.InternalSwap(&other->extensions_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &summary_, lhs_arena,
      &other->summary_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &operation_id_, lhs_arena,
      &other->operation_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Operation, deprecated_)
      + sizeof(Operation::deprecated_)
      - PROTOBUF_FIELD_OFFSET(Operation, external_docs_)>(
          reinterpret_cast<char*>(&external_docs_),
          reinterpret_cast<char*>(&other->external_docs_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Operation::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter, &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once,
      file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[5]);
}

// ===================================================================

class Header::_Internal {
 public:
};

Header::Header(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.Header)
}
Header::Header(const Header& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArenaForAllocation());
  }
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type().empty()) {
    type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_type(), 
      GetArenaForAllocation());
  }
  format_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    format_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_format().empty()) {
    format_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_format(), 
      GetArenaForAllocation());
  }
  default__.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    default__.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_default_().empty()) {
    default__.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_default_(), 
      GetArenaForAllocation());
  }
  pattern_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    pattern_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pattern().empty()) {
    pattern_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pattern(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.Header)
}

inline void Header::SharedCtor() {
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
format_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  format_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
default__.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  default__.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
pattern_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  pattern_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Header::~Header() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.Header)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Header::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  format_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  default__.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pattern_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Header::ArenaDtor(void* object) {
  Header* _this = reinterpret_cast< Header* >(object);
  (void)_this;
}
void Header::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Header::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Header::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.Header)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  description_.ClearToEmpty();
  type_.ClearToEmpty();
  format_.ClearToEmpty();
  default__.ClearToEmpty();
  pattern_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Header::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string description = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Header.description"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Header.type"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string format = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_format();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Header.format"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string default = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_default_();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Header.default"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string pattern = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          auto str = _internal_mutable_pattern();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Header.pattern"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Header::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.Header)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string description = 1;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Header.description");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_description(), target);
  }

  // string type = 2;
  if (!this->_internal_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Header.type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_type(), target);
  }

  // string format = 3;
  if (!this->_internal_format().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_format().data(), static_cast<int>(this->_internal_format().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Header.format");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_format(), target);
  }

  // string default = 6;
  if (!this->_internal_default_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_default_().data(), static_cast<int>(this->_internal_default_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Header.default");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_default_(), target);
  }

  // string pattern = 13;
  if (!this->_internal_pattern().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pattern().data(), static_cast<int>(this->_internal_pattern().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Header.pattern");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_pattern(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.Header)
  return target;
}

size_t Header::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.Header)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string description = 1;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string type = 2;
  if (!this->_internal_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string format = 3;
  if (!this->_internal_format().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_format());
  }

  // string default = 6;
  if (!this->_internal_default_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_default_());
  }

  // string pattern = 13;
  if (!this->_internal_pattern().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pattern());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Header::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Header::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Header::GetClassData() const { return &_class_data_; }

void Header::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Header *>(to)->MergeFrom(
      static_cast<const Header &>(from));
}


void Header::MergeFrom(const Header& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.Header)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  if (!from._internal_type().empty()) {
    _internal_set_type(from._internal_type());
  }
  if (!from._internal_format().empty()) {
    _internal_set_format(from._internal_format());
  }
  if (!from._internal_default_().empty()) {
    _internal_set_default_(from._internal_default_());
  }
  if (!from._internal_pattern().empty()) {
    _internal_set_pattern(from._internal_pattern());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Header::CopyFrom(const Header& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Header::IsInitialized() const {
  return true;
}

void Header::InternalSwap(Header* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &type_, lhs_arena,
      &other->type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &format_, lhs_arena,
      &other->format_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &default__, lhs_arena,
      &other->default__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &pattern_, lhs_arena,
      &other->pattern_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Header::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter, &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once,
      file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[6]);
}

// ===================================================================

Response_HeadersEntry_DoNotUse::Response_HeadersEntry_DoNotUse() {}
Response_HeadersEntry_DoNotUse::Response_HeadersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Response_HeadersEntry_DoNotUse::MergeFrom(const Response_HeadersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Response_HeadersEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter, &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once,
      file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[7]);
}

// ===================================================================

Response_ExamplesEntry_DoNotUse::Response_ExamplesEntry_DoNotUse() {}
Response_ExamplesEntry_DoNotUse::Response_ExamplesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Response_ExamplesEntry_DoNotUse::MergeFrom(const Response_ExamplesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Response_ExamplesEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter, &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once,
      file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[8]);
}

// ===================================================================

Response_ExtensionsEntry_DoNotUse::Response_ExtensionsEntry_DoNotUse() {}
Response_ExtensionsEntry_DoNotUse::Response_ExtensionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Response_ExtensionsEntry_DoNotUse::MergeFrom(const Response_ExtensionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Response_ExtensionsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter, &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once,
      file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[9]);
}

// ===================================================================

class Response::_Internal {
 public:
  static const ::grpc::gateway::protoc_gen_openapiv2::options::Schema& schema(const Response* msg);
};

const ::grpc::gateway::protoc_gen_openapiv2::options::Schema&
Response::_Internal::schema(const Response* msg) {
  return *msg->schema_;
}
void Response::clear_extensions() {
  extensions_.Clear();
}
Response::Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  headers_(arena),
  examples_(arena),
  extensions_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.Response)
}
Response::Response(const Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  headers_.MergeFrom(from.headers_);
  examples_.MergeFrom(from.examples_);
  extensions_.MergeFrom(from.extensions_);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_schema()) {
    schema_ = new ::grpc::gateway::protoc_gen_openapiv2::options::Schema(*from.schema_);
  } else {
    schema_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.Response)
}

inline void Response::SharedCtor() {
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
schema_ = nullptr;
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.Response)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete schema_;
}

void Response::ArenaDtor(void* object) {
  Response* _this = reinterpret_cast< Response* >(object);
  (void)_this;
  _this->headers_. ~MapField();
  _this->examples_. ~MapField();
  _this->extensions_. ~MapField();
}
inline void Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &Response::ArenaDtor);
  }
}
void Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  headers_.Clear();
  examples_.Clear();
  extensions_.Clear();
  description_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && schema_ != nullptr) {
    delete schema_;
  }
  schema_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string description = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Response.description"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpc.gateway.protoc_gen_openapiv2.options.Schema schema = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_schema(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, .grpc.gateway.protoc_gen_openapiv2.options.Header> headers = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&headers_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, string> examples = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&examples_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, .google.protobuf.Value> extensions = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&extensions_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string description = 1;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Response.description");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_description(), target);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.Schema schema = 2;
  if (this->_internal_has_schema()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::schema(this), target, stream);
  }

  // map<string, .grpc.gateway.protoc_gen_openapiv2.options.Header> headers = 3;
  if (!this->_internal_headers().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::Header >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc.gateway.protoc_gen_openapiv2.options.Response.HeadersEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_headers().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_headers().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::Header >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::Header >::const_iterator
          it = this->_internal_headers().begin();
          it != this->_internal_headers().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Response_HeadersEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::Header >::const_iterator
          it = this->_internal_headers().begin();
          it != this->_internal_headers().end(); ++it) {
        target = Response_HeadersEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, string> examples = 4;
  if (!this->_internal_examples().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc.gateway.protoc_gen_openapiv2.options.Response.ExamplesEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc.gateway.protoc_gen_openapiv2.options.Response.ExamplesEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_examples().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_examples().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_examples().begin();
          it != this->_internal_examples().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Response_ExamplesEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_examples().begin();
          it != this->_internal_examples().end(); ++it) {
        target = Response_ExamplesEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, .google.protobuf.Value> extensions = 5;
  if (!this->_internal_extensions().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Value >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc.gateway.protoc_gen_openapiv2.options.Response.ExtensionsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_extensions().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_extensions().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Value >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Value >::const_iterator
          it = this->_internal_extensions().begin();
          it != this->_internal_extensions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Response_ExtensionsEntry_DoNotUse::Funcs::InternalSerialize(5, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Value >::const_iterator
          it = this->_internal_extensions().begin();
          it != this->_internal_extensions().end(); ++it) {
        target = Response_ExtensionsEntry_DoNotUse::Funcs::InternalSerialize(5, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .grpc.gateway.protoc_gen_openapiv2.options.Header> headers = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_headers_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::Header >::const_iterator
      it = this->_internal_headers().begin();
      it != this->_internal_headers().end(); ++it) {
    total_size += Response_HeadersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, string> examples = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_examples_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_examples().begin();
      it != this->_internal_examples().end(); ++it) {
    total_size += Response_ExamplesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, .google.protobuf.Value> extensions = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_extensions_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Value >::const_iterator
      it = this->_internal_extensions().begin();
      it != this->_internal_extensions().end(); ++it) {
    total_size += Response_ExtensionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string description = 1;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.Schema schema = 2;
  if (this->_internal_has_schema()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *schema_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Response::GetClassData() const { return &_class_data_; }

void Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Response *>(to)->MergeFrom(
      static_cast<const Response &>(from));
}


void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.Response)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  headers_.MergeFrom(from.headers_);
  examples_.MergeFrom(from.examples_);
  extensions_.MergeFrom(from.extensions_);
  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  if (from._internal_has_schema()) {
    _internal_mutable_schema()->::grpc::gateway::protoc_gen_openapiv2::options::Schema::MergeFrom(from._internal_schema());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  return true;
}

void Response::InternalSwap(Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  headers_.InternalSwap(&other->headers_);
  examples_.InternalSwap(&other->examples_);
  extensions_.InternalSwap(&other->extensions_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
  swap(schema_, other->schema_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Response::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter, &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once,
      file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[10]);
}

// ===================================================================

Info_ExtensionsEntry_DoNotUse::Info_ExtensionsEntry_DoNotUse() {}
Info_ExtensionsEntry_DoNotUse::Info_ExtensionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Info_ExtensionsEntry_DoNotUse::MergeFrom(const Info_ExtensionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Info_ExtensionsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter, &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once,
      file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[11]);
}

// ===================================================================

class Info::_Internal {
 public:
  static const ::grpc::gateway::protoc_gen_openapiv2::options::Contact& contact(const Info* msg);
  static const ::grpc::gateway::protoc_gen_openapiv2::options::License& license(const Info* msg);
};

const ::grpc::gateway::protoc_gen_openapiv2::options::Contact&
Info::_Internal::contact(const Info* msg) {
  return *msg->contact_;
}
const ::grpc::gateway::protoc_gen_openapiv2::options::License&
Info::_Internal::license(const Info* msg) {
  return *msg->license_;
}
void Info::clear_extensions() {
  extensions_.Clear();
}
Info::Info(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  extensions_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.Info)
}
Info::Info(const Info& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  extensions_.MergeFrom(from.extensions_);
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    title_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_title().empty()) {
    title_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_title(), 
      GetArenaForAllocation());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArenaForAllocation());
  }
  terms_of_service_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    terms_of_service_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_terms_of_service().empty()) {
    terms_of_service_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_terms_of_service(), 
      GetArenaForAllocation());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_contact()) {
    contact_ = new ::grpc::gateway::protoc_gen_openapiv2::options::Contact(*from.contact_);
  } else {
    contact_ = nullptr;
  }
  if (from._internal_has_license()) {
    license_ = new ::grpc::gateway::protoc_gen_openapiv2::options::License(*from.license_);
  } else {
    license_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.Info)
}

inline void Info::SharedCtor() {
title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  title_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
terms_of_service_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  terms_of_service_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&contact_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&license_) -
    reinterpret_cast<char*>(&contact_)) + sizeof(license_));
}

Info::~Info() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.Info)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Info::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  title_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  terms_of_service_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete contact_;
  if (this != internal_default_instance()) delete license_;
}

void Info::ArenaDtor(void* object) {
  Info* _this = reinterpret_cast< Info* >(object);
  (void)_this;
  _this->extensions_. ~MapField();
}
inline void Info::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &Info::ArenaDtor);
  }
}
void Info::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Info::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.Info)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extensions_.Clear();
  title_.ClearToEmpty();
  description_.ClearToEmpty();
  terms_of_service_.ClearToEmpty();
  version_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && contact_ != nullptr) {
    delete contact_;
  }
  contact_ = nullptr;
  if (GetArenaForAllocation() == nullptr && license_ != nullptr) {
    delete license_;
  }
  license_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Info::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string title = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_title();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Info.title"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Info.description"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string terms_of_service = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_terms_of_service();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Info.terms_of_service"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpc.gateway.protoc_gen_openapiv2.options.Contact contact = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_contact(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpc.gateway.protoc_gen_openapiv2.options.License license = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_license(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string version = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Info.version"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, .google.protobuf.Value> extensions = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&extensions_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Info::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.Info)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (!this->_internal_title().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Info.title");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_title(), target);
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Info.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  // string terms_of_service = 3;
  if (!this->_internal_terms_of_service().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_terms_of_service().data(), static_cast<int>(this->_internal_terms_of_service().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Info.terms_of_service");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_terms_of_service(), target);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.Contact contact = 4;
  if (this->_internal_has_contact()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::contact(this), target, stream);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.License license = 5;
  if (this->_internal_has_license()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::license(this), target, stream);
  }

  // string version = 6;
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Info.version");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_version(), target);
  }

  // map<string, .google.protobuf.Value> extensions = 7;
  if (!this->_internal_extensions().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Value >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc.gateway.protoc_gen_openapiv2.options.Info.ExtensionsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_extensions().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_extensions().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Value >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Value >::const_iterator
          it = this->_internal_extensions().begin();
          it != this->_internal_extensions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Info_ExtensionsEntry_DoNotUse::Funcs::InternalSerialize(7, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Value >::const_iterator
          it = this->_internal_extensions().begin();
          it != this->_internal_extensions().end(); ++it) {
        target = Info_ExtensionsEntry_DoNotUse::Funcs::InternalSerialize(7, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.Info)
  return target;
}

size_t Info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.Info)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .google.protobuf.Value> extensions = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_extensions_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Value >::const_iterator
      it = this->_internal_extensions().begin();
      it != this->_internal_extensions().end(); ++it) {
    total_size += Info_ExtensionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string title = 1;
  if (!this->_internal_title().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_title());
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string terms_of_service = 3;
  if (!this->_internal_terms_of_service().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_terms_of_service());
  }

  // string version = 6;
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.Contact contact = 4;
  if (this->_internal_has_contact()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *contact_);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.License license = 5;
  if (this->_internal_has_license()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *license_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Info::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Info::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Info::GetClassData() const { return &_class_data_; }

void Info::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Info *>(to)->MergeFrom(
      static_cast<const Info &>(from));
}


void Info::MergeFrom(const Info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.Info)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  extensions_.MergeFrom(from.extensions_);
  if (!from._internal_title().empty()) {
    _internal_set_title(from._internal_title());
  }
  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  if (!from._internal_terms_of_service().empty()) {
    _internal_set_terms_of_service(from._internal_terms_of_service());
  }
  if (!from._internal_version().empty()) {
    _internal_set_version(from._internal_version());
  }
  if (from._internal_has_contact()) {
    _internal_mutable_contact()->::grpc::gateway::protoc_gen_openapiv2::options::Contact::MergeFrom(from._internal_contact());
  }
  if (from._internal_has_license()) {
    _internal_mutable_license()->::grpc::gateway::protoc_gen_openapiv2::options::License::MergeFrom(from._internal_license());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Info::CopyFrom(const Info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Info::IsInitialized() const {
  return true;
}

void Info::InternalSwap(Info* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  extensions_.InternalSwap(&other->extensions_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &title_, lhs_arena,
      &other->title_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &terms_of_service_, lhs_arena,
      &other->terms_of_service_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &version_, lhs_arena,
      &other->version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Info, license_)
      + sizeof(Info::license_)
      - PROTOBUF_FIELD_OFFSET(Info, contact_)>(
          reinterpret_cast<char*>(&contact_),
          reinterpret_cast<char*>(&other->contact_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Info::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter, &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once,
      file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[12]);
}

// ===================================================================

class Contact::_Internal {
 public:
};

Contact::Contact(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.Contact)
}
Contact::Contact(const Contact& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url().empty()) {
    url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_url(), 
      GetArenaForAllocation());
  }
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    email_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_email(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.Contact)
}

inline void Contact::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  email_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Contact::~Contact() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.Contact)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Contact::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Contact::ArenaDtor(void* object) {
  Contact* _this = reinterpret_cast< Contact* >(object);
  (void)_this;
}
void Contact::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Contact::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Contact::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.Contact)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  url_.ClearToEmpty();
  email_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Contact::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Contact.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string url = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Contact.url"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string email = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Contact.email"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Contact::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.Contact)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Contact.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string url = 2;
  if (!this->_internal_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Contact.url");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_url(), target);
  }

  // string email = 3;
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Contact.email");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_email(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.Contact)
  return target;
}

size_t Contact::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.Contact)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string url = 2;
  if (!this->_internal_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // string email = 3;
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Contact::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Contact::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Contact::GetClassData() const { return &_class_data_; }

void Contact::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Contact *>(to)->MergeFrom(
      static_cast<const Contact &>(from));
}


void Contact::MergeFrom(const Contact& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.Contact)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_url().empty()) {
    _internal_set_url(from._internal_url());
  }
  if (!from._internal_email().empty()) {
    _internal_set_email(from._internal_email());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Contact::CopyFrom(const Contact& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.Contact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Contact::IsInitialized() const {
  return true;
}

void Contact::InternalSwap(Contact* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &url_, lhs_arena,
      &other->url_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &email_, lhs_arena,
      &other->email_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Contact::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter, &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once,
      file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[13]);
}

// ===================================================================

class License::_Internal {
 public:
};

License::License(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.License)
}
License::License(const License& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url().empty()) {
    url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_url(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.License)
}

inline void License::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

License::~License() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.License)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void License::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void License::ArenaDtor(void* object) {
  License* _this = reinterpret_cast< License* >(object);
  (void)_this;
}
void License::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void License::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void License::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.License)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  url_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* License::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.License.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string url = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.License.url"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* License::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.License)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.License.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string url = 2;
  if (!this->_internal_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.License.url");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.License)
  return target;
}

size_t License::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.License)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string url = 2;
  if (!this->_internal_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData License::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    License::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*License::GetClassData() const { return &_class_data_; }

void License::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<License *>(to)->MergeFrom(
      static_cast<const License &>(from));
}


void License::MergeFrom(const License& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.License)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_url().empty()) {
    _internal_set_url(from._internal_url());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void License::CopyFrom(const License& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.License)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool License::IsInitialized() const {
  return true;
}

void License::InternalSwap(License* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &url_, lhs_arena,
      &other->url_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata License::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter, &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once,
      file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[14]);
}

// ===================================================================

class ExternalDocumentation::_Internal {
 public:
};

ExternalDocumentation::ExternalDocumentation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation)
}
ExternalDocumentation::ExternalDocumentation(const ExternalDocumentation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArenaForAllocation());
  }
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url().empty()) {
    url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_url(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation)
}

inline void ExternalDocumentation::SharedCtor() {
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ExternalDocumentation::~ExternalDocumentation() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ExternalDocumentation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ExternalDocumentation::ArenaDtor(void* object) {
  ExternalDocumentation* _this = reinterpret_cast< ExternalDocumentation* >(object);
  (void)_this;
}
void ExternalDocumentation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExternalDocumentation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ExternalDocumentation::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  description_.ClearToEmpty();
  url_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExternalDocumentation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string description = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation.description"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string url = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation.url"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ExternalDocumentation::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string description = 1;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation.description");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_description(), target);
  }

  // string url = 2;
  if (!this->_internal_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation.url");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation)
  return target;
}

size_t ExternalDocumentation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string description = 1;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string url = 2;
  if (!this->_internal_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ExternalDocumentation::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ExternalDocumentation::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ExternalDocumentation::GetClassData() const { return &_class_data_; }

void ExternalDocumentation::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ExternalDocumentation *>(to)->MergeFrom(
      static_cast<const ExternalDocumentation &>(from));
}


void ExternalDocumentation::MergeFrom(const ExternalDocumentation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  if (!from._internal_url().empty()) {
    _internal_set_url(from._internal_url());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ExternalDocumentation::CopyFrom(const ExternalDocumentation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExternalDocumentation::IsInitialized() const {
  return true;
}

void ExternalDocumentation::InternalSwap(ExternalDocumentation* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &url_, lhs_arena,
      &other->url_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ExternalDocumentation::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter, &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once,
      file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[15]);
}

// ===================================================================

class Schema::_Internal {
 public:
  static const ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema& json_schema(const Schema* msg);
  static const ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation& external_docs(const Schema* msg);
};

const ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema&
Schema::_Internal::json_schema(const Schema* msg) {
  return *msg->json_schema_;
}
const ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation&
Schema::_Internal::external_docs(const Schema* msg) {
  return *msg->external_docs_;
}
Schema::Schema(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.Schema)
}
Schema::Schema(const Schema& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  discriminator_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    discriminator_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_discriminator().empty()) {
    discriminator_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_discriminator(), 
      GetArenaForAllocation());
  }
  example_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    example_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_example().empty()) {
    example_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_example(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_json_schema()) {
    json_schema_ = new ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema(*from.json_schema_);
  } else {
    json_schema_ = nullptr;
  }
  if (from._internal_has_external_docs()) {
    external_docs_ = new ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation(*from.external_docs_);
  } else {
    external_docs_ = nullptr;
  }
  read_only_ = from.read_only_;
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.Schema)
}

inline void Schema::SharedCtor() {
discriminator_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  discriminator_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
example_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  example_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&json_schema_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&read_only_) -
    reinterpret_cast<char*>(&json_schema_)) + sizeof(read_only_));
}

Schema::~Schema() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.Schema)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Schema::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  discriminator_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  example_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete json_schema_;
  if (this != internal_default_instance()) delete external_docs_;
}

void Schema::ArenaDtor(void* object) {
  Schema* _this = reinterpret_cast< Schema* >(object);
  (void)_this;
}
void Schema::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Schema::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Schema::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.Schema)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  discriminator_.ClearToEmpty();
  example_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && json_schema_ != nullptr) {
    delete json_schema_;
  }
  json_schema_ = nullptr;
  if (GetArenaForAllocation() == nullptr && external_docs_ != nullptr) {
    delete external_docs_;
  }
  external_docs_ = nullptr;
  read_only_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Schema::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .grpc.gateway.protoc_gen_openapiv2.options.JSONSchema json_schema = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_json_schema(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string discriminator = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_discriminator();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Schema.discriminator"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool read_only = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          read_only_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation external_docs = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_external_docs(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string example = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_example();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Schema.example"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Schema::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.Schema)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc.gateway.protoc_gen_openapiv2.options.JSONSchema json_schema = 1;
  if (this->_internal_has_json_schema()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::json_schema(this), target, stream);
  }

  // string discriminator = 2;
  if (!this->_internal_discriminator().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_discriminator().data(), static_cast<int>(this->_internal_discriminator().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Schema.discriminator");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_discriminator(), target);
  }

  // bool read_only = 3;
  if (this->_internal_read_only() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_read_only(), target);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation external_docs = 5;
  if (this->_internal_has_external_docs()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::external_docs(this), target, stream);
  }

  // string example = 6;
  if (!this->_internal_example().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_example().data(), static_cast<int>(this->_internal_example().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Schema.example");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_example(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.Schema)
  return target;
}

size_t Schema::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.Schema)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string discriminator = 2;
  if (!this->_internal_discriminator().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_discriminator());
  }

  // string example = 6;
  if (!this->_internal_example().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_example());
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.JSONSchema json_schema = 1;
  if (this->_internal_has_json_schema()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *json_schema_);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation external_docs = 5;
  if (this->_internal_has_external_docs()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *external_docs_);
  }

  // bool read_only = 3;
  if (this->_internal_read_only() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Schema::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Schema::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Schema::GetClassData() const { return &_class_data_; }

void Schema::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Schema *>(to)->MergeFrom(
      static_cast<const Schema &>(from));
}


void Schema::MergeFrom(const Schema& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.Schema)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_discriminator().empty()) {
    _internal_set_discriminator(from._internal_discriminator());
  }
  if (!from._internal_example().empty()) {
    _internal_set_example(from._internal_example());
  }
  if (from._internal_has_json_schema()) {
    _internal_mutable_json_schema()->::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema::MergeFrom(from._internal_json_schema());
  }
  if (from._internal_has_external_docs()) {
    _internal_mutable_external_docs()->::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation::MergeFrom(from._internal_external_docs());
  }
  if (from._internal_read_only() != 0) {
    _internal_set_read_only(from._internal_read_only());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Schema::CopyFrom(const Schema& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.Schema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Schema::IsInitialized() const {
  return true;
}

void Schema::InternalSwap(Schema* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &discriminator_, lhs_arena,
      &other->discriminator_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &example_, lhs_arena,
      &other->example_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Schema, read_only_)
      + sizeof(Schema::read_only_)
      - PROTOBUF_FIELD_OFFSET(Schema, json_schema_)>(
          reinterpret_cast<char*>(&json_schema_),
          reinterpret_cast<char*>(&other->json_schema_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Schema::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter, &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once,
      file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[16]);
}

// ===================================================================

class JSONSchema_FieldConfiguration::_Internal {
 public:
};

JSONSchema_FieldConfiguration::JSONSchema_FieldConfiguration(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.FieldConfiguration)
}
JSONSchema_FieldConfiguration::JSONSchema_FieldConfiguration(const JSONSchema_FieldConfiguration& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_param_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    path_param_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_path_param_name().empty()) {
    path_param_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path_param_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.FieldConfiguration)
}

inline void JSONSchema_FieldConfiguration::SharedCtor() {
path_param_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  path_param_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

JSONSchema_FieldConfiguration::~JSONSchema_FieldConfiguration() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.FieldConfiguration)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void JSONSchema_FieldConfiguration::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  path_param_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void JSONSchema_FieldConfiguration::ArenaDtor(void* object) {
  JSONSchema_FieldConfiguration* _this = reinterpret_cast< JSONSchema_FieldConfiguration* >(object);
  (void)_this;
}
void JSONSchema_FieldConfiguration::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JSONSchema_FieldConfiguration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void JSONSchema_FieldConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.FieldConfiguration)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_param_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JSONSchema_FieldConfiguration::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string path_param_name = 47;
      case 47:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          auto str = _internal_mutable_path_param_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.FieldConfiguration.path_param_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* JSONSchema_FieldConfiguration::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.FieldConfiguration)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string path_param_name = 47;
  if (!this->_internal_path_param_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path_param_name().data(), static_cast<int>(this->_internal_path_param_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.FieldConfiguration.path_param_name");
    target = stream->WriteStringMaybeAliased(
        47, this->_internal_path_param_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.FieldConfiguration)
  return target;
}

size_t JSONSchema_FieldConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.FieldConfiguration)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path_param_name = 47;
  if (!this->_internal_path_param_name().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path_param_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JSONSchema_FieldConfiguration::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    JSONSchema_FieldConfiguration::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JSONSchema_FieldConfiguration::GetClassData() const { return &_class_data_; }

void JSONSchema_FieldConfiguration::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<JSONSchema_FieldConfiguration *>(to)->MergeFrom(
      static_cast<const JSONSchema_FieldConfiguration &>(from));
}


void JSONSchema_FieldConfiguration::MergeFrom(const JSONSchema_FieldConfiguration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.FieldConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path_param_name().empty()) {
    _internal_set_path_param_name(from._internal_path_param_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JSONSchema_FieldConfiguration::CopyFrom(const JSONSchema_FieldConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.FieldConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSONSchema_FieldConfiguration::IsInitialized() const {
  return true;
}

void JSONSchema_FieldConfiguration::InternalSwap(JSONSchema_FieldConfiguration* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &path_param_name_, lhs_arena,
      &other->path_param_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata JSONSchema_FieldConfiguration::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter, &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once,
      file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[17]);
}

// ===================================================================

JSONSchema_ExtensionsEntry_DoNotUse::JSONSchema_ExtensionsEntry_DoNotUse() {}
JSONSchema_ExtensionsEntry_DoNotUse::JSONSchema_ExtensionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void JSONSchema_ExtensionsEntry_DoNotUse::MergeFrom(const JSONSchema_ExtensionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata JSONSchema_ExtensionsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter, &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once,
      file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[18]);
}

// ===================================================================

class JSONSchema::_Internal {
 public:
  static const ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema_FieldConfiguration& field_configuration(const JSONSchema* msg);
};

const ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema_FieldConfiguration&
JSONSchema::_Internal::field_configuration(const JSONSchema* msg) {
  return *msg->field_configuration_;
}
void JSONSchema::clear_extensions() {
  extensions_.Clear();
}
JSONSchema::JSONSchema(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  required_(arena),
  array_(arena),
  type_(arena),
  enum__(arena),
  extensions_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema)
}
JSONSchema::JSONSchema(const JSONSchema& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      required_(from.required_),
      array_(from.array_),
      type_(from.type_),
      enum__(from.enum__) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  extensions_.MergeFrom(from.extensions_);
  ref_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    ref_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ref().empty()) {
    ref_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_ref(), 
      GetArenaForAllocation());
  }
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    title_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_title().empty()) {
    title_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_title(), 
      GetArenaForAllocation());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArenaForAllocation());
  }
  default__.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    default__.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_default_().empty()) {
    default__.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_default_(), 
      GetArenaForAllocation());
  }
  example_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    example_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_example().empty()) {
    example_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_example(), 
      GetArenaForAllocation());
  }
  pattern_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    pattern_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pattern().empty()) {
    pattern_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pattern(), 
      GetArenaForAllocation());
  }
  format_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    format_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_format().empty()) {
    format_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_format(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_field_configuration()) {
    field_configuration_ = new ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema_FieldConfiguration(*from.field_configuration_);
  } else {
    field_configuration_ = nullptr;
  }
  ::memcpy(&multiple_of_, &from.multiple_of_,
    static_cast<size_t>(reinterpret_cast<char*>(&unique_items_) -
    reinterpret_cast<char*>(&multiple_of_)) + sizeof(unique_items_));
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema)
}

inline void JSONSchema::SharedCtor() {
ref_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  ref_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  title_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
default__.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  default__.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
example_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  example_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
pattern_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  pattern_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
format_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  format_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&field_configuration_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&unique_items_) -
    reinterpret_cast<char*>(&field_configuration_)) + sizeof(unique_items_));
}

JSONSchema::~JSONSchema() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void JSONSchema::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  ref_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  default__.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  example_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pattern_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  format_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete field_configuration_;
}

void JSONSchema::ArenaDtor(void* object) {
  JSONSchema* _this = reinterpret_cast< JSONSchema* >(object);
  (void)_this;
  _this->extensions_. ~MapField();
}
inline void JSONSchema::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &JSONSchema::ArenaDtor);
  }
}
void JSONSchema::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void JSONSchema::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  required_.Clear();
  array_.Clear();
  type_.Clear();
  enum__.Clear();
  extensions_.Clear();
  ref_.ClearToEmpty();
  title_.ClearToEmpty();
  description_.ClearToEmpty();
  default__.ClearToEmpty();
  example_.ClearToEmpty();
  pattern_.ClearToEmpty();
  format_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && field_configuration_ != nullptr) {
    delete field_configuration_;
  }
  field_configuration_ = nullptr;
  ::memset(&multiple_of_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unique_items_) -
      reinterpret_cast<char*>(&multiple_of_)) + sizeof(unique_items_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JSONSchema::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string ref = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_ref();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.ref"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string title = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_title();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.title"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string description = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.description"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string default = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_default_();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.default"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool read_only = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          read_only_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string example = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_example();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.example"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double multiple_of = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 81)) {
          multiple_of_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double maximum = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 89)) {
          maximum_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // bool exclusive_maximum = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          exclusive_maximum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double minimum = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 105)) {
          minimum_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // bool exclusive_minimum = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          exclusive_minimum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 max_length = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          max_length_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 min_length = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          min_length_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string pattern = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          auto str = _internal_mutable_pattern();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.pattern"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 max_items = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          max_items_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 min_items = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 168)) {
          min_items_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool unique_items = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          unique_items_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 max_properties = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          max_properties_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 min_properties = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 200)) {
          min_properties_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string required = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 210)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_required();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.required"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<210>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated string array = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_array();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.array"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<274>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.JSONSchemaSimpleTypes type = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_type(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_type(static_cast<::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema_JSONSchemaSimpleTypes>(val));
        } else
          goto handle_unusual;
        continue;
      // string format = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_format();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.format"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string enum = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_enum_();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.enum"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<370>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, .google.protobuf.Value> extensions = 48;
      case 48:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&extensions_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<386>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.FieldConfiguration field_configuration = 1001;
      case 1001:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_field_configuration(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* JSONSchema::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string ref = 3;
  if (!this->_internal_ref().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ref().data(), static_cast<int>(this->_internal_ref().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.ref");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_ref(), target);
  }

  // string title = 5;
  if (!this->_internal_title().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.title");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_title(), target);
  }

  // string description = 6;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.description");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_description(), target);
  }

  // string default = 7;
  if (!this->_internal_default_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_default_().data(), static_cast<int>(this->_internal_default_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.default");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_default_(), target);
  }

  // bool read_only = 8;
  if (this->_internal_read_only() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_read_only(), target);
  }

  // string example = 9;
  if (!this->_internal_example().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_example().data(), static_cast<int>(this->_internal_example().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.example");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_example(), target);
  }

  // double multiple_of = 10;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_multiple_of = this->_internal_multiple_of();
  uint64_t raw_multiple_of;
  memcpy(&raw_multiple_of, &tmp_multiple_of, sizeof(tmp_multiple_of));
  if (raw_multiple_of != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(10, this->_internal_multiple_of(), target);
  }

  // double maximum = 11;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_maximum = this->_internal_maximum();
  uint64_t raw_maximum;
  memcpy(&raw_maximum, &tmp_maximum, sizeof(tmp_maximum));
  if (raw_maximum != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(11, this->_internal_maximum(), target);
  }

  // bool exclusive_maximum = 12;
  if (this->_internal_exclusive_maximum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(12, this->_internal_exclusive_maximum(), target);
  }

  // double minimum = 13;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_minimum = this->_internal_minimum();
  uint64_t raw_minimum;
  memcpy(&raw_minimum, &tmp_minimum, sizeof(tmp_minimum));
  if (raw_minimum != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(13, this->_internal_minimum(), target);
  }

  // bool exclusive_minimum = 14;
  if (this->_internal_exclusive_minimum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(14, this->_internal_exclusive_minimum(), target);
  }

  // uint64 max_length = 15;
  if (this->_internal_max_length() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(15, this->_internal_max_length(), target);
  }

  // uint64 min_length = 16;
  if (this->_internal_min_length() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(16, this->_internal_min_length(), target);
  }

  // string pattern = 17;
  if (!this->_internal_pattern().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pattern().data(), static_cast<int>(this->_internal_pattern().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.pattern");
    target = stream->WriteStringMaybeAliased(
        17, this->_internal_pattern(), target);
  }

  // uint64 max_items = 20;
  if (this->_internal_max_items() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(20, this->_internal_max_items(), target);
  }

  // uint64 min_items = 21;
  if (this->_internal_min_items() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(21, this->_internal_min_items(), target);
  }

  // bool unique_items = 22;
  if (this->_internal_unique_items() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(22, this->_internal_unique_items(), target);
  }

  // uint64 max_properties = 24;
  if (this->_internal_max_properties() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(24, this->_internal_max_properties(), target);
  }

  // uint64 min_properties = 25;
  if (this->_internal_min_properties() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(25, this->_internal_min_properties(), target);
  }

  // repeated string required = 26;
  for (int i = 0, n = this->_internal_required_size(); i < n; i++) {
    const auto& s = this->_internal_required(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.required");
    target = stream->WriteString(26, s, target);
  }

  // repeated string array = 34;
  for (int i = 0, n = this->_internal_array_size(); i < n; i++) {
    const auto& s = this->_internal_array(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.array");
    target = stream->WriteString(34, s, target);
  }

  // repeated .grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.JSONSchemaSimpleTypes type = 35;
  {
    int byte_size = _type_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          35, type_, byte_size, target);
    }
  }

  // string format = 36;
  if (!this->_internal_format().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_format().data(), static_cast<int>(this->_internal_format().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.format");
    target = stream->WriteStringMaybeAliased(
        36, this->_internal_format(), target);
  }

  // repeated string enum = 46;
  for (int i = 0, n = this->_internal_enum__size(); i < n; i++) {
    const auto& s = this->_internal_enum_(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.enum");
    target = stream->WriteString(46, s, target);
  }

  // map<string, .google.protobuf.Value> extensions = 48;
  if (!this->_internal_extensions().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Value >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.ExtensionsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_extensions().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_extensions().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Value >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Value >::const_iterator
          it = this->_internal_extensions().begin();
          it != this->_internal_extensions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = JSONSchema_ExtensionsEntry_DoNotUse::Funcs::InternalSerialize(48, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Value >::const_iterator
          it = this->_internal_extensions().begin();
          it != this->_internal_extensions().end(); ++it) {
        target = JSONSchema_ExtensionsEntry_DoNotUse::Funcs::InternalSerialize(48, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.FieldConfiguration field_configuration = 1001;
  if (this->_internal_has_field_configuration()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1001, _Internal::field_configuration(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema)
  return target;
}

size_t JSONSchema::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string required = 26;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(required_.size());
  for (int i = 0, n = required_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      required_.Get(i));
  }

  // repeated string array = 34;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(array_.size());
  for (int i = 0, n = array_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      array_.Get(i));
  }

  // repeated .grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.JSONSchemaSimpleTypes type = 35;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_type_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_type(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _type_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated string enum = 46;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(enum__.size());
  for (int i = 0, n = enum__.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      enum__.Get(i));
  }

  // map<string, .google.protobuf.Value> extensions = 48;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_extensions_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Value >::const_iterator
      it = this->_internal_extensions().begin();
      it != this->_internal_extensions().end(); ++it) {
    total_size += JSONSchema_ExtensionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string ref = 3;
  if (!this->_internal_ref().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ref());
  }

  // string title = 5;
  if (!this->_internal_title().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_title());
  }

  // string description = 6;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string default = 7;
  if (!this->_internal_default_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_default_());
  }

  // string example = 9;
  if (!this->_internal_example().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_example());
  }

  // string pattern = 17;
  if (!this->_internal_pattern().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pattern());
  }

  // string format = 36;
  if (!this->_internal_format().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_format());
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.FieldConfiguration field_configuration = 1001;
  if (this->_internal_has_field_configuration()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *field_configuration_);
  }

  // double multiple_of = 10;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_multiple_of = this->_internal_multiple_of();
  uint64_t raw_multiple_of;
  memcpy(&raw_multiple_of, &tmp_multiple_of, sizeof(tmp_multiple_of));
  if (raw_multiple_of != 0) {
    total_size += 1 + 8;
  }

  // double maximum = 11;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_maximum = this->_internal_maximum();
  uint64_t raw_maximum;
  memcpy(&raw_maximum, &tmp_maximum, sizeof(tmp_maximum));
  if (raw_maximum != 0) {
    total_size += 1 + 8;
  }

  // double minimum = 13;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_minimum = this->_internal_minimum();
  uint64_t raw_minimum;
  memcpy(&raw_minimum, &tmp_minimum, sizeof(tmp_minimum));
  if (raw_minimum != 0) {
    total_size += 1 + 8;
  }

  // uint64 max_length = 15;
  if (this->_internal_max_length() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_max_length());
  }

  // uint64 min_length = 16;
  if (this->_internal_min_length() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_min_length());
  }

  // uint64 max_items = 20;
  if (this->_internal_max_items() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_max_items());
  }

  // uint64 min_items = 21;
  if (this->_internal_min_items() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_min_items());
  }

  // uint64 max_properties = 24;
  if (this->_internal_max_properties() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_max_properties());
  }

  // uint64 min_properties = 25;
  if (this->_internal_min_properties() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_min_properties());
  }

  // bool read_only = 8;
  if (this->_internal_read_only() != 0) {
    total_size += 1 + 1;
  }

  // bool exclusive_maximum = 12;
  if (this->_internal_exclusive_maximum() != 0) {
    total_size += 1 + 1;
  }

  // bool exclusive_minimum = 14;
  if (this->_internal_exclusive_minimum() != 0) {
    total_size += 1 + 1;
  }

  // bool unique_items = 22;
  if (this->_internal_unique_items() != 0) {
    total_size += 2 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JSONSchema::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    JSONSchema::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JSONSchema::GetClassData() const { return &_class_data_; }

void JSONSchema::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<JSONSchema *>(to)->MergeFrom(
      static_cast<const JSONSchema &>(from));
}


void JSONSchema::MergeFrom(const JSONSchema& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  required_.MergeFrom(from.required_);
  array_.MergeFrom(from.array_);
  type_.MergeFrom(from.type_);
  enum__.MergeFrom(from.enum__);
  extensions_.MergeFrom(from.extensions_);
  if (!from._internal_ref().empty()) {
    _internal_set_ref(from._internal_ref());
  }
  if (!from._internal_title().empty()) {
    _internal_set_title(from._internal_title());
  }
  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  if (!from._internal_default_().empty()) {
    _internal_set_default_(from._internal_default_());
  }
  if (!from._internal_example().empty()) {
    _internal_set_example(from._internal_example());
  }
  if (!from._internal_pattern().empty()) {
    _internal_set_pattern(from._internal_pattern());
  }
  if (!from._internal_format().empty()) {
    _internal_set_format(from._internal_format());
  }
  if (from._internal_has_field_configuration()) {
    _internal_mutable_field_configuration()->::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema_FieldConfiguration::MergeFrom(from._internal_field_configuration());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_multiple_of = from._internal_multiple_of();
  uint64_t raw_multiple_of;
  memcpy(&raw_multiple_of, &tmp_multiple_of, sizeof(tmp_multiple_of));
  if (raw_multiple_of != 0) {
    _internal_set_multiple_of(from._internal_multiple_of());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_maximum = from._internal_maximum();
  uint64_t raw_maximum;
  memcpy(&raw_maximum, &tmp_maximum, sizeof(tmp_maximum));
  if (raw_maximum != 0) {
    _internal_set_maximum(from._internal_maximum());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_minimum = from._internal_minimum();
  uint64_t raw_minimum;
  memcpy(&raw_minimum, &tmp_minimum, sizeof(tmp_minimum));
  if (raw_minimum != 0) {
    _internal_set_minimum(from._internal_minimum());
  }
  if (from._internal_max_length() != 0) {
    _internal_set_max_length(from._internal_max_length());
  }
  if (from._internal_min_length() != 0) {
    _internal_set_min_length(from._internal_min_length());
  }
  if (from._internal_max_items() != 0) {
    _internal_set_max_items(from._internal_max_items());
  }
  if (from._internal_min_items() != 0) {
    _internal_set_min_items(from._internal_min_items());
  }
  if (from._internal_max_properties() != 0) {
    _internal_set_max_properties(from._internal_max_properties());
  }
  if (from._internal_min_properties() != 0) {
    _internal_set_min_properties(from._internal_min_properties());
  }
  if (from._internal_read_only() != 0) {
    _internal_set_read_only(from._internal_read_only());
  }
  if (from._internal_exclusive_maximum() != 0) {
    _internal_set_exclusive_maximum(from._internal_exclusive_maximum());
  }
  if (from._internal_exclusive_minimum() != 0) {
    _internal_set_exclusive_minimum(from._internal_exclusive_minimum());
  }
  if (from._internal_unique_items() != 0) {
    _internal_set_unique_items(from._internal_unique_items());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JSONSchema::CopyFrom(const JSONSchema& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSONSchema::IsInitialized() const {
  return true;
}

void JSONSchema::InternalSwap(JSONSchema* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  required_.InternalSwap(&other->required_);
  array_.InternalSwap(&other->array_);
  type_.InternalSwap(&other->type_);
  enum__.InternalSwap(&other->enum__);
  extensions_.InternalSwap(&other->extensions_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &ref_, lhs_arena,
      &other->ref_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &title_, lhs_arena,
      &other->title_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &default__, lhs_arena,
      &other->default__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &example_, lhs_arena,
      &other->example_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &pattern_, lhs_arena,
      &other->pattern_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &format_, lhs_arena,
      &other->format_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JSONSchema, unique_items_)
      + sizeof(JSONSchema::unique_items_)
      - PROTOBUF_FIELD_OFFSET(JSONSchema, field_configuration_)>(
          reinterpret_cast<char*>(&field_configuration_),
          reinterpret_cast<char*>(&other->field_configuration_));
}

::PROTOBUF_NAMESPACE_ID::Metadata JSONSchema::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter, &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once,
      file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[19]);
}

// ===================================================================

class Tag::_Internal {
 public:
  static const ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation& external_docs(const Tag* msg);
};

const ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation&
Tag::_Internal::external_docs(const Tag* msg) {
  return *msg->external_docs_;
}
Tag::Tag(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.Tag)
}
Tag::Tag(const Tag& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_external_docs()) {
    external_docs_ = new ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation(*from.external_docs_);
  } else {
    external_docs_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.Tag)
}

inline void Tag::SharedCtor() {
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
external_docs_ = nullptr;
}

Tag::~Tag() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.Tag)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Tag::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete external_docs_;
}

void Tag::ArenaDtor(void* object) {
  Tag* _this = reinterpret_cast< Tag* >(object);
  (void)_this;
}
void Tag::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Tag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Tag::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.Tag)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  description_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && external_docs_ != nullptr) {
    delete external_docs_;
  }
  external_docs_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Tag::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Tag.description"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation external_docs = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_external_docs(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Tag::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.Tag)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string description = 2;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Tag.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation external_docs = 3;
  if (this->_internal_has_external_docs()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::external_docs(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.Tag)
  return target;
}

size_t Tag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.Tag)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string description = 2;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation external_docs = 3;
  if (this->_internal_has_external_docs()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *external_docs_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Tag::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Tag::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Tag::GetClassData() const { return &_class_data_; }

void Tag::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Tag *>(to)->MergeFrom(
      static_cast<const Tag &>(from));
}


void Tag::MergeFrom(const Tag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.Tag)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  if (from._internal_has_external_docs()) {
    _internal_mutable_external_docs()->::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation::MergeFrom(from._internal_external_docs());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Tag::CopyFrom(const Tag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.Tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tag::IsInitialized() const {
  return true;
}

void Tag::InternalSwap(Tag* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
  swap(external_docs_, other->external_docs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Tag::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter, &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once,
      file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[20]);
}

// ===================================================================

SecurityDefinitions_SecurityEntry_DoNotUse::SecurityDefinitions_SecurityEntry_DoNotUse() {}
SecurityDefinitions_SecurityEntry_DoNotUse::SecurityDefinitions_SecurityEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SecurityDefinitions_SecurityEntry_DoNotUse::MergeFrom(const SecurityDefinitions_SecurityEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SecurityDefinitions_SecurityEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter, &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once,
      file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[21]);
}

// ===================================================================

class SecurityDefinitions::_Internal {
 public:
};

SecurityDefinitions::SecurityDefinitions(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  security_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions)
}
SecurityDefinitions::SecurityDefinitions(const SecurityDefinitions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  security_.MergeFrom(from.security_);
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions)
}

inline void SecurityDefinitions::SharedCtor() {
}

SecurityDefinitions::~SecurityDefinitions() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SecurityDefinitions::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SecurityDefinitions::ArenaDtor(void* object) {
  SecurityDefinitions* _this = reinterpret_cast< SecurityDefinitions* >(object);
  (void)_this;
  _this->security_. ~MapField();
}
inline void SecurityDefinitions::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &SecurityDefinitions::ArenaDtor);
  }
}
void SecurityDefinitions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SecurityDefinitions::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  security_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SecurityDefinitions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme> security = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&security_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SecurityDefinitions::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme> security = 1;
  if (!this->_internal_security().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions.SecurityEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_security().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_security().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme >::const_iterator
          it = this->_internal_security().begin();
          it != this->_internal_security().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = SecurityDefinitions_SecurityEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme >::const_iterator
          it = this->_internal_security().begin();
          it != this->_internal_security().end(); ++it) {
        target = SecurityDefinitions_SecurityEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions)
  return target;
}

size_t SecurityDefinitions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme> security = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_security_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme >::const_iterator
      it = this->_internal_security().begin();
      it != this->_internal_security().end(); ++it) {
    total_size += SecurityDefinitions_SecurityEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SecurityDefinitions::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SecurityDefinitions::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SecurityDefinitions::GetClassData() const { return &_class_data_; }

void SecurityDefinitions::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SecurityDefinitions *>(to)->MergeFrom(
      static_cast<const SecurityDefinitions &>(from));
}


void SecurityDefinitions::MergeFrom(const SecurityDefinitions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  security_.MergeFrom(from.security_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SecurityDefinitions::CopyFrom(const SecurityDefinitions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SecurityDefinitions::IsInitialized() const {
  return true;
}

void SecurityDefinitions::InternalSwap(SecurityDefinitions* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  security_.InternalSwap(&other->security_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SecurityDefinitions::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter, &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once,
      file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[22]);
}

// ===================================================================

SecurityScheme_ExtensionsEntry_DoNotUse::SecurityScheme_ExtensionsEntry_DoNotUse() {}
SecurityScheme_ExtensionsEntry_DoNotUse::SecurityScheme_ExtensionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SecurityScheme_ExtensionsEntry_DoNotUse::MergeFrom(const SecurityScheme_ExtensionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SecurityScheme_ExtensionsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter, &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once,
      file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[23]);
}

// ===================================================================

class SecurityScheme::_Internal {
 public:
  static const ::grpc::gateway::protoc_gen_openapiv2::options::Scopes& scopes(const SecurityScheme* msg);
};

const ::grpc::gateway::protoc_gen_openapiv2::options::Scopes&
SecurityScheme::_Internal::scopes(const SecurityScheme* msg) {
  return *msg->scopes_;
}
void SecurityScheme::clear_extensions() {
  extensions_.Clear();
}
SecurityScheme::SecurityScheme(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  extensions_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme)
}
SecurityScheme::SecurityScheme(const SecurityScheme& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  extensions_.MergeFrom(from.extensions_);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArenaForAllocation());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  authorization_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    authorization_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_authorization_url().empty()) {
    authorization_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_authorization_url(), 
      GetArenaForAllocation());
  }
  token_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    token_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token_url().empty()) {
    token_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_token_url(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_scopes()) {
    scopes_ = new ::grpc::gateway::protoc_gen_openapiv2::options::Scopes(*from.scopes_);
  } else {
    scopes_ = nullptr;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&flow_) -
    reinterpret_cast<char*>(&type_)) + sizeof(flow_));
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme)
}

inline void SecurityScheme::SharedCtor() {
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
authorization_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  authorization_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
token_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  token_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&scopes_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flow_) -
    reinterpret_cast<char*>(&scopes_)) + sizeof(flow_));
}

SecurityScheme::~SecurityScheme() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SecurityScheme::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  authorization_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  token_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete scopes_;
}

void SecurityScheme::ArenaDtor(void* object) {
  SecurityScheme* _this = reinterpret_cast< SecurityScheme* >(object);
  (void)_this;
  _this->extensions_. ~MapField();
}
inline void SecurityScheme::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &SecurityScheme::ArenaDtor);
  }
}
void SecurityScheme::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SecurityScheme::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extensions_.Clear();
  description_.ClearToEmpty();
  name_.ClearToEmpty();
  authorization_url_.ClearToEmpty();
  token_url_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && scopes_ != nullptr) {
    delete scopes_;
  }
  scopes_ = nullptr;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flow_) -
      reinterpret_cast<char*>(&type_)) + sizeof(flow_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SecurityScheme::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.Type type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme_Type>(val));
        } else
          goto handle_unusual;
        continue;
      // string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.description"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.In in = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_in(static_cast<::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme_In>(val));
        } else
          goto handle_unusual;
        continue;
      // .grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.Flow flow = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_flow(static_cast<::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme_Flow>(val));
        } else
          goto handle_unusual;
        continue;
      // string authorization_url = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_authorization_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.authorization_url"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string token_url = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_token_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.token_url"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpc.gateway.protoc_gen_openapiv2.options.Scopes scopes = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_scopes(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, .google.protobuf.Value> extensions = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&extensions_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SecurityScheme::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.In in = 4;
  if (this->_internal_in() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_in(), target);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.Flow flow = 5;
  if (this->_internal_flow() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_flow(), target);
  }

  // string authorization_url = 6;
  if (!this->_internal_authorization_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_authorization_url().data(), static_cast<int>(this->_internal_authorization_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.authorization_url");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_authorization_url(), target);
  }

  // string token_url = 7;
  if (!this->_internal_token_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token_url().data(), static_cast<int>(this->_internal_token_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.token_url");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_token_url(), target);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.Scopes scopes = 8;
  if (this->_internal_has_scopes()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::scopes(this), target, stream);
  }

  // map<string, .google.protobuf.Value> extensions = 9;
  if (!this->_internal_extensions().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Value >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.ExtensionsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_extensions().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_extensions().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Value >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Value >::const_iterator
          it = this->_internal_extensions().begin();
          it != this->_internal_extensions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = SecurityScheme_ExtensionsEntry_DoNotUse::Funcs::InternalSerialize(9, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Value >::const_iterator
          it = this->_internal_extensions().begin();
          it != this->_internal_extensions().end(); ++it) {
        target = SecurityScheme_ExtensionsEntry_DoNotUse::Funcs::InternalSerialize(9, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme)
  return target;
}

size_t SecurityScheme::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .google.protobuf.Value> extensions = 9;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_extensions_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Value >::const_iterator
      it = this->_internal_extensions().begin();
      it != this->_internal_extensions().end(); ++it) {
    total_size += SecurityScheme_ExtensionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string authorization_url = 6;
  if (!this->_internal_authorization_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_authorization_url());
  }

  // string token_url = 7;
  if (!this->_internal_token_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token_url());
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.Scopes scopes = 8;
  if (this->_internal_has_scopes()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *scopes_);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.Type type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.In in = 4;
  if (this->_internal_in() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_in());
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.Flow flow = 5;
  if (this->_internal_flow() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_flow());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SecurityScheme::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SecurityScheme::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SecurityScheme::GetClassData() const { return &_class_data_; }

void SecurityScheme::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SecurityScheme *>(to)->MergeFrom(
      static_cast<const SecurityScheme &>(from));
}


void SecurityScheme::MergeFrom(const SecurityScheme& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  extensions_.MergeFrom(from.extensions_);
  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_authorization_url().empty()) {
    _internal_set_authorization_url(from._internal_authorization_url());
  }
  if (!from._internal_token_url().empty()) {
    _internal_set_token_url(from._internal_token_url());
  }
  if (from._internal_has_scopes()) {
    _internal_mutable_scopes()->::grpc::gateway::protoc_gen_openapiv2::options::Scopes::MergeFrom(from._internal_scopes());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from._internal_in() != 0) {
    _internal_set_in(from._internal_in());
  }
  if (from._internal_flow() != 0) {
    _internal_set_flow(from._internal_flow());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SecurityScheme::CopyFrom(const SecurityScheme& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SecurityScheme::IsInitialized() const {
  return true;
}

void SecurityScheme::InternalSwap(SecurityScheme* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  extensions_.InternalSwap(&other->extensions_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &authorization_url_, lhs_arena,
      &other->authorization_url_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &token_url_, lhs_arena,
      &other->token_url_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SecurityScheme, flow_)
      + sizeof(SecurityScheme::flow_)
      - PROTOBUF_FIELD_OFFSET(SecurityScheme, scopes_)>(
          reinterpret_cast<char*>(&scopes_),
          reinterpret_cast<char*>(&other->scopes_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SecurityScheme::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter, &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once,
      file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[24]);
}

// ===================================================================

class SecurityRequirement_SecurityRequirementValue::_Internal {
 public:
};

SecurityRequirement_SecurityRequirementValue::SecurityRequirement_SecurityRequirementValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  scope_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue)
}
SecurityRequirement_SecurityRequirementValue::SecurityRequirement_SecurityRequirementValue(const SecurityRequirement_SecurityRequirementValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      scope_(from.scope_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue)
}

inline void SecurityRequirement_SecurityRequirementValue::SharedCtor() {
}

SecurityRequirement_SecurityRequirementValue::~SecurityRequirement_SecurityRequirementValue() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SecurityRequirement_SecurityRequirementValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SecurityRequirement_SecurityRequirementValue::ArenaDtor(void* object) {
  SecurityRequirement_SecurityRequirementValue* _this = reinterpret_cast< SecurityRequirement_SecurityRequirementValue* >(object);
  (void)_this;
}
void SecurityRequirement_SecurityRequirementValue::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SecurityRequirement_SecurityRequirementValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SecurityRequirement_SecurityRequirementValue::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scope_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SecurityRequirement_SecurityRequirementValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string scope = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_scope();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue.scope"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SecurityRequirement_SecurityRequirementValue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string scope = 1;
  for (int i = 0, n = this->_internal_scope_size(); i < n; i++) {
    const auto& s = this->_internal_scope(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue.scope");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue)
  return target;
}

size_t SecurityRequirement_SecurityRequirementValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string scope = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(scope_.size());
  for (int i = 0, n = scope_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      scope_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SecurityRequirement_SecurityRequirementValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SecurityRequirement_SecurityRequirementValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SecurityRequirement_SecurityRequirementValue::GetClassData() const { return &_class_data_; }

void SecurityRequirement_SecurityRequirementValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SecurityRequirement_SecurityRequirementValue *>(to)->MergeFrom(
      static_cast<const SecurityRequirement_SecurityRequirementValue &>(from));
}


void SecurityRequirement_SecurityRequirementValue::MergeFrom(const SecurityRequirement_SecurityRequirementValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  scope_.MergeFrom(from.scope_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SecurityRequirement_SecurityRequirementValue::CopyFrom(const SecurityRequirement_SecurityRequirementValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SecurityRequirement_SecurityRequirementValue::IsInitialized() const {
  return true;
}

void SecurityRequirement_SecurityRequirementValue::InternalSwap(SecurityRequirement_SecurityRequirementValue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  scope_.InternalSwap(&other->scope_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SecurityRequirement_SecurityRequirementValue::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter, &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once,
      file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[25]);
}

// ===================================================================

SecurityRequirement_SecurityRequirementEntry_DoNotUse::SecurityRequirement_SecurityRequirementEntry_DoNotUse() {}
SecurityRequirement_SecurityRequirementEntry_DoNotUse::SecurityRequirement_SecurityRequirementEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SecurityRequirement_SecurityRequirementEntry_DoNotUse::MergeFrom(const SecurityRequirement_SecurityRequirementEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SecurityRequirement_SecurityRequirementEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter, &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once,
      file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[26]);
}

// ===================================================================

class SecurityRequirement::_Internal {
 public:
};

SecurityRequirement::SecurityRequirement(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  security_requirement_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement)
}
SecurityRequirement::SecurityRequirement(const SecurityRequirement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  security_requirement_.MergeFrom(from.security_requirement_);
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement)
}

inline void SecurityRequirement::SharedCtor() {
}

SecurityRequirement::~SecurityRequirement() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SecurityRequirement::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SecurityRequirement::ArenaDtor(void* object) {
  SecurityRequirement* _this = reinterpret_cast< SecurityRequirement* >(object);
  (void)_this;
  _this->security_requirement_. ~MapField();
}
inline void SecurityRequirement::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &SecurityRequirement::ArenaDtor);
  }
}
void SecurityRequirement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SecurityRequirement::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  security_requirement_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SecurityRequirement::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue> security_requirement = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&security_requirement_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SecurityRequirement::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue> security_requirement = 1;
  if (!this->_internal_security_requirement().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementValue >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_security_requirement().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_security_requirement().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementValue >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementValue >::const_iterator
          it = this->_internal_security_requirement().begin();
          it != this->_internal_security_requirement().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = SecurityRequirement_SecurityRequirementEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementValue >::const_iterator
          it = this->_internal_security_requirement().begin();
          it != this->_internal_security_requirement().end(); ++it) {
        target = SecurityRequirement_SecurityRequirementEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement)
  return target;
}

size_t SecurityRequirement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue> security_requirement = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_security_requirement_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementValue >::const_iterator
      it = this->_internal_security_requirement().begin();
      it != this->_internal_security_requirement().end(); ++it) {
    total_size += SecurityRequirement_SecurityRequirementEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SecurityRequirement::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SecurityRequirement::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SecurityRequirement::GetClassData() const { return &_class_data_; }

void SecurityRequirement::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SecurityRequirement *>(to)->MergeFrom(
      static_cast<const SecurityRequirement &>(from));
}


void SecurityRequirement::MergeFrom(const SecurityRequirement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  security_requirement_.MergeFrom(from.security_requirement_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SecurityRequirement::CopyFrom(const SecurityRequirement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SecurityRequirement::IsInitialized() const {
  return true;
}

void SecurityRequirement::InternalSwap(SecurityRequirement* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  security_requirement_.InternalSwap(&other->security_requirement_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SecurityRequirement::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter, &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once,
      file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[27]);
}

// ===================================================================

Scopes_ScopeEntry_DoNotUse::Scopes_ScopeEntry_DoNotUse() {}
Scopes_ScopeEntry_DoNotUse::Scopes_ScopeEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Scopes_ScopeEntry_DoNotUse::MergeFrom(const Scopes_ScopeEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Scopes_ScopeEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter, &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once,
      file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[28]);
}

// ===================================================================

class Scopes::_Internal {
 public:
};

Scopes::Scopes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  scope_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.Scopes)
}
Scopes::Scopes(const Scopes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  scope_.MergeFrom(from.scope_);
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.Scopes)
}

inline void Scopes::SharedCtor() {
}

Scopes::~Scopes() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.Scopes)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Scopes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Scopes::ArenaDtor(void* object) {
  Scopes* _this = reinterpret_cast< Scopes* >(object);
  (void)_this;
  _this->scope_. ~MapField();
}
inline void Scopes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &Scopes::ArenaDtor);
  }
}
void Scopes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Scopes::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.Scopes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scope_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Scopes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, string> scope = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&scope_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Scopes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.Scopes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> scope = 1;
  if (!this->_internal_scope().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc.gateway.protoc_gen_openapiv2.options.Scopes.ScopeEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc.gateway.protoc_gen_openapiv2.options.Scopes.ScopeEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_scope().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_scope().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_scope().begin();
          it != this->_internal_scope().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Scopes_ScopeEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_scope().begin();
          it != this->_internal_scope().end(); ++it) {
        target = Scopes_ScopeEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.Scopes)
  return target;
}

size_t Scopes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.Scopes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> scope = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_scope_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_scope().begin();
      it != this->_internal_scope().end(); ++it) {
    total_size += Scopes_ScopeEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Scopes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Scopes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Scopes::GetClassData() const { return &_class_data_; }

void Scopes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Scopes *>(to)->MergeFrom(
      static_cast<const Scopes &>(from));
}


void Scopes::MergeFrom(const Scopes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.Scopes)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  scope_.MergeFrom(from.scope_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Scopes::CopyFrom(const Scopes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.Scopes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Scopes::IsInitialized() const {
  return true;
}

void Scopes::InternalSwap(Scopes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  scope_.InternalSwap(&other->scope_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Scopes::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_getter, &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once,
      file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[29]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace options
}  // namespace protoc_gen_openapiv2
}  // namespace gateway
}  // namespace grpc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ResponsesEntry_DoNotUse* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ResponsesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ResponsesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ExtensionsEntry_DoNotUse* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ExtensionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ExtensionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Swagger* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Swagger >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Swagger >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Operation_ResponsesEntry_DoNotUse* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Operation_ResponsesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Operation_ResponsesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Operation_ExtensionsEntry_DoNotUse* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Operation_ExtensionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Operation_ExtensionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Operation* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Operation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Operation >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Header* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Header >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Header >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Response_HeadersEntry_DoNotUse* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Response_HeadersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Response_HeadersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Response_ExamplesEntry_DoNotUse* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Response_ExamplesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Response_ExamplesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Response_ExtensionsEntry_DoNotUse* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Response_ExtensionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Response_ExtensionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Response* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Response >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Info_ExtensionsEntry_DoNotUse* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Info_ExtensionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Info_ExtensionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Info* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Info >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Info >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Contact* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Contact >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Contact >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::License* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::License >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::License >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Schema* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Schema >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Schema >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema_FieldConfiguration* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema_FieldConfiguration >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema_FieldConfiguration >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema_ExtensionsEntry_DoNotUse* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema_ExtensionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema_ExtensionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Tag* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Tag >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Tag >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions_SecurityEntry_DoNotUse* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions_SecurityEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions_SecurityEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme_ExtensionsEntry_DoNotUse* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme_ExtensionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme_ExtensionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementValue* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementValue >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementEntry_DoNotUse* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Scopes_ScopeEntry_DoNotUse* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Scopes_ScopeEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Scopes_ScopeEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Scopes* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Scopes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Scopes >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
