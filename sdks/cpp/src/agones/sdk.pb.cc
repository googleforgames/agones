// Copyright 2024 Google LLC All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This code was autogenerated. Do not edit directly.
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: sdk.proto
// Protobuf C++ Version: 5.29.0

#include "sdk.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace agones {
namespace dev {
namespace sdk {

inline constexpr KeyValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR KeyValue::KeyValue(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct KeyValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KeyValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~KeyValueDefaultTypeInternal() {}
  union {
    KeyValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AGONES_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KeyValueDefaultTypeInternal _KeyValue_default_instance_;

inline constexpr GameServer_Status_Port::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        port_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GameServer_Status_Port::GameServer_Status_Port(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GameServer_Status_PortDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameServer_Status_PortDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameServer_Status_PortDefaultTypeInternal() {}
  union {
    GameServer_Status_Port _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AGONES_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameServer_Status_PortDefaultTypeInternal _GameServer_Status_Port_default_instance_;

inline constexpr GameServer_Status_PlayerStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : ids_{},
        count_{::int64_t{0}},
        capacity_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GameServer_Status_PlayerStatus::GameServer_Status_PlayerStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GameServer_Status_PlayerStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameServer_Status_PlayerStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameServer_Status_PlayerStatusDefaultTypeInternal() {}
  union {
    GameServer_Status_PlayerStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AGONES_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameServer_Status_PlayerStatusDefaultTypeInternal _GameServer_Status_PlayerStatus_default_instance_;

inline constexpr GameServer_Status_ListStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : values_{},
        capacity_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GameServer_Status_ListStatus::GameServer_Status_ListStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GameServer_Status_ListStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameServer_Status_ListStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameServer_Status_ListStatusDefaultTypeInternal() {}
  union {
    GameServer_Status_ListStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AGONES_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameServer_Status_ListStatusDefaultTypeInternal _GameServer_Status_ListStatus_default_instance_;

inline constexpr GameServer_Status_CounterStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : count_{::int64_t{0}},
        capacity_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GameServer_Status_CounterStatus::GameServer_Status_CounterStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GameServer_Status_CounterStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameServer_Status_CounterStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameServer_Status_CounterStatusDefaultTypeInternal() {}
  union {
    GameServer_Status_CounterStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AGONES_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameServer_Status_CounterStatusDefaultTypeInternal _GameServer_Status_CounterStatus_default_instance_;

inline constexpr GameServer_Status_Address::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GameServer_Status_Address::GameServer_Status_Address(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GameServer_Status_AddressDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameServer_Status_AddressDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameServer_Status_AddressDefaultTypeInternal() {}
  union {
    GameServer_Status_Address _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AGONES_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameServer_Status_AddressDefaultTypeInternal _GameServer_Status_Address_default_instance_;

inline constexpr GameServer_Spec_Health::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : disabled_{false},
        period_seconds_{0},
        failure_threshold_{0},
        initial_delay_seconds_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GameServer_Spec_Health::GameServer_Spec_Health(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GameServer_Spec_HealthDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameServer_Spec_HealthDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameServer_Spec_HealthDefaultTypeInternal() {}
  union {
    GameServer_Spec_Health _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AGONES_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameServer_Spec_HealthDefaultTypeInternal _GameServer_Spec_Health_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR GameServer_ObjectMeta_LabelsEntry_DoNotUse::GameServer_ObjectMeta_LabelsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : GameServer_ObjectMeta_LabelsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : GameServer_ObjectMeta_LabelsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct GameServer_ObjectMeta_LabelsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameServer_ObjectMeta_LabelsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameServer_ObjectMeta_LabelsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GameServer_ObjectMeta_LabelsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AGONES_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameServer_ObjectMeta_LabelsEntry_DoNotUseDefaultTypeInternal _GameServer_ObjectMeta_LabelsEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR GameServer_ObjectMeta_AnnotationsEntry_DoNotUse::GameServer_ObjectMeta_AnnotationsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : GameServer_ObjectMeta_AnnotationsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : GameServer_ObjectMeta_AnnotationsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct GameServer_ObjectMeta_AnnotationsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameServer_ObjectMeta_AnnotationsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameServer_ObjectMeta_AnnotationsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GameServer_ObjectMeta_AnnotationsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AGONES_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameServer_ObjectMeta_AnnotationsEntry_DoNotUseDefaultTypeInternal _GameServer_ObjectMeta_AnnotationsEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Empty::Empty(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct EmptyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmptyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmptyDefaultTypeInternal() {}
  union {
    Empty _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AGONES_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmptyDefaultTypeInternal _Empty_default_instance_;

inline constexpr Duration::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : seconds_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Duration::Duration(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DurationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DurationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DurationDefaultTypeInternal() {}
  union {
    Duration _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AGONES_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DurationDefaultTypeInternal _Duration_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR GameServer_Status_ListsEntry_DoNotUse::GameServer_Status_ListsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : GameServer_Status_ListsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : GameServer_Status_ListsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct GameServer_Status_ListsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameServer_Status_ListsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameServer_Status_ListsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GameServer_Status_ListsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AGONES_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameServer_Status_ListsEntry_DoNotUseDefaultTypeInternal _GameServer_Status_ListsEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR GameServer_Status_CountersEntry_DoNotUse::GameServer_Status_CountersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : GameServer_Status_CountersEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : GameServer_Status_CountersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct GameServer_Status_CountersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameServer_Status_CountersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameServer_Status_CountersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GameServer_Status_CountersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AGONES_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameServer_Status_CountersEntry_DoNotUseDefaultTypeInternal _GameServer_Status_CountersEntry_DoNotUse_default_instance_;

inline constexpr GameServer_Spec::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        health_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GameServer_Spec::GameServer_Spec(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GameServer_SpecDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameServer_SpecDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameServer_SpecDefaultTypeInternal() {}
  union {
    GameServer_Spec _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AGONES_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameServer_SpecDefaultTypeInternal _GameServer_Spec_default_instance_;

inline constexpr GameServer_ObjectMeta::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : annotations_{},
        labels_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        namespace__(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        resource_version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        generation_{::int64_t{0}},
        creation_timestamp_{::int64_t{0}},
        deletion_timestamp_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GameServer_ObjectMeta::GameServer_ObjectMeta(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GameServer_ObjectMetaDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameServer_ObjectMetaDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameServer_ObjectMetaDefaultTypeInternal() {}
  union {
    GameServer_ObjectMeta _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AGONES_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameServer_ObjectMetaDefaultTypeInternal _GameServer_ObjectMeta_default_instance_;

inline constexpr GameServer_Status::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ports_{},
        counters_{},
        lists_{},
        addresses_{},
        state_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        players_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GameServer_Status::GameServer_Status(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GameServer_StatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameServer_StatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameServer_StatusDefaultTypeInternal() {}
  union {
    GameServer_Status _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AGONES_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameServer_StatusDefaultTypeInternal _GameServer_Status_default_instance_;

inline constexpr GameServer::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        object_meta_{nullptr},
        spec_{nullptr},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GameServer::GameServer(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GameServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameServerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameServerDefaultTypeInternal() {}
  union {
    GameServer _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AGONES_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameServerDefaultTypeInternal _GameServer_default_instance_;
}  // namespace sdk
}  // namespace dev
}  // namespace agones
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_sdk_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_sdk_2eproto = nullptr;
const ::uint32_t
    TableStruct_sdk_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::Empty, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::KeyValue, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::KeyValue, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::KeyValue, _impl_.value_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::Duration, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::Duration, _impl_.seconds_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_ObjectMeta_AnnotationsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_ObjectMeta_AnnotationsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_ObjectMeta_AnnotationsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_ObjectMeta_AnnotationsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_ObjectMeta_LabelsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_ObjectMeta_LabelsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_ObjectMeta_LabelsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_ObjectMeta_LabelsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_ObjectMeta, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_ObjectMeta, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_ObjectMeta, _impl_.namespace__),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_ObjectMeta, _impl_.uid_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_ObjectMeta, _impl_.resource_version_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_ObjectMeta, _impl_.generation_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_ObjectMeta, _impl_.creation_timestamp_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_ObjectMeta, _impl_.deletion_timestamp_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_ObjectMeta, _impl_.annotations_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_ObjectMeta, _impl_.labels_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Spec_Health, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Spec_Health, _impl_.disabled_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Spec_Health, _impl_.period_seconds_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Spec_Health, _impl_.failure_threshold_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Spec_Health, _impl_.initial_delay_seconds_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Spec, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Spec, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Spec, _impl_.health_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status_Address, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status_Address, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status_Address, _impl_.address_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status_Port, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status_Port, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status_Port, _impl_.port_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status_PlayerStatus, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status_PlayerStatus, _impl_.count_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status_PlayerStatus, _impl_.capacity_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status_PlayerStatus, _impl_.ids_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status_CounterStatus, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status_CounterStatus, _impl_.count_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status_CounterStatus, _impl_.capacity_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status_ListStatus, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status_ListStatus, _impl_.capacity_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status_ListStatus, _impl_.values_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status_CountersEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status_CountersEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status_CountersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status_CountersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status_ListsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status_ListsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status_ListsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status_ListsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status, _impl_.state_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status, _impl_.address_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status, _impl_.addresses_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status, _impl_.ports_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status, _impl_.players_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status, _impl_.counters_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer_Status, _impl_.lists_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer, _impl_.object_meta_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer, _impl_.spec_),
        PROTOBUF_FIELD_OFFSET(::agones::dev::sdk::GameServer, _impl_.status_),
        0,
        1,
        2,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::agones::dev::sdk::Empty)},
        {8, -1, -1, sizeof(::agones::dev::sdk::KeyValue)},
        {18, -1, -1, sizeof(::agones::dev::sdk::Duration)},
        {27, 37, -1, sizeof(::agones::dev::sdk::GameServer_ObjectMeta_AnnotationsEntry_DoNotUse)},
        {39, 49, -1, sizeof(::agones::dev::sdk::GameServer_ObjectMeta_LabelsEntry_DoNotUse)},
        {51, -1, -1, sizeof(::agones::dev::sdk::GameServer_ObjectMeta)},
        {68, -1, -1, sizeof(::agones::dev::sdk::GameServer_Spec_Health)},
        {80, 89, -1, sizeof(::agones::dev::sdk::GameServer_Spec)},
        {90, -1, -1, sizeof(::agones::dev::sdk::GameServer_Status_Address)},
        {100, -1, -1, sizeof(::agones::dev::sdk::GameServer_Status_Port)},
        {110, -1, -1, sizeof(::agones::dev::sdk::GameServer_Status_PlayerStatus)},
        {121, -1, -1, sizeof(::agones::dev::sdk::GameServer_Status_CounterStatus)},
        {131, -1, -1, sizeof(::agones::dev::sdk::GameServer_Status_ListStatus)},
        {141, 151, -1, sizeof(::agones::dev::sdk::GameServer_Status_CountersEntry_DoNotUse)},
        {153, 163, -1, sizeof(::agones::dev::sdk::GameServer_Status_ListsEntry_DoNotUse)},
        {165, 180, -1, sizeof(::agones::dev::sdk::GameServer_Status)},
        {187, 198, -1, sizeof(::agones::dev::sdk::GameServer)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::agones::dev::sdk::_Empty_default_instance_._instance,
    &::agones::dev::sdk::_KeyValue_default_instance_._instance,
    &::agones::dev::sdk::_Duration_default_instance_._instance,
    &::agones::dev::sdk::_GameServer_ObjectMeta_AnnotationsEntry_DoNotUse_default_instance_._instance,
    &::agones::dev::sdk::_GameServer_ObjectMeta_LabelsEntry_DoNotUse_default_instance_._instance,
    &::agones::dev::sdk::_GameServer_ObjectMeta_default_instance_._instance,
    &::agones::dev::sdk::_GameServer_Spec_Health_default_instance_._instance,
    &::agones::dev::sdk::_GameServer_Spec_default_instance_._instance,
    &::agones::dev::sdk::_GameServer_Status_Address_default_instance_._instance,
    &::agones::dev::sdk::_GameServer_Status_Port_default_instance_._instance,
    &::agones::dev::sdk::_GameServer_Status_PlayerStatus_default_instance_._instance,
    &::agones::dev::sdk::_GameServer_Status_CounterStatus_default_instance_._instance,
    &::agones::dev::sdk::_GameServer_Status_ListStatus_default_instance_._instance,
    &::agones::dev::sdk::_GameServer_Status_CountersEntry_DoNotUse_default_instance_._instance,
    &::agones::dev::sdk::_GameServer_Status_ListsEntry_DoNotUse_default_instance_._instance,
    &::agones::dev::sdk::_GameServer_Status_default_instance_._instance,
    &::agones::dev::sdk::_GameServer_default_instance_._instance,
};
const char descriptor_table_protodef_sdk_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\tsdk.proto\022\016agones.dev.sdk\032\034google/api/"
    "annotations.proto\032.protoc-gen-openapiv2/"
    "options/annotations.proto\"\007\n\005Empty\"&\n\010Ke"
    "yValue\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\"\033\n\010Du"
    "ration\022\017\n\007seconds\030\001 \001(\003\"\213\014\n\nGameServer\022:"
    "\n\013object_meta\030\001 \001(\0132%.agones.dev.sdk.Gam"
    "eServer.ObjectMeta\022-\n\004spec\030\002 \001(\0132\037.agone"
    "s.dev.sdk.GameServer.Spec\0221\n\006status\030\003 \001("
    "\0132!.agones.dev.sdk.GameServer.Status\032\223\003\n"
    "\nObjectMeta\022\014\n\004name\030\001 \001(\t\022\021\n\tnamespace\030\002"
    " \001(\t\022\013\n\003uid\030\003 \001(\t\022\030\n\020resource_version\030\004 "
    "\001(\t\022\022\n\ngeneration\030\005 \001(\003\022\032\n\022creation_time"
    "stamp\030\006 \001(\003\022\032\n\022deletion_timestamp\030\007 \001(\003\022"
    "K\n\013annotations\030\010 \003(\01326.agones.dev.sdk.Ga"
    "meServer.ObjectMeta.AnnotationsEntry\022A\n\006"
    "labels\030\t \003(\01321.agones.dev.sdk.GameServer"
    ".ObjectMeta.LabelsEntry\0322\n\020AnnotationsEn"
    "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032-\n\013L"
    "abelsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\002"
    "8\001\032\273\001\n\004Spec\0226\n\006health\030\001 \001(\0132&.agones.dev"
    ".sdk.GameServer.Spec.Health\032{\n\006Health\022\037\n"
    "\010disabled\030\001 \001(\010B\r\222A\n\242\002\007boolean\022\026\n\016period"
    "_seconds\030\002 \001(\005\022\031\n\021failure_threshold\030\003 \001("
    "\005\022\035\n\025initial_delay_seconds\030\004 \001(\005\032\212\006\n\006Sta"
    "tus\022\r\n\005state\030\001 \001(\t\022\017\n\007address\030\002 \001(\t\022<\n\ta"
    "ddresses\030\007 \003(\0132).agones.dev.sdk.GameServ"
    "er.Status.Address\0225\n\005ports\030\003 \003(\0132&.agone"
    "s.dev.sdk.GameServer.Status.Port\022\?\n\007play"
    "ers\030\004 \001(\0132..agones.dev.sdk.GameServer.St"
    "atus.PlayerStatus\022A\n\010counters\030\005 \003(\0132/.ag"
    "ones.dev.sdk.GameServer.Status.CountersE"
    "ntry\022;\n\005lists\030\006 \003(\0132,.agones.dev.sdk.Gam"
    "eServer.Status.ListsEntry\032(\n\007Address\022\014\n\004"
    "type\030\001 \001(\t\022\017\n\007address\030\002 \001(\t\032\"\n\004Port\022\014\n\004n"
    "ame\030\001 \001(\t\022\014\n\004port\030\002 \001(\005\032<\n\014PlayerStatus\022"
    "\r\n\005count\030\001 \001(\003\022\020\n\010capacity\030\002 \001(\003\022\013\n\003ids\030"
    "\003 \003(\t\0320\n\rCounterStatus\022\r\n\005count\030\001 \001(\003\022\020\n"
    "\010capacity\030\002 \001(\003\032.\n\nListStatus\022\020\n\010capacit"
    "y\030\001 \001(\003\022\016\n\006values\030\002 \003(\t\032`\n\rCountersEntry"
    "\022\013\n\003key\030\001 \001(\t\022>\n\005value\030\002 \001(\0132/.agones.de"
    "v.sdk.GameServer.Status.CounterStatus:\0028"
    "\001\032Z\n\nListsEntry\022\013\n\003key\030\001 \001(\t\022;\n\005value\030\002 "
    "\001(\0132,.agones.dev.sdk.GameServer.Status.L"
    "istStatus:\0028\0012\206\006\n\003SDK\022H\n\005Ready\022\025.agones."
    "dev.sdk.Empty\032\025.agones.dev.sdk.Empty\"\021\202\323"
    "\344\223\002\013\"\006/ready:\001*\022N\n\010Allocate\022\025.agones.dev"
    ".sdk.Empty\032\025.agones.dev.sdk.Empty\"\024\202\323\344\223\002"
    "\016\"\t/allocate:\001*\022N\n\010Shutdown\022\025.agones.dev"
    ".sdk.Empty\032\025.agones.dev.sdk.Empty\"\024\202\323\344\223\002"
    "\016\"\t/shutdown:\001*\022L\n\006Health\022\025.agones.dev.s"
    "dk.Empty\032\025.agones.dev.sdk.Empty\"\022\202\323\344\223\002\014\""
    "\007/health:\001*(\001\022W\n\rGetGameServer\022\025.agones."
    "dev.sdk.Empty\032\032.agones.dev.sdk.GameServe"
    "r\"\023\202\323\344\223\002\r\022\013/gameserver\022a\n\017WatchGameServe"
    "r\022\025.agones.dev.sdk.Empty\032\032.agones.dev.sd"
    "k.GameServer\"\031\202\323\344\223\002\023\022\021/watch/gameserver0"
    "\001\022W\n\010SetLabel\022\030.agones.dev.sdk.KeyValue\032"
    "\025.agones.dev.sdk.Empty\"\032\202\323\344\223\002\024\032\017/metadat"
    "a/label:\001*\022a\n\rSetAnnotation\022\030.agones.dev"
    ".sdk.KeyValue\032\025.agones.dev.sdk.Empty\"\037\202\323"
    "\344\223\002\031\032\024/metadata/annotation:\001*\022O\n\007Reserve"
    "\022\030.agones.dev.sdk.Duration\032\025.agones.dev."
    "sdk.Empty\"\023\202\323\344\223\002\r\"\010/reserve:\001*BOZ\005./sdk\222"
    "AE\022\034\n\tsdk.proto2\017version not set*\001\0012\020app"
    "lication/json:\020application/jsonb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_sdk_2eproto_deps[2] =
    {
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
        &::descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fannotations_2eproto,
};
static ::absl::once_flag descriptor_table_sdk_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_sdk_2eproto = {
    false,
    false,
    2599,
    descriptor_table_protodef_sdk_2eproto,
    "sdk.proto",
    &descriptor_table_sdk_2eproto_once,
    descriptor_table_sdk_2eproto_deps,
    2,
    17,
    schemas,
    file_default_instances,
    TableStruct_sdk_2eproto::offsets,
    file_level_enum_descriptors_sdk_2eproto,
    file_level_service_descriptors_sdk_2eproto,
};
namespace agones {
namespace dev {
namespace sdk {
// ===================================================================

class Empty::_Internal {
 public:
};

Empty::Empty(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:agones.dev.sdk.Empty)
}
Empty::Empty(
    ::google::protobuf::Arena* arena,
    const Empty& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Empty* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:agones.dev.sdk.Empty)
}

inline void* Empty::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Empty(arena);
}
constexpr auto Empty::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Empty),
                                            alignof(Empty));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Empty::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Empty_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Empty::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<Empty>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Empty::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<Empty>(), &Empty::ByteSizeLong,
            &Empty::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Empty, _impl_._cached_size_),
        false,
    },
    &Empty::kDescriptorMethods,
    &descriptor_table_sdk_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Empty::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> Empty::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agones::dev::sdk::Empty>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata Empty::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class KeyValue::_Internal {
 public:
};

KeyValue::KeyValue(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agones.dev.sdk.KeyValue)
}
inline PROTOBUF_NDEBUG_INLINE KeyValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::agones::dev::sdk::KeyValue& from_msg)
      : key_(arena, from.key_),
        value_(arena, from.value_),
        _cached_size_{0} {}

KeyValue::KeyValue(
    ::google::protobuf::Arena* arena,
    const KeyValue& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  KeyValue* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:agones.dev.sdk.KeyValue)
}
inline PROTOBUF_NDEBUG_INLINE KeyValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : key_(arena),
        value_(arena),
        _cached_size_{0} {}

inline void KeyValue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
KeyValue::~KeyValue() {
  // @@protoc_insertion_point(destructor:agones.dev.sdk.KeyValue)
  SharedDtor(*this);
}
inline void KeyValue::SharedDtor(MessageLite& self) {
  KeyValue& this_ = static_cast<KeyValue&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.key_.Destroy();
  this_._impl_.value_.Destroy();
  this_._impl_.~Impl_();
}

inline void* KeyValue::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) KeyValue(arena);
}
constexpr auto KeyValue::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(KeyValue),
                                            alignof(KeyValue));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull KeyValue::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_KeyValue_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &KeyValue::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<KeyValue>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &KeyValue::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<KeyValue>(), &KeyValue::ByteSizeLong,
            &KeyValue::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(KeyValue, _impl_._cached_size_),
        false,
    },
    &KeyValue::kDescriptorMethods,
    &descriptor_table_sdk_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* KeyValue::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 40, 2> KeyValue::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agones::dev::sdk::KeyValue>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(KeyValue, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(KeyValue, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(KeyValue, _impl_.key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(KeyValue, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\3\5\0\0\0\0\0"
    "agones.dev.sdk.KeyValue"
    "key"
    "value"
  }},
};

PROTOBUF_NOINLINE void KeyValue::Clear() {
// @@protoc_insertion_point(message_clear_start:agones.dev.sdk.KeyValue)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  _impl_.value_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* KeyValue::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const KeyValue& this_ = static_cast<const KeyValue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* KeyValue::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const KeyValue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:agones.dev.sdk.KeyValue)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string key = 1;
          if (!this_._internal_key().empty()) {
            const std::string& _s = this_._internal_key();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agones.dev.sdk.KeyValue.key");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string value = 2;
          if (!this_._internal_value().empty()) {
            const std::string& _s = this_._internal_value();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agones.dev.sdk.KeyValue.value");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:agones.dev.sdk.KeyValue)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t KeyValue::ByteSizeLong(const MessageLite& base) {
          const KeyValue& this_ = static_cast<const KeyValue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t KeyValue::ByteSizeLong() const {
          const KeyValue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:agones.dev.sdk.KeyValue)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string key = 1;
            if (!this_._internal_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_key());
            }
            // string value = 2;
            if (!this_._internal_value().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_value());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void KeyValue::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<KeyValue*>(&to_msg);
  auto& from = static_cast<const KeyValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agones.dev.sdk.KeyValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void KeyValue::CopyFrom(const KeyValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agones.dev.sdk.KeyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void KeyValue::InternalSwap(KeyValue* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
}

::google::protobuf::Metadata KeyValue::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Duration::_Internal {
 public:
};

Duration::Duration(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agones.dev.sdk.Duration)
}
Duration::Duration(
    ::google::protobuf::Arena* arena, const Duration& from)
    : Duration(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Duration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Duration::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.seconds_ = {};
}
Duration::~Duration() {
  // @@protoc_insertion_point(destructor:agones.dev.sdk.Duration)
  SharedDtor(*this);
}
inline void Duration::SharedDtor(MessageLite& self) {
  Duration& this_ = static_cast<Duration&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Duration::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Duration(arena);
}
constexpr auto Duration::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Duration),
                                            alignof(Duration));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Duration::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Duration_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Duration::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Duration>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Duration::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Duration>(), &Duration::ByteSizeLong,
            &Duration::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Duration, _impl_._cached_size_),
        false,
    },
    &Duration::kDescriptorMethods,
    &descriptor_table_sdk_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Duration::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Duration::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agones::dev::sdk::Duration>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 seconds = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Duration, _impl_.seconds_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Duration, _impl_.seconds_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 seconds = 1;
    {PROTOBUF_FIELD_OFFSET(Duration, _impl_.seconds_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Duration::Clear() {
// @@protoc_insertion_point(message_clear_start:agones.dev.sdk.Duration)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.seconds_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Duration::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Duration& this_ = static_cast<const Duration&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Duration::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Duration& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:agones.dev.sdk.Duration)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 seconds = 1;
          if (this_._internal_seconds() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_seconds(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:agones.dev.sdk.Duration)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Duration::ByteSizeLong(const MessageLite& base) {
          const Duration& this_ = static_cast<const Duration&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Duration::ByteSizeLong() const {
          const Duration& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:agones.dev.sdk.Duration)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // int64 seconds = 1;
            if (this_._internal_seconds() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_seconds());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Duration::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Duration*>(&to_msg);
  auto& from = static_cast<const Duration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agones.dev.sdk.Duration)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_seconds() != 0) {
    _this->_impl_.seconds_ = from._impl_.seconds_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Duration::CopyFrom(const Duration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agones.dev.sdk.Duration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Duration::InternalSwap(Duration* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.seconds_, other->_impl_.seconds_);
}

::google::protobuf::Metadata Duration::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              GameServer_ObjectMeta_AnnotationsEntry_DoNotUse::GameServer_ObjectMeta_AnnotationsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              GameServer_ObjectMeta_AnnotationsEntry_DoNotUse::GameServer_ObjectMeta_AnnotationsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              GameServer_ObjectMeta_AnnotationsEntry_DoNotUse::GameServer_ObjectMeta_AnnotationsEntry_DoNotUse() : SuperType() {}
              GameServer_ObjectMeta_AnnotationsEntry_DoNotUse::GameServer_ObjectMeta_AnnotationsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* GameServer_ObjectMeta_AnnotationsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) GameServer_ObjectMeta_AnnotationsEntry_DoNotUse(arena);
              }
              constexpr auto GameServer_ObjectMeta_AnnotationsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GameServer_ObjectMeta_AnnotationsEntry_DoNotUse),
                                                          alignof(GameServer_ObjectMeta_AnnotationsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull GameServer_ObjectMeta_AnnotationsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_GameServer_ObjectMeta_AnnotationsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &GameServer_ObjectMeta_AnnotationsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<GameServer_ObjectMeta_AnnotationsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &GameServer_ObjectMeta_AnnotationsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &GameServer_ObjectMeta_AnnotationsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta_AnnotationsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &GameServer_ObjectMeta_AnnotationsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_sdk_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* GameServer_ObjectMeta_AnnotationsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 70, 2> GameServer_ObjectMeta_AnnotationsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta_AnnotationsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agones::dev::sdk::GameServer_ObjectMeta_AnnotationsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta_AnnotationsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta_AnnotationsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta_AnnotationsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta_AnnotationsEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\65\3\5\0\0\0\0\0"
    "agones.dev.sdk.GameServer.ObjectMeta.AnnotationsEntry"
    "key"
    "value"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              GameServer_ObjectMeta_LabelsEntry_DoNotUse::GameServer_ObjectMeta_LabelsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              GameServer_ObjectMeta_LabelsEntry_DoNotUse::GameServer_ObjectMeta_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              GameServer_ObjectMeta_LabelsEntry_DoNotUse::GameServer_ObjectMeta_LabelsEntry_DoNotUse() : SuperType() {}
              GameServer_ObjectMeta_LabelsEntry_DoNotUse::GameServer_ObjectMeta_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* GameServer_ObjectMeta_LabelsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) GameServer_ObjectMeta_LabelsEntry_DoNotUse(arena);
              }
              constexpr auto GameServer_ObjectMeta_LabelsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GameServer_ObjectMeta_LabelsEntry_DoNotUse),
                                                          alignof(GameServer_ObjectMeta_LabelsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull GameServer_ObjectMeta_LabelsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_GameServer_ObjectMeta_LabelsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &GameServer_ObjectMeta_LabelsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<GameServer_ObjectMeta_LabelsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &GameServer_ObjectMeta_LabelsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &GameServer_ObjectMeta_LabelsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta_LabelsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &GameServer_ObjectMeta_LabelsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_sdk_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* GameServer_ObjectMeta_LabelsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 65, 2> GameServer_ObjectMeta_LabelsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta_LabelsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agones::dev::sdk::GameServer_ObjectMeta_LabelsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta_LabelsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta_LabelsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta_LabelsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta_LabelsEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\60\3\5\0\0\0\0\0"
    "agones.dev.sdk.GameServer.ObjectMeta.LabelsEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class GameServer_ObjectMeta::_Internal {
 public:
};

GameServer_ObjectMeta::GameServer_ObjectMeta(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agones.dev.sdk.GameServer.ObjectMeta)
}
inline PROTOBUF_NDEBUG_INLINE GameServer_ObjectMeta::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::agones::dev::sdk::GameServer_ObjectMeta& from_msg)
      : annotations_{visibility, arena, from.annotations_},
        labels_{visibility, arena, from.labels_},
        name_(arena, from.name_),
        namespace__(arena, from.namespace__),
        uid_(arena, from.uid_),
        resource_version_(arena, from.resource_version_),
        _cached_size_{0} {}

GameServer_ObjectMeta::GameServer_ObjectMeta(
    ::google::protobuf::Arena* arena,
    const GameServer_ObjectMeta& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GameServer_ObjectMeta* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, generation_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, generation_),
           offsetof(Impl_, deletion_timestamp_) -
               offsetof(Impl_, generation_) +
               sizeof(Impl_::deletion_timestamp_));

  // @@protoc_insertion_point(copy_constructor:agones.dev.sdk.GameServer.ObjectMeta)
}
inline PROTOBUF_NDEBUG_INLINE GameServer_ObjectMeta::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : annotations_{visibility, arena},
        labels_{visibility, arena},
        name_(arena),
        namespace__(arena),
        uid_(arena),
        resource_version_(arena),
        _cached_size_{0} {}

inline void GameServer_ObjectMeta::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, generation_),
           0,
           offsetof(Impl_, deletion_timestamp_) -
               offsetof(Impl_, generation_) +
               sizeof(Impl_::deletion_timestamp_));
}
GameServer_ObjectMeta::~GameServer_ObjectMeta() {
  // @@protoc_insertion_point(destructor:agones.dev.sdk.GameServer.ObjectMeta)
  SharedDtor(*this);
}
inline void GameServer_ObjectMeta::SharedDtor(MessageLite& self) {
  GameServer_ObjectMeta& this_ = static_cast<GameServer_ObjectMeta&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.namespace__.Destroy();
  this_._impl_.uid_.Destroy();
  this_._impl_.resource_version_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GameServer_ObjectMeta::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GameServer_ObjectMeta(arena);
}
constexpr auto GameServer_ObjectMeta::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta, _impl_.annotations_) +
          decltype(GameServer_ObjectMeta::_impl_.annotations_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta, _impl_.annotations_) +
          decltype(GameServer_ObjectMeta::_impl_.annotations_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta, _impl_.labels_) +
          decltype(GameServer_ObjectMeta::_impl_.labels_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta, _impl_.labels_) +
          decltype(GameServer_ObjectMeta::_impl_.labels_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(GameServer_ObjectMeta), alignof(GameServer_ObjectMeta), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GameServer_ObjectMeta::PlacementNew_,
                                 sizeof(GameServer_ObjectMeta),
                                 alignof(GameServer_ObjectMeta));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GameServer_ObjectMeta::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GameServer_ObjectMeta_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GameServer_ObjectMeta::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GameServer_ObjectMeta>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GameServer_ObjectMeta::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GameServer_ObjectMeta>(), &GameServer_ObjectMeta::ByteSizeLong,
            &GameServer_ObjectMeta::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta, _impl_._cached_size_),
        false,
    },
    &GameServer_ObjectMeta::kDescriptorMethods,
    &descriptor_table_sdk_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GameServer_ObjectMeta::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 9, 2, 102, 2> GameServer_ObjectMeta::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agones::dev::sdk::GameServer_ObjectMeta>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta, _impl_.name_)}},
    // string namespace = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta, _impl_.namespace__)}},
    // string uid = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta, _impl_.uid_)}},
    // string resource_version = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta, _impl_.resource_version_)}},
    // int64 generation = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GameServer_ObjectMeta, _impl_.generation_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta, _impl_.generation_)}},
    // int64 creation_timestamp = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GameServer_ObjectMeta, _impl_.creation_timestamp_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta, _impl_.creation_timestamp_)}},
    // int64 deletion_timestamp = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GameServer_ObjectMeta, _impl_.deletion_timestamp_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta, _impl_.deletion_timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string namespace = 2;
    {PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta, _impl_.namespace__), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string uid = 3;
    {PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta, _impl_.uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string resource_version = 4;
    {PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta, _impl_.resource_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 generation = 5;
    {PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta, _impl_.generation_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 creation_timestamp = 6;
    {PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta, _impl_.creation_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 deletion_timestamp = 7;
    {PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta, _impl_.deletion_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // map<string, string> annotations = 8;
    {PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta, _impl_.annotations_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, string> labels = 9;
    {PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta, _impl_.labels_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(GameServer_ObjectMeta()._impl_.annotations_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(GameServer_ObjectMeta()._impl_.labels_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\44\4\11\3\20\0\0\0\13\6\0\0\0\0\0\0"
    "agones.dev.sdk.GameServer.ObjectMeta"
    "name"
    "namespace"
    "uid"
    "resource_version"
    "annotations"
    "labels"
  }},
};

PROTOBUF_NOINLINE void GameServer_ObjectMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:agones.dev.sdk.GameServer.ObjectMeta)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.annotations_.Clear();
  _impl_.labels_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.namespace__.ClearToEmpty();
  _impl_.uid_.ClearToEmpty();
  _impl_.resource_version_.ClearToEmpty();
  ::memset(&_impl_.generation_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.deletion_timestamp_) -
      reinterpret_cast<char*>(&_impl_.generation_)) + sizeof(_impl_.deletion_timestamp_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GameServer_ObjectMeta::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GameServer_ObjectMeta& this_ = static_cast<const GameServer_ObjectMeta&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GameServer_ObjectMeta::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GameServer_ObjectMeta& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:agones.dev.sdk.GameServer.ObjectMeta)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agones.dev.sdk.GameServer.ObjectMeta.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string namespace = 2;
          if (!this_._internal_namespace_().empty()) {
            const std::string& _s = this_._internal_namespace_();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agones.dev.sdk.GameServer.ObjectMeta.namespace");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string uid = 3;
          if (!this_._internal_uid().empty()) {
            const std::string& _s = this_._internal_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agones.dev.sdk.GameServer.ObjectMeta.uid");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string resource_version = 4;
          if (!this_._internal_resource_version().empty()) {
            const std::string& _s = this_._internal_resource_version();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agones.dev.sdk.GameServer.ObjectMeta.resource_version");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // int64 generation = 5;
          if (this_._internal_generation() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<5>(
                    stream, this_._internal_generation(), target);
          }

          // int64 creation_timestamp = 6;
          if (this_._internal_creation_timestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<6>(
                    stream, this_._internal_creation_timestamp(), target);
          }

          // int64 deletion_timestamp = 7;
          if (this_._internal_deletion_timestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<7>(
                    stream, this_._internal_deletion_timestamp(), target);
          }

          // map<string, string> annotations = 8;
          if (!this_._internal_annotations().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_annotations();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agones.dev.sdk.GameServer.ObjectMeta.annotations");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agones.dev.sdk.GameServer.ObjectMeta.annotations");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agones.dev.sdk.GameServer.ObjectMeta.annotations");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agones.dev.sdk.GameServer.ObjectMeta.annotations");
              }
            }
          }

          // map<string, string> labels = 9;
          if (!this_._internal_labels().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_labels();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    9, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agones.dev.sdk.GameServer.ObjectMeta.labels");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agones.dev.sdk.GameServer.ObjectMeta.labels");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    9, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agones.dev.sdk.GameServer.ObjectMeta.labels");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agones.dev.sdk.GameServer.ObjectMeta.labels");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:agones.dev.sdk.GameServer.ObjectMeta)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GameServer_ObjectMeta::ByteSizeLong(const MessageLite& base) {
          const GameServer_ObjectMeta& this_ = static_cast<const GameServer_ObjectMeta&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GameServer_ObjectMeta::ByteSizeLong() const {
          const GameServer_ObjectMeta& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:agones.dev.sdk.GameServer.ObjectMeta)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> annotations = 8;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_annotations_size());
              for (const auto& entry : this_._internal_annotations()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, string> labels = 9;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_labels_size());
              for (const auto& entry : this_._internal_labels()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string namespace = 2;
            if (!this_._internal_namespace_().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_namespace_());
            }
            // string uid = 3;
            if (!this_._internal_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_uid());
            }
            // string resource_version = 4;
            if (!this_._internal_resource_version().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_resource_version());
            }
            // int64 generation = 5;
            if (this_._internal_generation() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_generation());
            }
            // int64 creation_timestamp = 6;
            if (this_._internal_creation_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_creation_timestamp());
            }
            // int64 deletion_timestamp = 7;
            if (this_._internal_deletion_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_deletion_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GameServer_ObjectMeta::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameServer_ObjectMeta*>(&to_msg);
  auto& from = static_cast<const GameServer_ObjectMeta&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agones.dev.sdk.GameServer.ObjectMeta)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.annotations_.MergeFrom(from._impl_.annotations_);
  _this->_impl_.labels_.MergeFrom(from._impl_.labels_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_namespace_().empty()) {
    _this->_internal_set_namespace_(from._internal_namespace_());
  }
  if (!from._internal_uid().empty()) {
    _this->_internal_set_uid(from._internal_uid());
  }
  if (!from._internal_resource_version().empty()) {
    _this->_internal_set_resource_version(from._internal_resource_version());
  }
  if (from._internal_generation() != 0) {
    _this->_impl_.generation_ = from._impl_.generation_;
  }
  if (from._internal_creation_timestamp() != 0) {
    _this->_impl_.creation_timestamp_ = from._impl_.creation_timestamp_;
  }
  if (from._internal_deletion_timestamp() != 0) {
    _this->_impl_.deletion_timestamp_ = from._impl_.deletion_timestamp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameServer_ObjectMeta::CopyFrom(const GameServer_ObjectMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agones.dev.sdk.GameServer.ObjectMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GameServer_ObjectMeta::InternalSwap(GameServer_ObjectMeta* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.annotations_.InternalSwap(&other->_impl_.annotations_);
  _impl_.labels_.InternalSwap(&other->_impl_.labels_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.namespace__, &other->_impl_.namespace__, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uid_, &other->_impl_.uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.resource_version_, &other->_impl_.resource_version_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta, _impl_.deletion_timestamp_)
      + sizeof(GameServer_ObjectMeta::_impl_.deletion_timestamp_)
      - PROTOBUF_FIELD_OFFSET(GameServer_ObjectMeta, _impl_.generation_)>(
          reinterpret_cast<char*>(&_impl_.generation_),
          reinterpret_cast<char*>(&other->_impl_.generation_));
}

::google::protobuf::Metadata GameServer_ObjectMeta::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GameServer_Spec_Health::_Internal {
 public:
};

GameServer_Spec_Health::GameServer_Spec_Health(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agones.dev.sdk.GameServer.Spec.Health)
}
GameServer_Spec_Health::GameServer_Spec_Health(
    ::google::protobuf::Arena* arena, const GameServer_Spec_Health& from)
    : GameServer_Spec_Health(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GameServer_Spec_Health::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GameServer_Spec_Health::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, disabled_),
           0,
           offsetof(Impl_, initial_delay_seconds_) -
               offsetof(Impl_, disabled_) +
               sizeof(Impl_::initial_delay_seconds_));
}
GameServer_Spec_Health::~GameServer_Spec_Health() {
  // @@protoc_insertion_point(destructor:agones.dev.sdk.GameServer.Spec.Health)
  SharedDtor(*this);
}
inline void GameServer_Spec_Health::SharedDtor(MessageLite& self) {
  GameServer_Spec_Health& this_ = static_cast<GameServer_Spec_Health&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GameServer_Spec_Health::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GameServer_Spec_Health(arena);
}
constexpr auto GameServer_Spec_Health::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GameServer_Spec_Health),
                                            alignof(GameServer_Spec_Health));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GameServer_Spec_Health::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GameServer_Spec_Health_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GameServer_Spec_Health::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GameServer_Spec_Health>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GameServer_Spec_Health::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GameServer_Spec_Health>(), &GameServer_Spec_Health::ByteSizeLong,
            &GameServer_Spec_Health::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GameServer_Spec_Health, _impl_._cached_size_),
        false,
    },
    &GameServer_Spec_Health::kDescriptorMethods,
    &descriptor_table_sdk_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GameServer_Spec_Health::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> GameServer_Spec_Health::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agones::dev::sdk::GameServer_Spec_Health>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 initial_delay_seconds = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameServer_Spec_Health, _impl_.initial_delay_seconds_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_Spec_Health, _impl_.initial_delay_seconds_)}},
    // bool disabled = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GameServer_Spec_Health, _impl_.disabled_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_Spec_Health, _impl_.disabled_)}},
    // int32 period_seconds = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameServer_Spec_Health, _impl_.period_seconds_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_Spec_Health, _impl_.period_seconds_)}},
    // int32 failure_threshold = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameServer_Spec_Health, _impl_.failure_threshold_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_Spec_Health, _impl_.failure_threshold_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool disabled = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(GameServer_Spec_Health, _impl_.disabled_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 period_seconds = 2;
    {PROTOBUF_FIELD_OFFSET(GameServer_Spec_Health, _impl_.period_seconds_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 failure_threshold = 3;
    {PROTOBUF_FIELD_OFFSET(GameServer_Spec_Health, _impl_.failure_threshold_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 initial_delay_seconds = 4;
    {PROTOBUF_FIELD_OFFSET(GameServer_Spec_Health, _impl_.initial_delay_seconds_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void GameServer_Spec_Health::Clear() {
// @@protoc_insertion_point(message_clear_start:agones.dev.sdk.GameServer.Spec.Health)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.disabled_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.initial_delay_seconds_) -
      reinterpret_cast<char*>(&_impl_.disabled_)) + sizeof(_impl_.initial_delay_seconds_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GameServer_Spec_Health::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GameServer_Spec_Health& this_ = static_cast<const GameServer_Spec_Health&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GameServer_Spec_Health::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GameServer_Spec_Health& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:agones.dev.sdk.GameServer.Spec.Health)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool disabled = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_disabled() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_disabled(), target);
          }

          // int32 period_seconds = 2;
          if (this_._internal_period_seconds() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_period_seconds(), target);
          }

          // int32 failure_threshold = 3;
          if (this_._internal_failure_threshold() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_failure_threshold(), target);
          }

          // int32 initial_delay_seconds = 4;
          if (this_._internal_initial_delay_seconds() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_initial_delay_seconds(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:agones.dev.sdk.GameServer.Spec.Health)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GameServer_Spec_Health::ByteSizeLong(const MessageLite& base) {
          const GameServer_Spec_Health& this_ = static_cast<const GameServer_Spec_Health&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GameServer_Spec_Health::ByteSizeLong() const {
          const GameServer_Spec_Health& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:agones.dev.sdk.GameServer.Spec.Health)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bool disabled = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_disabled() != 0) {
              total_size += 2;
            }
            // int32 period_seconds = 2;
            if (this_._internal_period_seconds() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_period_seconds());
            }
            // int32 failure_threshold = 3;
            if (this_._internal_failure_threshold() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_failure_threshold());
            }
            // int32 initial_delay_seconds = 4;
            if (this_._internal_initial_delay_seconds() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_initial_delay_seconds());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GameServer_Spec_Health::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameServer_Spec_Health*>(&to_msg);
  auto& from = static_cast<const GameServer_Spec_Health&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agones.dev.sdk.GameServer.Spec.Health)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_disabled() != 0) {
    _this->_impl_.disabled_ = from._impl_.disabled_;
  }
  if (from._internal_period_seconds() != 0) {
    _this->_impl_.period_seconds_ = from._impl_.period_seconds_;
  }
  if (from._internal_failure_threshold() != 0) {
    _this->_impl_.failure_threshold_ = from._impl_.failure_threshold_;
  }
  if (from._internal_initial_delay_seconds() != 0) {
    _this->_impl_.initial_delay_seconds_ = from._impl_.initial_delay_seconds_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameServer_Spec_Health::CopyFrom(const GameServer_Spec_Health& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agones.dev.sdk.GameServer.Spec.Health)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GameServer_Spec_Health::InternalSwap(GameServer_Spec_Health* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GameServer_Spec_Health, _impl_.initial_delay_seconds_)
      + sizeof(GameServer_Spec_Health::_impl_.initial_delay_seconds_)
      - PROTOBUF_FIELD_OFFSET(GameServer_Spec_Health, _impl_.disabled_)>(
          reinterpret_cast<char*>(&_impl_.disabled_),
          reinterpret_cast<char*>(&other->_impl_.disabled_));
}

::google::protobuf::Metadata GameServer_Spec_Health::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GameServer_Spec::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GameServer_Spec>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GameServer_Spec, _impl_._has_bits_);
};

GameServer_Spec::GameServer_Spec(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agones.dev.sdk.GameServer.Spec)
}
inline PROTOBUF_NDEBUG_INLINE GameServer_Spec::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::agones::dev::sdk::GameServer_Spec& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GameServer_Spec::GameServer_Spec(
    ::google::protobuf::Arena* arena,
    const GameServer_Spec& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GameServer_Spec* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.health_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::agones::dev::sdk::GameServer_Spec_Health>(
                              arena, *from._impl_.health_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:agones.dev.sdk.GameServer.Spec)
}
inline PROTOBUF_NDEBUG_INLINE GameServer_Spec::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GameServer_Spec::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.health_ = {};
}
GameServer_Spec::~GameServer_Spec() {
  // @@protoc_insertion_point(destructor:agones.dev.sdk.GameServer.Spec)
  SharedDtor(*this);
}
inline void GameServer_Spec::SharedDtor(MessageLite& self) {
  GameServer_Spec& this_ = static_cast<GameServer_Spec&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.health_;
  this_._impl_.~Impl_();
}

inline void* GameServer_Spec::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GameServer_Spec(arena);
}
constexpr auto GameServer_Spec::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GameServer_Spec),
                                            alignof(GameServer_Spec));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GameServer_Spec::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GameServer_Spec_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GameServer_Spec::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GameServer_Spec>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GameServer_Spec::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GameServer_Spec>(), &GameServer_Spec::ByteSizeLong,
            &GameServer_Spec::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GameServer_Spec, _impl_._cached_size_),
        false,
    },
    &GameServer_Spec::kDescriptorMethods,
    &descriptor_table_sdk_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GameServer_Spec::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GameServer_Spec::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GameServer_Spec, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agones::dev::sdk::GameServer_Spec>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .agones.dev.sdk.GameServer.Spec.Health health = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GameServer_Spec, _impl_.health_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .agones.dev.sdk.GameServer.Spec.Health health = 1;
    {PROTOBUF_FIELD_OFFSET(GameServer_Spec, _impl_.health_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::agones::dev::sdk::GameServer_Spec_Health>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GameServer_Spec::Clear() {
// @@protoc_insertion_point(message_clear_start:agones.dev.sdk.GameServer.Spec)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.health_ != nullptr);
    _impl_.health_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GameServer_Spec::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GameServer_Spec& this_ = static_cast<const GameServer_Spec&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GameServer_Spec::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GameServer_Spec& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:agones.dev.sdk.GameServer.Spec)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .agones.dev.sdk.GameServer.Spec.Health health = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.health_, this_._impl_.health_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:agones.dev.sdk.GameServer.Spec)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GameServer_Spec::ByteSizeLong(const MessageLite& base) {
          const GameServer_Spec& this_ = static_cast<const GameServer_Spec&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GameServer_Spec::ByteSizeLong() const {
          const GameServer_Spec& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:agones.dev.sdk.GameServer.Spec)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .agones.dev.sdk.GameServer.Spec.Health health = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.health_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GameServer_Spec::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameServer_Spec*>(&to_msg);
  auto& from = static_cast<const GameServer_Spec&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agones.dev.sdk.GameServer.Spec)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.health_ != nullptr);
    if (_this->_impl_.health_ == nullptr) {
      _this->_impl_.health_ =
          ::google::protobuf::Message::CopyConstruct<::agones::dev::sdk::GameServer_Spec_Health>(arena, *from._impl_.health_);
    } else {
      _this->_impl_.health_->MergeFrom(*from._impl_.health_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameServer_Spec::CopyFrom(const GameServer_Spec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agones.dev.sdk.GameServer.Spec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GameServer_Spec::InternalSwap(GameServer_Spec* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.health_, other->_impl_.health_);
}

::google::protobuf::Metadata GameServer_Spec::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GameServer_Status_Address::_Internal {
 public:
};

GameServer_Status_Address::GameServer_Status_Address(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agones.dev.sdk.GameServer.Status.Address)
}
inline PROTOBUF_NDEBUG_INLINE GameServer_Status_Address::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::agones::dev::sdk::GameServer_Status_Address& from_msg)
      : type_(arena, from.type_),
        address_(arena, from.address_),
        _cached_size_{0} {}

GameServer_Status_Address::GameServer_Status_Address(
    ::google::protobuf::Arena* arena,
    const GameServer_Status_Address& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GameServer_Status_Address* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:agones.dev.sdk.GameServer.Status.Address)
}
inline PROTOBUF_NDEBUG_INLINE GameServer_Status_Address::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : type_(arena),
        address_(arena),
        _cached_size_{0} {}

inline void GameServer_Status_Address::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GameServer_Status_Address::~GameServer_Status_Address() {
  // @@protoc_insertion_point(destructor:agones.dev.sdk.GameServer.Status.Address)
  SharedDtor(*this);
}
inline void GameServer_Status_Address::SharedDtor(MessageLite& self) {
  GameServer_Status_Address& this_ = static_cast<GameServer_Status_Address&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.type_.Destroy();
  this_._impl_.address_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GameServer_Status_Address::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GameServer_Status_Address(arena);
}
constexpr auto GameServer_Status_Address::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GameServer_Status_Address),
                                            alignof(GameServer_Status_Address));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GameServer_Status_Address::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GameServer_Status_Address_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GameServer_Status_Address::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GameServer_Status_Address>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GameServer_Status_Address::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GameServer_Status_Address>(), &GameServer_Status_Address::ByteSizeLong,
            &GameServer_Status_Address::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GameServer_Status_Address, _impl_._cached_size_),
        false,
    },
    &GameServer_Status_Address::kDescriptorMethods,
    &descriptor_table_sdk_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GameServer_Status_Address::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 60, 2> GameServer_Status_Address::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agones::dev::sdk::GameServer_Status_Address>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string address = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_Status_Address, _impl_.address_)}},
    // string type = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_Status_Address, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string type = 1;
    {PROTOBUF_FIELD_OFFSET(GameServer_Status_Address, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string address = 2;
    {PROTOBUF_FIELD_OFFSET(GameServer_Status_Address, _impl_.address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\50\4\7\0\0\0\0\0"
    "agones.dev.sdk.GameServer.Status.Address"
    "type"
    "address"
  }},
};

PROTOBUF_NOINLINE void GameServer_Status_Address::Clear() {
// @@protoc_insertion_point(message_clear_start:agones.dev.sdk.GameServer.Status.Address)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_.ClearToEmpty();
  _impl_.address_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GameServer_Status_Address::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GameServer_Status_Address& this_ = static_cast<const GameServer_Status_Address&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GameServer_Status_Address::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GameServer_Status_Address& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:agones.dev.sdk.GameServer.Status.Address)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string type = 1;
          if (!this_._internal_type().empty()) {
            const std::string& _s = this_._internal_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agones.dev.sdk.GameServer.Status.Address.type");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string address = 2;
          if (!this_._internal_address().empty()) {
            const std::string& _s = this_._internal_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agones.dev.sdk.GameServer.Status.Address.address");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:agones.dev.sdk.GameServer.Status.Address)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GameServer_Status_Address::ByteSizeLong(const MessageLite& base) {
          const GameServer_Status_Address& this_ = static_cast<const GameServer_Status_Address&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GameServer_Status_Address::ByteSizeLong() const {
          const GameServer_Status_Address& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:agones.dev.sdk.GameServer.Status.Address)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string type = 1;
            if (!this_._internal_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_type());
            }
            // string address = 2;
            if (!this_._internal_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_address());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GameServer_Status_Address::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameServer_Status_Address*>(&to_msg);
  auto& from = static_cast<const GameServer_Status_Address&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agones.dev.sdk.GameServer.Status.Address)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameServer_Status_Address::CopyFrom(const GameServer_Status_Address& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agones.dev.sdk.GameServer.Status.Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GameServer_Status_Address::InternalSwap(GameServer_Status_Address* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
}

::google::protobuf::Metadata GameServer_Status_Address::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GameServer_Status_Port::_Internal {
 public:
};

GameServer_Status_Port::GameServer_Status_Port(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agones.dev.sdk.GameServer.Status.Port)
}
inline PROTOBUF_NDEBUG_INLINE GameServer_Status_Port::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::agones::dev::sdk::GameServer_Status_Port& from_msg)
      : name_(arena, from.name_),
        _cached_size_{0} {}

GameServer_Status_Port::GameServer_Status_Port(
    ::google::protobuf::Arena* arena,
    const GameServer_Status_Port& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GameServer_Status_Port* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.port_ = from._impl_.port_;

  // @@protoc_insertion_point(copy_constructor:agones.dev.sdk.GameServer.Status.Port)
}
inline PROTOBUF_NDEBUG_INLINE GameServer_Status_Port::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void GameServer_Status_Port::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.port_ = {};
}
GameServer_Status_Port::~GameServer_Status_Port() {
  // @@protoc_insertion_point(destructor:agones.dev.sdk.GameServer.Status.Port)
  SharedDtor(*this);
}
inline void GameServer_Status_Port::SharedDtor(MessageLite& self) {
  GameServer_Status_Port& this_ = static_cast<GameServer_Status_Port&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GameServer_Status_Port::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GameServer_Status_Port(arena);
}
constexpr auto GameServer_Status_Port::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GameServer_Status_Port),
                                            alignof(GameServer_Status_Port));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GameServer_Status_Port::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GameServer_Status_Port_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GameServer_Status_Port::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GameServer_Status_Port>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GameServer_Status_Port::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GameServer_Status_Port>(), &GameServer_Status_Port::ByteSizeLong,
            &GameServer_Status_Port::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GameServer_Status_Port, _impl_._cached_size_),
        false,
    },
    &GameServer_Status_Port::kDescriptorMethods,
    &descriptor_table_sdk_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GameServer_Status_Port::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 50, 2> GameServer_Status_Port::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agones::dev::sdk::GameServer_Status_Port>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 port = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameServer_Status_Port, _impl_.port_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_Status_Port, _impl_.port_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_Status_Port, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(GameServer_Status_Port, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 port = 2;
    {PROTOBUF_FIELD_OFFSET(GameServer_Status_Port, _impl_.port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\45\4\0\0\0\0\0\0"
    "agones.dev.sdk.GameServer.Status.Port"
    "name"
  }},
};

PROTOBUF_NOINLINE void GameServer_Status_Port::Clear() {
// @@protoc_insertion_point(message_clear_start:agones.dev.sdk.GameServer.Status.Port)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.port_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GameServer_Status_Port::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GameServer_Status_Port& this_ = static_cast<const GameServer_Status_Port&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GameServer_Status_Port::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GameServer_Status_Port& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:agones.dev.sdk.GameServer.Status.Port)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agones.dev.sdk.GameServer.Status.Port.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 port = 2;
          if (this_._internal_port() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_port(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:agones.dev.sdk.GameServer.Status.Port)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GameServer_Status_Port::ByteSizeLong(const MessageLite& base) {
          const GameServer_Status_Port& this_ = static_cast<const GameServer_Status_Port&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GameServer_Status_Port::ByteSizeLong() const {
          const GameServer_Status_Port& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:agones.dev.sdk.GameServer.Status.Port)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // int32 port = 2;
            if (this_._internal_port() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_port());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GameServer_Status_Port::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameServer_Status_Port*>(&to_msg);
  auto& from = static_cast<const GameServer_Status_Port&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agones.dev.sdk.GameServer.Status.Port)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_port() != 0) {
    _this->_impl_.port_ = from._impl_.port_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameServer_Status_Port::CopyFrom(const GameServer_Status_Port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agones.dev.sdk.GameServer.Status.Port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GameServer_Status_Port::InternalSwap(GameServer_Status_Port* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
        swap(_impl_.port_, other->_impl_.port_);
}

::google::protobuf::Metadata GameServer_Status_Port::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GameServer_Status_PlayerStatus::_Internal {
 public:
};

GameServer_Status_PlayerStatus::GameServer_Status_PlayerStatus(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agones.dev.sdk.GameServer.Status.PlayerStatus)
}
inline PROTOBUF_NDEBUG_INLINE GameServer_Status_PlayerStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::agones::dev::sdk::GameServer_Status_PlayerStatus& from_msg)
      : ids_{visibility, arena, from.ids_},
        _cached_size_{0} {}

GameServer_Status_PlayerStatus::GameServer_Status_PlayerStatus(
    ::google::protobuf::Arena* arena,
    const GameServer_Status_PlayerStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GameServer_Status_PlayerStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, count_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, count_),
           offsetof(Impl_, capacity_) -
               offsetof(Impl_, count_) +
               sizeof(Impl_::capacity_));

  // @@protoc_insertion_point(copy_constructor:agones.dev.sdk.GameServer.Status.PlayerStatus)
}
inline PROTOBUF_NDEBUG_INLINE GameServer_Status_PlayerStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : ids_{visibility, arena},
        _cached_size_{0} {}

inline void GameServer_Status_PlayerStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, count_),
           0,
           offsetof(Impl_, capacity_) -
               offsetof(Impl_, count_) +
               sizeof(Impl_::capacity_));
}
GameServer_Status_PlayerStatus::~GameServer_Status_PlayerStatus() {
  // @@protoc_insertion_point(destructor:agones.dev.sdk.GameServer.Status.PlayerStatus)
  SharedDtor(*this);
}
inline void GameServer_Status_PlayerStatus::SharedDtor(MessageLite& self) {
  GameServer_Status_PlayerStatus& this_ = static_cast<GameServer_Status_PlayerStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GameServer_Status_PlayerStatus::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GameServer_Status_PlayerStatus(arena);
}
constexpr auto GameServer_Status_PlayerStatus::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GameServer_Status_PlayerStatus, _impl_.ids_) +
          decltype(GameServer_Status_PlayerStatus::_impl_.ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GameServer_Status_PlayerStatus), alignof(GameServer_Status_PlayerStatus), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GameServer_Status_PlayerStatus::PlacementNew_,
                                 sizeof(GameServer_Status_PlayerStatus),
                                 alignof(GameServer_Status_PlayerStatus));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GameServer_Status_PlayerStatus::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GameServer_Status_PlayerStatus_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GameServer_Status_PlayerStatus::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GameServer_Status_PlayerStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GameServer_Status_PlayerStatus::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GameServer_Status_PlayerStatus>(), &GameServer_Status_PlayerStatus::ByteSizeLong,
            &GameServer_Status_PlayerStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GameServer_Status_PlayerStatus, _impl_._cached_size_),
        false,
    },
    &GameServer_Status_PlayerStatus::kDescriptorMethods,
    &descriptor_table_sdk_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GameServer_Status_PlayerStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 57, 2> GameServer_Status_PlayerStatus::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agones::dev::sdk::GameServer_Status_PlayerStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 count = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GameServer_Status_PlayerStatus, _impl_.count_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_Status_PlayerStatus, _impl_.count_)}},
    // int64 capacity = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GameServer_Status_PlayerStatus, _impl_.capacity_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_Status_PlayerStatus, _impl_.capacity_)}},
    // repeated string ids = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_Status_PlayerStatus, _impl_.ids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 count = 1;
    {PROTOBUF_FIELD_OFFSET(GameServer_Status_PlayerStatus, _impl_.count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 capacity = 2;
    {PROTOBUF_FIELD_OFFSET(GameServer_Status_PlayerStatus, _impl_.capacity_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated string ids = 3;
    {PROTOBUF_FIELD_OFFSET(GameServer_Status_PlayerStatus, _impl_.ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\55\0\0\3\0\0\0\0"
    "agones.dev.sdk.GameServer.Status.PlayerStatus"
    "ids"
  }},
};

PROTOBUF_NOINLINE void GameServer_Status_PlayerStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:agones.dev.sdk.GameServer.Status.PlayerStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ids_.Clear();
  ::memset(&_impl_.count_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.capacity_) -
      reinterpret_cast<char*>(&_impl_.count_)) + sizeof(_impl_.capacity_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GameServer_Status_PlayerStatus::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GameServer_Status_PlayerStatus& this_ = static_cast<const GameServer_Status_PlayerStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GameServer_Status_PlayerStatus::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GameServer_Status_PlayerStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:agones.dev.sdk.GameServer.Status.PlayerStatus)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 count = 1;
          if (this_._internal_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_count(), target);
          }

          // int64 capacity = 2;
          if (this_._internal_capacity() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_capacity(), target);
          }

          // repeated string ids = 3;
          for (int i = 0, n = this_._internal_ids_size(); i < n; ++i) {
            const auto& s = this_._internal_ids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agones.dev.sdk.GameServer.Status.PlayerStatus.ids");
            target = stream->WriteString(3, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:agones.dev.sdk.GameServer.Status.PlayerStatus)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GameServer_Status_PlayerStatus::ByteSizeLong(const MessageLite& base) {
          const GameServer_Status_PlayerStatus& this_ = static_cast<const GameServer_Status_PlayerStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GameServer_Status_PlayerStatus::ByteSizeLong() const {
          const GameServer_Status_PlayerStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:agones.dev.sdk.GameServer.Status.PlayerStatus)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string ids = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_ids().size());
              for (int i = 0, n = this_._internal_ids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_ids().Get(i));
              }
            }
          }
           {
            // int64 count = 1;
            if (this_._internal_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_count());
            }
            // int64 capacity = 2;
            if (this_._internal_capacity() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_capacity());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GameServer_Status_PlayerStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameServer_Status_PlayerStatus*>(&to_msg);
  auto& from = static_cast<const GameServer_Status_PlayerStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agones.dev.sdk.GameServer.Status.PlayerStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_ids()->MergeFrom(from._internal_ids());
  if (from._internal_count() != 0) {
    _this->_impl_.count_ = from._impl_.count_;
  }
  if (from._internal_capacity() != 0) {
    _this->_impl_.capacity_ = from._impl_.capacity_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameServer_Status_PlayerStatus::CopyFrom(const GameServer_Status_PlayerStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agones.dev.sdk.GameServer.Status.PlayerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GameServer_Status_PlayerStatus::InternalSwap(GameServer_Status_PlayerStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.ids_.InternalSwap(&other->_impl_.ids_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GameServer_Status_PlayerStatus, _impl_.capacity_)
      + sizeof(GameServer_Status_PlayerStatus::_impl_.capacity_)
      - PROTOBUF_FIELD_OFFSET(GameServer_Status_PlayerStatus, _impl_.count_)>(
          reinterpret_cast<char*>(&_impl_.count_),
          reinterpret_cast<char*>(&other->_impl_.count_));
}

::google::protobuf::Metadata GameServer_Status_PlayerStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GameServer_Status_CounterStatus::_Internal {
 public:
};

GameServer_Status_CounterStatus::GameServer_Status_CounterStatus(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agones.dev.sdk.GameServer.Status.CounterStatus)
}
GameServer_Status_CounterStatus::GameServer_Status_CounterStatus(
    ::google::protobuf::Arena* arena, const GameServer_Status_CounterStatus& from)
    : GameServer_Status_CounterStatus(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GameServer_Status_CounterStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GameServer_Status_CounterStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, count_),
           0,
           offsetof(Impl_, capacity_) -
               offsetof(Impl_, count_) +
               sizeof(Impl_::capacity_));
}
GameServer_Status_CounterStatus::~GameServer_Status_CounterStatus() {
  // @@protoc_insertion_point(destructor:agones.dev.sdk.GameServer.Status.CounterStatus)
  SharedDtor(*this);
}
inline void GameServer_Status_CounterStatus::SharedDtor(MessageLite& self) {
  GameServer_Status_CounterStatus& this_ = static_cast<GameServer_Status_CounterStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GameServer_Status_CounterStatus::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GameServer_Status_CounterStatus(arena);
}
constexpr auto GameServer_Status_CounterStatus::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GameServer_Status_CounterStatus),
                                            alignof(GameServer_Status_CounterStatus));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GameServer_Status_CounterStatus::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GameServer_Status_CounterStatus_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GameServer_Status_CounterStatus::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GameServer_Status_CounterStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GameServer_Status_CounterStatus::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GameServer_Status_CounterStatus>(), &GameServer_Status_CounterStatus::ByteSizeLong,
            &GameServer_Status_CounterStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GameServer_Status_CounterStatus, _impl_._cached_size_),
        false,
    },
    &GameServer_Status_CounterStatus::kDescriptorMethods,
    &descriptor_table_sdk_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GameServer_Status_CounterStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> GameServer_Status_CounterStatus::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agones::dev::sdk::GameServer_Status_CounterStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 capacity = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GameServer_Status_CounterStatus, _impl_.capacity_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_Status_CounterStatus, _impl_.capacity_)}},
    // int64 count = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GameServer_Status_CounterStatus, _impl_.count_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_Status_CounterStatus, _impl_.count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 count = 1;
    {PROTOBUF_FIELD_OFFSET(GameServer_Status_CounterStatus, _impl_.count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 capacity = 2;
    {PROTOBUF_FIELD_OFFSET(GameServer_Status_CounterStatus, _impl_.capacity_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void GameServer_Status_CounterStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:agones.dev.sdk.GameServer.Status.CounterStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.count_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.capacity_) -
      reinterpret_cast<char*>(&_impl_.count_)) + sizeof(_impl_.capacity_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GameServer_Status_CounterStatus::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GameServer_Status_CounterStatus& this_ = static_cast<const GameServer_Status_CounterStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GameServer_Status_CounterStatus::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GameServer_Status_CounterStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:agones.dev.sdk.GameServer.Status.CounterStatus)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 count = 1;
          if (this_._internal_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_count(), target);
          }

          // int64 capacity = 2;
          if (this_._internal_capacity() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_capacity(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:agones.dev.sdk.GameServer.Status.CounterStatus)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GameServer_Status_CounterStatus::ByteSizeLong(const MessageLite& base) {
          const GameServer_Status_CounterStatus& this_ = static_cast<const GameServer_Status_CounterStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GameServer_Status_CounterStatus::ByteSizeLong() const {
          const GameServer_Status_CounterStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:agones.dev.sdk.GameServer.Status.CounterStatus)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int64 count = 1;
            if (this_._internal_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_count());
            }
            // int64 capacity = 2;
            if (this_._internal_capacity() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_capacity());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GameServer_Status_CounterStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameServer_Status_CounterStatus*>(&to_msg);
  auto& from = static_cast<const GameServer_Status_CounterStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agones.dev.sdk.GameServer.Status.CounterStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_count() != 0) {
    _this->_impl_.count_ = from._impl_.count_;
  }
  if (from._internal_capacity() != 0) {
    _this->_impl_.capacity_ = from._impl_.capacity_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameServer_Status_CounterStatus::CopyFrom(const GameServer_Status_CounterStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agones.dev.sdk.GameServer.Status.CounterStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GameServer_Status_CounterStatus::InternalSwap(GameServer_Status_CounterStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GameServer_Status_CounterStatus, _impl_.capacity_)
      + sizeof(GameServer_Status_CounterStatus::_impl_.capacity_)
      - PROTOBUF_FIELD_OFFSET(GameServer_Status_CounterStatus, _impl_.count_)>(
          reinterpret_cast<char*>(&_impl_.count_),
          reinterpret_cast<char*>(&other->_impl_.count_));
}

::google::protobuf::Metadata GameServer_Status_CounterStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GameServer_Status_ListStatus::_Internal {
 public:
};

GameServer_Status_ListStatus::GameServer_Status_ListStatus(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agones.dev.sdk.GameServer.Status.ListStatus)
}
inline PROTOBUF_NDEBUG_INLINE GameServer_Status_ListStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::agones::dev::sdk::GameServer_Status_ListStatus& from_msg)
      : values_{visibility, arena, from.values_},
        _cached_size_{0} {}

GameServer_Status_ListStatus::GameServer_Status_ListStatus(
    ::google::protobuf::Arena* arena,
    const GameServer_Status_ListStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GameServer_Status_ListStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.capacity_ = from._impl_.capacity_;

  // @@protoc_insertion_point(copy_constructor:agones.dev.sdk.GameServer.Status.ListStatus)
}
inline PROTOBUF_NDEBUG_INLINE GameServer_Status_ListStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : values_{visibility, arena},
        _cached_size_{0} {}

inline void GameServer_Status_ListStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.capacity_ = {};
}
GameServer_Status_ListStatus::~GameServer_Status_ListStatus() {
  // @@protoc_insertion_point(destructor:agones.dev.sdk.GameServer.Status.ListStatus)
  SharedDtor(*this);
}
inline void GameServer_Status_ListStatus::SharedDtor(MessageLite& self) {
  GameServer_Status_ListStatus& this_ = static_cast<GameServer_Status_ListStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GameServer_Status_ListStatus::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GameServer_Status_ListStatus(arena);
}
constexpr auto GameServer_Status_ListStatus::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GameServer_Status_ListStatus, _impl_.values_) +
          decltype(GameServer_Status_ListStatus::_impl_.values_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GameServer_Status_ListStatus), alignof(GameServer_Status_ListStatus), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GameServer_Status_ListStatus::PlacementNew_,
                                 sizeof(GameServer_Status_ListStatus),
                                 alignof(GameServer_Status_ListStatus));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GameServer_Status_ListStatus::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GameServer_Status_ListStatus_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GameServer_Status_ListStatus::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GameServer_Status_ListStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GameServer_Status_ListStatus::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GameServer_Status_ListStatus>(), &GameServer_Status_ListStatus::ByteSizeLong,
            &GameServer_Status_ListStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GameServer_Status_ListStatus, _impl_._cached_size_),
        false,
    },
    &GameServer_Status_ListStatus::kDescriptorMethods,
    &descriptor_table_sdk_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GameServer_Status_ListStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 58, 2> GameServer_Status_ListStatus::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agones::dev::sdk::GameServer_Status_ListStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string values = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_Status_ListStatus, _impl_.values_)}},
    // int64 capacity = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GameServer_Status_ListStatus, _impl_.capacity_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_Status_ListStatus, _impl_.capacity_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 capacity = 1;
    {PROTOBUF_FIELD_OFFSET(GameServer_Status_ListStatus, _impl_.capacity_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated string values = 2;
    {PROTOBUF_FIELD_OFFSET(GameServer_Status_ListStatus, _impl_.values_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\53\0\6\0\0\0\0\0"
    "agones.dev.sdk.GameServer.Status.ListStatus"
    "values"
  }},
};

PROTOBUF_NOINLINE void GameServer_Status_ListStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:agones.dev.sdk.GameServer.Status.ListStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.values_.Clear();
  _impl_.capacity_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GameServer_Status_ListStatus::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GameServer_Status_ListStatus& this_ = static_cast<const GameServer_Status_ListStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GameServer_Status_ListStatus::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GameServer_Status_ListStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:agones.dev.sdk.GameServer.Status.ListStatus)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 capacity = 1;
          if (this_._internal_capacity() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_capacity(), target);
          }

          // repeated string values = 2;
          for (int i = 0, n = this_._internal_values_size(); i < n; ++i) {
            const auto& s = this_._internal_values().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agones.dev.sdk.GameServer.Status.ListStatus.values");
            target = stream->WriteString(2, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:agones.dev.sdk.GameServer.Status.ListStatus)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GameServer_Status_ListStatus::ByteSizeLong(const MessageLite& base) {
          const GameServer_Status_ListStatus& this_ = static_cast<const GameServer_Status_ListStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GameServer_Status_ListStatus::ByteSizeLong() const {
          const GameServer_Status_ListStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:agones.dev.sdk.GameServer.Status.ListStatus)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string values = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_values().size());
              for (int i = 0, n = this_._internal_values().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_values().Get(i));
              }
            }
          }
           {
            // int64 capacity = 1;
            if (this_._internal_capacity() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_capacity());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GameServer_Status_ListStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameServer_Status_ListStatus*>(&to_msg);
  auto& from = static_cast<const GameServer_Status_ListStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agones.dev.sdk.GameServer.Status.ListStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_values()->MergeFrom(from._internal_values());
  if (from._internal_capacity() != 0) {
    _this->_impl_.capacity_ = from._impl_.capacity_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameServer_Status_ListStatus::CopyFrom(const GameServer_Status_ListStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agones.dev.sdk.GameServer.Status.ListStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GameServer_Status_ListStatus::InternalSwap(GameServer_Status_ListStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
        swap(_impl_.capacity_, other->_impl_.capacity_);
}

::google::protobuf::Metadata GameServer_Status_ListStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              GameServer_Status_CountersEntry_DoNotUse::GameServer_Status_CountersEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              GameServer_Status_CountersEntry_DoNotUse::GameServer_Status_CountersEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              GameServer_Status_CountersEntry_DoNotUse::GameServer_Status_CountersEntry_DoNotUse() : SuperType() {}
              GameServer_Status_CountersEntry_DoNotUse::GameServer_Status_CountersEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* GameServer_Status_CountersEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) GameServer_Status_CountersEntry_DoNotUse(arena);
              }
              constexpr auto GameServer_Status_CountersEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GameServer_Status_CountersEntry_DoNotUse),
                                                          alignof(GameServer_Status_CountersEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull GameServer_Status_CountersEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_GameServer_Status_CountersEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &GameServer_Status_CountersEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<GameServer_Status_CountersEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &GameServer_Status_CountersEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &GameServer_Status_CountersEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(GameServer_Status_CountersEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &GameServer_Status_CountersEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_sdk_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* GameServer_Status_CountersEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 58, 2> GameServer_Status_CountersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GameServer_Status_CountersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agones::dev::sdk::GameServer_Status_CountersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .agones.dev.sdk.GameServer.Status.CounterStatus value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GameServer_Status_CountersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_Status_CountersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(GameServer_Status_CountersEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .agones.dev.sdk.GameServer.Status.CounterStatus value = 2;
    {PROTOBUF_FIELD_OFFSET(GameServer_Status_CountersEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::agones::dev::sdk::GameServer_Status_CounterStatus>()},
  }}, {{
    "\56\3\0\0\0\0\0\0"
    "agones.dev.sdk.GameServer.Status.CountersEntry"
    "key"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              GameServer_Status_ListsEntry_DoNotUse::GameServer_Status_ListsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              GameServer_Status_ListsEntry_DoNotUse::GameServer_Status_ListsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              GameServer_Status_ListsEntry_DoNotUse::GameServer_Status_ListsEntry_DoNotUse() : SuperType() {}
              GameServer_Status_ListsEntry_DoNotUse::GameServer_Status_ListsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* GameServer_Status_ListsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) GameServer_Status_ListsEntry_DoNotUse(arena);
              }
              constexpr auto GameServer_Status_ListsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GameServer_Status_ListsEntry_DoNotUse),
                                                          alignof(GameServer_Status_ListsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull GameServer_Status_ListsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_GameServer_Status_ListsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &GameServer_Status_ListsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<GameServer_Status_ListsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &GameServer_Status_ListsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &GameServer_Status_ListsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(GameServer_Status_ListsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &GameServer_Status_ListsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_sdk_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* GameServer_Status_ListsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 55, 2> GameServer_Status_ListsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GameServer_Status_ListsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agones::dev::sdk::GameServer_Status_ListsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .agones.dev.sdk.GameServer.Status.ListStatus value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GameServer_Status_ListsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_Status_ListsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(GameServer_Status_ListsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .agones.dev.sdk.GameServer.Status.ListStatus value = 2;
    {PROTOBUF_FIELD_OFFSET(GameServer_Status_ListsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::agones::dev::sdk::GameServer_Status_ListStatus>()},
  }}, {{
    "\53\3\0\0\0\0\0\0"
    "agones.dev.sdk.GameServer.Status.ListsEntry"
    "key"
  }},
};

// ===================================================================

class GameServer_Status::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GameServer_Status>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GameServer_Status, _impl_._has_bits_);
};

GameServer_Status::GameServer_Status(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agones.dev.sdk.GameServer.Status)
}
inline PROTOBUF_NDEBUG_INLINE GameServer_Status::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::agones::dev::sdk::GameServer_Status& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        ports_{visibility, arena, from.ports_},
        counters_{visibility, arena, from.counters_},
        lists_{visibility, arena, from.lists_},
        addresses_{visibility, arena, from.addresses_},
        state_(arena, from.state_),
        address_(arena, from.address_) {}

GameServer_Status::GameServer_Status(
    ::google::protobuf::Arena* arena,
    const GameServer_Status& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GameServer_Status* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.players_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::agones::dev::sdk::GameServer_Status_PlayerStatus>(
                              arena, *from._impl_.players_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:agones.dev.sdk.GameServer.Status)
}
inline PROTOBUF_NDEBUG_INLINE GameServer_Status::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        ports_{visibility, arena},
        counters_{visibility, arena},
        lists_{visibility, arena},
        addresses_{visibility, arena},
        state_(arena),
        address_(arena) {}

inline void GameServer_Status::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.players_ = {};
}
GameServer_Status::~GameServer_Status() {
  // @@protoc_insertion_point(destructor:agones.dev.sdk.GameServer.Status)
  SharedDtor(*this);
}
inline void GameServer_Status::SharedDtor(MessageLite& self) {
  GameServer_Status& this_ = static_cast<GameServer_Status&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.state_.Destroy();
  this_._impl_.address_.Destroy();
  delete this_._impl_.players_;
  this_._impl_.~Impl_();
}

inline void* GameServer_Status::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GameServer_Status(arena);
}
constexpr auto GameServer_Status::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GameServer_Status, _impl_.addresses_) +
          decltype(GameServer_Status::_impl_.addresses_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GameServer_Status, _impl_.ports_) +
          decltype(GameServer_Status::_impl_.ports_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GameServer_Status, _impl_.counters_) +
          decltype(GameServer_Status::_impl_.counters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GameServer_Status, _impl_.counters_) +
          decltype(GameServer_Status::_impl_.counters_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GameServer_Status, _impl_.lists_) +
          decltype(GameServer_Status::_impl_.lists_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GameServer_Status, _impl_.lists_) +
          decltype(GameServer_Status::_impl_.lists_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(GameServer_Status), alignof(GameServer_Status), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GameServer_Status::PlacementNew_,
                                 sizeof(GameServer_Status),
                                 alignof(GameServer_Status));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GameServer_Status::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GameServer_Status_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GameServer_Status::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GameServer_Status>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GameServer_Status::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GameServer_Status>(), &GameServer_Status::ByteSizeLong,
            &GameServer_Status::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GameServer_Status, _impl_._cached_size_),
        false,
    },
    &GameServer_Status::kDescriptorMethods,
    &descriptor_table_sdk_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GameServer_Status::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 7, 66, 2> GameServer_Status::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GameServer_Status, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    7,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agones::dev::sdk::GameServer_Status>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string state = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_Status, _impl_.state_)}},
    // string address = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_Status, _impl_.address_)}},
    // repeated .agones.dev.sdk.GameServer.Status.Port ports = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GameServer_Status, _impl_.ports_)}},
    // .agones.dev.sdk.GameServer.Status.PlayerStatus players = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 1, PROTOBUF_FIELD_OFFSET(GameServer_Status, _impl_.players_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .agones.dev.sdk.GameServer.Status.Address addresses = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 2, PROTOBUF_FIELD_OFFSET(GameServer_Status, _impl_.addresses_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string state = 1;
    {PROTOBUF_FIELD_OFFSET(GameServer_Status, _impl_.state_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string address = 2;
    {PROTOBUF_FIELD_OFFSET(GameServer_Status, _impl_.address_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .agones.dev.sdk.GameServer.Status.Port ports = 3;
    {PROTOBUF_FIELD_OFFSET(GameServer_Status, _impl_.ports_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .agones.dev.sdk.GameServer.Status.PlayerStatus players = 4;
    {PROTOBUF_FIELD_OFFSET(GameServer_Status, _impl_.players_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, .agones.dev.sdk.GameServer.Status.CounterStatus> counters = 5;
    {PROTOBUF_FIELD_OFFSET(GameServer_Status, _impl_.counters_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, .agones.dev.sdk.GameServer.Status.ListStatus> lists = 6;
    {PROTOBUF_FIELD_OFFSET(GameServer_Status, _impl_.lists_), -1, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // repeated .agones.dev.sdk.GameServer.Status.Address addresses = 7;
    {PROTOBUF_FIELD_OFFSET(GameServer_Status, _impl_.addresses_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::agones::dev::sdk::GameServer_Status_Port>()},
    {::_pbi::TcParser::GetTable<::agones::dev::sdk::GameServer_Status_PlayerStatus>()},
    {::_pbi::TcParser::GetTable<::agones::dev::sdk::GameServer_Status_Address>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(GameServer_Status()._impl_.counters_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::GetTable<::agones::dev::sdk::GameServer_Status_CounterStatus>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(GameServer_Status()._impl_.lists_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::GetTable<::agones::dev::sdk::GameServer_Status_ListStatus>()},
  }}, {{
    "\40\5\7\0\0\10\5\0"
    "agones.dev.sdk.GameServer.Status"
    "state"
    "address"
    "counters"
    "lists"
  }},
};

PROTOBUF_NOINLINE void GameServer_Status::Clear() {
// @@protoc_insertion_point(message_clear_start:agones.dev.sdk.GameServer.Status)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ports_.Clear();
  _impl_.counters_.Clear();
  _impl_.lists_.Clear();
  _impl_.addresses_.Clear();
  _impl_.state_.ClearToEmpty();
  _impl_.address_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.players_ != nullptr);
    _impl_.players_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GameServer_Status::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GameServer_Status& this_ = static_cast<const GameServer_Status&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GameServer_Status::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GameServer_Status& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:agones.dev.sdk.GameServer.Status)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string state = 1;
          if (!this_._internal_state().empty()) {
            const std::string& _s = this_._internal_state();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agones.dev.sdk.GameServer.Status.state");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string address = 2;
          if (!this_._internal_address().empty()) {
            const std::string& _s = this_._internal_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agones.dev.sdk.GameServer.Status.address");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated .agones.dev.sdk.GameServer.Status.Port ports = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_ports_size());
               i < n; i++) {
            const auto& repfield = this_._internal_ports().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .agones.dev.sdk.GameServer.Status.PlayerStatus players = 4;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.players_, this_._impl_.players_->GetCachedSize(), target,
                stream);
          }

          // map<string, .agones.dev.sdk.GameServer.Status.CounterStatus> counters = 5;
          if (!this_._internal_counters().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::agones::dev::sdk::GameServer_Status_CounterStatus>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::agones::dev::sdk::GameServer_Status_CounterStatus,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_counters();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agones.dev.sdk.GameServer.Status.counters");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agones.dev.sdk.GameServer.Status.counters");
              }
            }
          }

          // map<string, .agones.dev.sdk.GameServer.Status.ListStatus> lists = 6;
          if (!this_._internal_lists().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::agones::dev::sdk::GameServer_Status_ListStatus>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::agones::dev::sdk::GameServer_Status_ListStatus,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_lists();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agones.dev.sdk.GameServer.Status.lists");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agones.dev.sdk.GameServer.Status.lists");
              }
            }
          }

          // repeated .agones.dev.sdk.GameServer.Status.Address addresses = 7;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_addresses_size());
               i < n; i++) {
            const auto& repfield = this_._internal_addresses().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    7, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:agones.dev.sdk.GameServer.Status)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GameServer_Status::ByteSizeLong(const MessageLite& base) {
          const GameServer_Status& this_ = static_cast<const GameServer_Status&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GameServer_Status::ByteSizeLong() const {
          const GameServer_Status& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:agones.dev.sdk.GameServer.Status)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .agones.dev.sdk.GameServer.Status.Port ports = 3;
            {
              total_size += 1UL * this_._internal_ports_size();
              for (const auto& msg : this_._internal_ports()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, .agones.dev.sdk.GameServer.Status.CounterStatus> counters = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_counters_size());
              for (const auto& entry : this_._internal_counters()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::agones::dev::sdk::GameServer_Status_CounterStatus,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, .agones.dev.sdk.GameServer.Status.ListStatus> lists = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_lists_size());
              for (const auto& entry : this_._internal_lists()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::agones::dev::sdk::GameServer_Status_ListStatus,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // repeated .agones.dev.sdk.GameServer.Status.Address addresses = 7;
            {
              total_size += 1UL * this_._internal_addresses_size();
              for (const auto& msg : this_._internal_addresses()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string state = 1;
            if (!this_._internal_state().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_state());
            }
            // string address = 2;
            if (!this_._internal_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_address());
            }
          }
           {
            // .agones.dev.sdk.GameServer.Status.PlayerStatus players = 4;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.players_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GameServer_Status::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameServer_Status*>(&to_msg);
  auto& from = static_cast<const GameServer_Status&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agones.dev.sdk.GameServer.Status)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_ports()->MergeFrom(
      from._internal_ports());
  _this->_impl_.counters_.MergeFrom(from._impl_.counters_);
  _this->_impl_.lists_.MergeFrom(from._impl_.lists_);
  _this->_internal_mutable_addresses()->MergeFrom(
      from._internal_addresses());
  if (!from._internal_state().empty()) {
    _this->_internal_set_state(from._internal_state());
  }
  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.players_ != nullptr);
    if (_this->_impl_.players_ == nullptr) {
      _this->_impl_.players_ =
          ::google::protobuf::Message::CopyConstruct<::agones::dev::sdk::GameServer_Status_PlayerStatus>(arena, *from._impl_.players_);
    } else {
      _this->_impl_.players_->MergeFrom(*from._impl_.players_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameServer_Status::CopyFrom(const GameServer_Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agones.dev.sdk.GameServer.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GameServer_Status::InternalSwap(GameServer_Status* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.ports_.InternalSwap(&other->_impl_.ports_);
  _impl_.counters_.InternalSwap(&other->_impl_.counters_);
  _impl_.lists_.InternalSwap(&other->_impl_.lists_);
  _impl_.addresses_.InternalSwap(&other->_impl_.addresses_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.state_, &other->_impl_.state_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
  swap(_impl_.players_, other->_impl_.players_);
}

::google::protobuf::Metadata GameServer_Status::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GameServer::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GameServer>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GameServer, _impl_._has_bits_);
};

GameServer::GameServer(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agones.dev.sdk.GameServer)
}
inline PROTOBUF_NDEBUG_INLINE GameServer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::agones::dev::sdk::GameServer& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GameServer::GameServer(
    ::google::protobuf::Arena* arena,
    const GameServer& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GameServer* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.object_meta_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::agones::dev::sdk::GameServer_ObjectMeta>(
                              arena, *from._impl_.object_meta_)
                        : nullptr;
  _impl_.spec_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::agones::dev::sdk::GameServer_Spec>(
                              arena, *from._impl_.spec_)
                        : nullptr;
  _impl_.status_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::agones::dev::sdk::GameServer_Status>(
                              arena, *from._impl_.status_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:agones.dev.sdk.GameServer)
}
inline PROTOBUF_NDEBUG_INLINE GameServer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GameServer::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, object_meta_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, object_meta_) +
               sizeof(Impl_::status_));
}
GameServer::~GameServer() {
  // @@protoc_insertion_point(destructor:agones.dev.sdk.GameServer)
  SharedDtor(*this);
}
inline void GameServer::SharedDtor(MessageLite& self) {
  GameServer& this_ = static_cast<GameServer&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.object_meta_;
  delete this_._impl_.spec_;
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* GameServer::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GameServer(arena);
}
constexpr auto GameServer::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GameServer),
                                            alignof(GameServer));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GameServer::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GameServer_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GameServer::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GameServer>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GameServer::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GameServer>(), &GameServer::ByteSizeLong,
            &GameServer::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GameServer, _impl_._cached_size_),
        false,
    },
    &GameServer::kDescriptorMethods,
    &descriptor_table_sdk_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GameServer::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> GameServer::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GameServer, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::agones::dev::sdk::GameServer>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .agones.dev.sdk.GameServer.ObjectMeta object_meta = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GameServer, _impl_.object_meta_)}},
    // .agones.dev.sdk.GameServer.Spec spec = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(GameServer, _impl_.spec_)}},
    // .agones.dev.sdk.GameServer.Status status = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(GameServer, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .agones.dev.sdk.GameServer.ObjectMeta object_meta = 1;
    {PROTOBUF_FIELD_OFFSET(GameServer, _impl_.object_meta_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .agones.dev.sdk.GameServer.Spec spec = 2;
    {PROTOBUF_FIELD_OFFSET(GameServer, _impl_.spec_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .agones.dev.sdk.GameServer.Status status = 3;
    {PROTOBUF_FIELD_OFFSET(GameServer, _impl_.status_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::agones::dev::sdk::GameServer_ObjectMeta>()},
    {::_pbi::TcParser::GetTable<::agones::dev::sdk::GameServer_Spec>()},
    {::_pbi::TcParser::GetTable<::agones::dev::sdk::GameServer_Status>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GameServer::Clear() {
// @@protoc_insertion_point(message_clear_start:agones.dev.sdk.GameServer)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.object_meta_ != nullptr);
      _impl_.object_meta_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.spec_ != nullptr);
      _impl_.spec_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GameServer::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GameServer& this_ = static_cast<const GameServer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GameServer::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GameServer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:agones.dev.sdk.GameServer)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .agones.dev.sdk.GameServer.ObjectMeta object_meta = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.object_meta_, this_._impl_.object_meta_->GetCachedSize(), target,
                stream);
          }

          // .agones.dev.sdk.GameServer.Spec spec = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.spec_, this_._impl_.spec_->GetCachedSize(), target,
                stream);
          }

          // .agones.dev.sdk.GameServer.Status status = 3;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:agones.dev.sdk.GameServer)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GameServer::ByteSizeLong(const MessageLite& base) {
          const GameServer& this_ = static_cast<const GameServer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GameServer::ByteSizeLong() const {
          const GameServer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:agones.dev.sdk.GameServer)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .agones.dev.sdk.GameServer.ObjectMeta object_meta = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.object_meta_);
            }
            // .agones.dev.sdk.GameServer.Spec spec = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.spec_);
            }
            // .agones.dev.sdk.GameServer.Status status = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GameServer::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameServer*>(&to_msg);
  auto& from = static_cast<const GameServer&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:agones.dev.sdk.GameServer)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.object_meta_ != nullptr);
      if (_this->_impl_.object_meta_ == nullptr) {
        _this->_impl_.object_meta_ =
            ::google::protobuf::Message::CopyConstruct<::agones::dev::sdk::GameServer_ObjectMeta>(arena, *from._impl_.object_meta_);
      } else {
        _this->_impl_.object_meta_->MergeFrom(*from._impl_.object_meta_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.spec_ != nullptr);
      if (_this->_impl_.spec_ == nullptr) {
        _this->_impl_.spec_ =
            ::google::protobuf::Message::CopyConstruct<::agones::dev::sdk::GameServer_Spec>(arena, *from._impl_.spec_);
      } else {
        _this->_impl_.spec_->MergeFrom(*from._impl_.spec_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ =
            ::google::protobuf::Message::CopyConstruct<::agones::dev::sdk::GameServer_Status>(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameServer::CopyFrom(const GameServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agones.dev.sdk.GameServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GameServer::InternalSwap(GameServer* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GameServer, _impl_.status_)
      + sizeof(GameServer::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(GameServer, _impl_.object_meta_)>(
          reinterpret_cast<char*>(&_impl_.object_meta_),
          reinterpret_cast<char*>(&other->_impl_.object_meta_));
}

::google::protobuf::Metadata GameServer::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace sdk
}  // namespace dev
}  // namespace agones
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_sdk_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
