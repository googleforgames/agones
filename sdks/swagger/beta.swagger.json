{
  "swagger": "2.0",
  "info": {
    "title": "beta.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "SDK"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1beta1/counters/{counterUpdateRequest.name}": {
      "patch": {
        "summary": "UpdateCounter returns the updated Counter. Returns NOT_FOUND if the Counter does not exist (name cannot be updated).\nReturns OUT_OF_RANGE if the Count is out of range [0,Capacity].",
        "operationId": "UpdateCounter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/betaCounter"
            }
          }
        },
        "parameters": [
          {
            "name": "counterUpdateRequest.name",
            "description": "The name of the Counter to update",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "counterUpdateRequest",
            "description": "The requested update to make to the Counter",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "string",
                  "format": "int64",
                  "title": "The value to set the Counter Count"
                },
                "capacity": {
                  "type": "string",
                  "format": "int64",
                  "title": "The value to set the Counter Capacity"
                },
                "countDiff": {
                  "type": "string",
                  "format": "int64",
                  "title": "countDiff tracks if a Counter Update Request is CountIncrement (positive), CountDecrement\n(negative), 0 if a CountSet or CapacitySet request"
                }
              },
              "title": "The requested update to make to the Counter"
            }
          }
        ],
        "tags": [
          "SDK"
        ]
      }
    },
    "/v1beta1/counters/{name}": {
      "get": {
        "summary": "Gets a Counter. Returns NOT_FOUND if the Counter does not exist.",
        "operationId": "GetCounter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/betaCounter"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The name of the Counter to get",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SDK"
        ]
      }
    },
    "/v1beta1/lists/{list.name}": {
      "patch": {
        "summary": "UpdateList returns the updated List. Returns NOT_FOUND if the List does not exist (name cannot be updated).\n**THIS WILL OVERWRITE ALL EXISTING LIST.VALUES WITH ANY REQUEST LIST.VALUES**\nUse AddListValue() or RemoveListValue() for modifying the List.Values field.\nReturns INVALID_ARGUMENT if the field mask path(s) are not field(s) of the List.\nIf a field mask path(s) is specified, but the value is not set in the request List object,\nthen the default value for the variable will be set (i.e. 0 for \"capacity\", empty list for \"values\").",
        "operationId": "UpdateList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/betaList"
            }
          }
        },
        "parameters": [
          {
            "name": "list.name",
            "description": "The name of the List",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "list",
            "description": "The List to update",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "capacity": {
                  "type": "string",
                  "format": "int64",
                  "title": "The maximum capacity of the List"
                },
                "values": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "The array of items in the List [\"v1\", \"v2\", …]"
                }
              },
              "title": "The List to update"
            }
          }
        ],
        "tags": [
          "SDK"
        ]
      }
    },
    "/v1beta1/lists/{name}": {
      "get": {
        "summary": "Gets a List. Returns NOT_FOUND if the List does not exist.",
        "operationId": "GetList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/betaList"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The name of the List to get",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SDK"
        ]
      }
    },
    "/v1beta1/lists/{name}:addValue": {
      "post": {
        "summary": "Adds a value to a List and returns updated List. Returns NOT_FOUND if the List does not exist.\nReturns ALREADY_EXISTS if the value is already in the List.\nReturns OUT_OF_RANGE if the List is already at Capacity.",
        "operationId": "AddListValue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/betaList"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The name of the List to add a value to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        ],
        "tags": [
          "SDK"
        ]
      }
    },
    "/v1beta1/lists/{name}:removeValue": {
      "post": {
        "summary": "Removes a value from a List and returns updated List. Returns NOT_FOUND if the List does not exist.\nReturns NOT_FOUND if the value is not in the List.",
        "operationId": "RemoveListValue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/betaList"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The name of the List to remove a value from.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        ],
        "tags": [
          "SDK"
        ]
      }
    }
  },
  "definitions": {
    "betaCounter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the Counter"
        },
        "count": {
          "type": "string",
          "format": "int64",
          "title": "The current count of the Counter"
        },
        "capacity": {
          "type": "string",
          "format": "int64",
          "title": "The maximum capacity of the Counter"
        }
      },
      "description": "A representation of a Counter."
    },
    "betaCounterUpdateRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the Counter to update"
        },
        "count": {
          "type": "string",
          "format": "int64",
          "title": "The value to set the Counter Count"
        },
        "capacity": {
          "type": "string",
          "format": "int64",
          "title": "The value to set the Counter Capacity"
        },
        "countDiff": {
          "type": "string",
          "format": "int64",
          "title": "countDiff tracks if a Counter Update Request is CountIncrement (positive), CountDecrement\n(negative), 0 if a CountSet or CapacitySet request"
        }
      },
      "description": "A representation of a Counter Update Request."
    },
    "betaList": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the List"
        },
        "capacity": {
          "type": "string",
          "format": "int64",
          "title": "The maximum capacity of the List"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The array of items in the List [\"v1\", \"v2\", …]"
        }
      },
      "description": "A representation of a List."
    }
  }
}
