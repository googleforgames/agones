// Copyright 2022 Google LLC All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This code was autogenerated. Do not edit directly.
// source: sdk.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('./google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var protoc$gen$openapiv2_options_annotations_pb = require('./protoc-gen-openapiv2/options/annotations_pb.js');
goog.object.extend(proto, protoc$gen$openapiv2_options_annotations_pb);
goog.exportSymbol('proto.agones.dev.sdk.Duration', null, global);
goog.exportSymbol('proto.agones.dev.sdk.Empty', null, global);
goog.exportSymbol('proto.agones.dev.sdk.GameServer', null, global);
goog.exportSymbol('proto.agones.dev.sdk.GameServer.ObjectMeta', null, global);
goog.exportSymbol('proto.agones.dev.sdk.GameServer.Spec', null, global);
goog.exportSymbol('proto.agones.dev.sdk.GameServer.Spec.Health', null, global);
goog.exportSymbol('proto.agones.dev.sdk.GameServer.Status', null, global);
goog.exportSymbol('proto.agones.dev.sdk.GameServer.Status.PlayerStatus', null, global);
goog.exportSymbol('proto.agones.dev.sdk.GameServer.Status.Port', null, global);
goog.exportSymbol('proto.agones.dev.sdk.KeyValue', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agones.dev.sdk.Empty = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agones.dev.sdk.Empty, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agones.dev.sdk.Empty.displayName = 'proto.agones.dev.sdk.Empty';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agones.dev.sdk.KeyValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agones.dev.sdk.KeyValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agones.dev.sdk.KeyValue.displayName = 'proto.agones.dev.sdk.KeyValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agones.dev.sdk.Duration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agones.dev.sdk.Duration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agones.dev.sdk.Duration.displayName = 'proto.agones.dev.sdk.Duration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agones.dev.sdk.GameServer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agones.dev.sdk.GameServer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agones.dev.sdk.GameServer.displayName = 'proto.agones.dev.sdk.GameServer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agones.dev.sdk.GameServer.ObjectMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agones.dev.sdk.GameServer.ObjectMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agones.dev.sdk.GameServer.ObjectMeta.displayName = 'proto.agones.dev.sdk.GameServer.ObjectMeta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agones.dev.sdk.GameServer.Spec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agones.dev.sdk.GameServer.Spec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agones.dev.sdk.GameServer.Spec.displayName = 'proto.agones.dev.sdk.GameServer.Spec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agones.dev.sdk.GameServer.Spec.Health = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agones.dev.sdk.GameServer.Spec.Health, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agones.dev.sdk.GameServer.Spec.Health.displayName = 'proto.agones.dev.sdk.GameServer.Spec.Health';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agones.dev.sdk.GameServer.Status = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.agones.dev.sdk.GameServer.Status.repeatedFields_, null);
};
goog.inherits(proto.agones.dev.sdk.GameServer.Status, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agones.dev.sdk.GameServer.Status.displayName = 'proto.agones.dev.sdk.GameServer.Status';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agones.dev.sdk.GameServer.Status.Port = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agones.dev.sdk.GameServer.Status.Port, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agones.dev.sdk.GameServer.Status.Port.displayName = 'proto.agones.dev.sdk.GameServer.Status.Port';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agones.dev.sdk.GameServer.Status.PlayerStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.agones.dev.sdk.GameServer.Status.PlayerStatus.repeatedFields_, null);
};
goog.inherits(proto.agones.dev.sdk.GameServer.Status.PlayerStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.agones.dev.sdk.GameServer.Status.PlayerStatus.displayName = 'proto.agones.dev.sdk.GameServer.Status.PlayerStatus';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agones.dev.sdk.Empty.prototype.toObject = function(opt_includeInstance) {
  return proto.agones.dev.sdk.Empty.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agones.dev.sdk.Empty} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agones.dev.sdk.Empty.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agones.dev.sdk.Empty}
 */
proto.agones.dev.sdk.Empty.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agones.dev.sdk.Empty;
  return proto.agones.dev.sdk.Empty.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agones.dev.sdk.Empty} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agones.dev.sdk.Empty}
 */
proto.agones.dev.sdk.Empty.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agones.dev.sdk.Empty.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agones.dev.sdk.Empty.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agones.dev.sdk.Empty} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agones.dev.sdk.Empty.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agones.dev.sdk.KeyValue.prototype.toObject = function(opt_includeInstance) {
  return proto.agones.dev.sdk.KeyValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agones.dev.sdk.KeyValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agones.dev.sdk.KeyValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agones.dev.sdk.KeyValue}
 */
proto.agones.dev.sdk.KeyValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agones.dev.sdk.KeyValue;
  return proto.agones.dev.sdk.KeyValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agones.dev.sdk.KeyValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agones.dev.sdk.KeyValue}
 */
proto.agones.dev.sdk.KeyValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agones.dev.sdk.KeyValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agones.dev.sdk.KeyValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agones.dev.sdk.KeyValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agones.dev.sdk.KeyValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.agones.dev.sdk.KeyValue.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agones.dev.sdk.KeyValue} returns this
 */
proto.agones.dev.sdk.KeyValue.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.agones.dev.sdk.KeyValue.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.agones.dev.sdk.KeyValue} returns this
 */
proto.agones.dev.sdk.KeyValue.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agones.dev.sdk.Duration.prototype.toObject = function(opt_includeInstance) {
  return proto.agones.dev.sdk.Duration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agones.dev.sdk.Duration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agones.dev.sdk.Duration.toObject = function(includeInstance, msg) {
  var f, obj = {
    seconds: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agones.dev.sdk.Duration}
 */
proto.agones.dev.sdk.Duration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agones.dev.sdk.Duration;
  return proto.agones.dev.sdk.Duration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agones.dev.sdk.Duration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agones.dev.sdk.Duration}
 */
proto.agones.dev.sdk.Duration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSeconds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agones.dev.sdk.Duration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agones.dev.sdk.Duration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agones.dev.sdk.Duration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agones.dev.sdk.Duration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSeconds();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 seconds = 1;
 * @return {number}
 */
proto.agones.dev.sdk.Duration.prototype.getSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.agones.dev.sdk.Duration} returns this
 */
proto.agones.dev.sdk.Duration.prototype.setSeconds = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agones.dev.sdk.GameServer.prototype.toObject = function(opt_includeInstance) {
  return proto.agones.dev.sdk.GameServer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agones.dev.sdk.GameServer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agones.dev.sdk.GameServer.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectMeta: (f = msg.getObjectMeta()) && proto.agones.dev.sdk.GameServer.ObjectMeta.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && proto.agones.dev.sdk.GameServer.Spec.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && proto.agones.dev.sdk.GameServer.Status.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agones.dev.sdk.GameServer}
 */
proto.agones.dev.sdk.GameServer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agones.dev.sdk.GameServer;
  return proto.agones.dev.sdk.GameServer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agones.dev.sdk.GameServer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agones.dev.sdk.GameServer}
 */
proto.agones.dev.sdk.GameServer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.agones.dev.sdk.GameServer.ObjectMeta;
      reader.readMessage(value,proto.agones.dev.sdk.GameServer.ObjectMeta.deserializeBinaryFromReader);
      msg.setObjectMeta(value);
      break;
    case 2:
      var value = new proto.agones.dev.sdk.GameServer.Spec;
      reader.readMessage(value,proto.agones.dev.sdk.GameServer.Spec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 3:
      var value = new proto.agones.dev.sdk.GameServer.Status;
      reader.readMessage(value,proto.agones.dev.sdk.GameServer.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agones.dev.sdk.GameServer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agones.dev.sdk.GameServer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agones.dev.sdk.GameServer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agones.dev.sdk.GameServer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectMeta();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.agones.dev.sdk.GameServer.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.agones.dev.sdk.GameServer.Spec.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.agones.dev.sdk.GameServer.Status.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agones.dev.sdk.GameServer.ObjectMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.agones.dev.sdk.GameServer.ObjectMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agones.dev.sdk.GameServer.ObjectMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agones.dev.sdk.GameServer.ObjectMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, ""),
    uid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    resourceVersion: jspb.Message.getFieldWithDefault(msg, 4, ""),
    generation: jspb.Message.getFieldWithDefault(msg, 5, 0),
    creationTimestamp: jspb.Message.getFieldWithDefault(msg, 6, 0),
    deletionTimestamp: jspb.Message.getFieldWithDefault(msg, 7, 0),
    annotationsMap: (f = msg.getAnnotationsMap()) ? f.toObject(includeInstance, undefined) : [],
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agones.dev.sdk.GameServer.ObjectMeta}
 */
proto.agones.dev.sdk.GameServer.ObjectMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agones.dev.sdk.GameServer.ObjectMeta;
  return proto.agones.dev.sdk.GameServer.ObjectMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agones.dev.sdk.GameServer.ObjectMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agones.dev.sdk.GameServer.ObjectMeta}
 */
proto.agones.dev.sdk.GameServer.ObjectMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourceVersion(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGeneration(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreationTimestamp(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDeletionTimestamp(value);
      break;
    case 8:
      var value = msg.getAnnotationsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 9:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agones.dev.sdk.GameServer.ObjectMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agones.dev.sdk.GameServer.ObjectMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agones.dev.sdk.GameServer.ObjectMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agones.dev.sdk.GameServer.ObjectMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getResourceVersion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getGeneration();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getCreationTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getDeletionTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getAnnotationsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(9, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.agones.dev.sdk.GameServer.ObjectMeta.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agones.dev.sdk.GameServer.ObjectMeta} returns this
 */
proto.agones.dev.sdk.GameServer.ObjectMeta.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.agones.dev.sdk.GameServer.ObjectMeta.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.agones.dev.sdk.GameServer.ObjectMeta} returns this
 */
proto.agones.dev.sdk.GameServer.ObjectMeta.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string uid = 3;
 * @return {string}
 */
proto.agones.dev.sdk.GameServer.ObjectMeta.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.agones.dev.sdk.GameServer.ObjectMeta} returns this
 */
proto.agones.dev.sdk.GameServer.ObjectMeta.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string resource_version = 4;
 * @return {string}
 */
proto.agones.dev.sdk.GameServer.ObjectMeta.prototype.getResourceVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.agones.dev.sdk.GameServer.ObjectMeta} returns this
 */
proto.agones.dev.sdk.GameServer.ObjectMeta.prototype.setResourceVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 generation = 5;
 * @return {number}
 */
proto.agones.dev.sdk.GameServer.ObjectMeta.prototype.getGeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.agones.dev.sdk.GameServer.ObjectMeta} returns this
 */
proto.agones.dev.sdk.GameServer.ObjectMeta.prototype.setGeneration = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 creation_timestamp = 6;
 * @return {number}
 */
proto.agones.dev.sdk.GameServer.ObjectMeta.prototype.getCreationTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.agones.dev.sdk.GameServer.ObjectMeta} returns this
 */
proto.agones.dev.sdk.GameServer.ObjectMeta.prototype.setCreationTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 deletion_timestamp = 7;
 * @return {number}
 */
proto.agones.dev.sdk.GameServer.ObjectMeta.prototype.getDeletionTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.agones.dev.sdk.GameServer.ObjectMeta} returns this
 */
proto.agones.dev.sdk.GameServer.ObjectMeta.prototype.setDeletionTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * map<string, string> annotations = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.agones.dev.sdk.GameServer.ObjectMeta.prototype.getAnnotationsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.agones.dev.sdk.GameServer.ObjectMeta} returns this
 */
proto.agones.dev.sdk.GameServer.ObjectMeta.prototype.clearAnnotationsMap = function() {
  this.getAnnotationsMap().clear();
  return this;};


/**
 * map<string, string> labels = 9;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.agones.dev.sdk.GameServer.ObjectMeta.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 9, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.agones.dev.sdk.GameServer.ObjectMeta} returns this
 */
proto.agones.dev.sdk.GameServer.ObjectMeta.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agones.dev.sdk.GameServer.Spec.prototype.toObject = function(opt_includeInstance) {
  return proto.agones.dev.sdk.GameServer.Spec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agones.dev.sdk.GameServer.Spec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agones.dev.sdk.GameServer.Spec.toObject = function(includeInstance, msg) {
  var f, obj = {
    health: (f = msg.getHealth()) && proto.agones.dev.sdk.GameServer.Spec.Health.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agones.dev.sdk.GameServer.Spec}
 */
proto.agones.dev.sdk.GameServer.Spec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agones.dev.sdk.GameServer.Spec;
  return proto.agones.dev.sdk.GameServer.Spec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agones.dev.sdk.GameServer.Spec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agones.dev.sdk.GameServer.Spec}
 */
proto.agones.dev.sdk.GameServer.Spec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.agones.dev.sdk.GameServer.Spec.Health;
      reader.readMessage(value,proto.agones.dev.sdk.GameServer.Spec.Health.deserializeBinaryFromReader);
      msg.setHealth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agones.dev.sdk.GameServer.Spec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agones.dev.sdk.GameServer.Spec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agones.dev.sdk.GameServer.Spec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agones.dev.sdk.GameServer.Spec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHealth();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.agones.dev.sdk.GameServer.Spec.Health.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agones.dev.sdk.GameServer.Spec.Health.prototype.toObject = function(opt_includeInstance) {
  return proto.agones.dev.sdk.GameServer.Spec.Health.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agones.dev.sdk.GameServer.Spec.Health} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agones.dev.sdk.GameServer.Spec.Health.toObject = function(includeInstance, msg) {
  var f, obj = {
    disabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    periodSeconds: jspb.Message.getFieldWithDefault(msg, 2, 0),
    failureThreshold: jspb.Message.getFieldWithDefault(msg, 3, 0),
    initialDelaySeconds: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agones.dev.sdk.GameServer.Spec.Health}
 */
proto.agones.dev.sdk.GameServer.Spec.Health.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agones.dev.sdk.GameServer.Spec.Health;
  return proto.agones.dev.sdk.GameServer.Spec.Health.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agones.dev.sdk.GameServer.Spec.Health} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agones.dev.sdk.GameServer.Spec.Health}
 */
proto.agones.dev.sdk.GameServer.Spec.Health.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisabled(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPeriodSeconds(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFailureThreshold(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInitialDelaySeconds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agones.dev.sdk.GameServer.Spec.Health.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agones.dev.sdk.GameServer.Spec.Health.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agones.dev.sdk.GameServer.Spec.Health} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agones.dev.sdk.GameServer.Spec.Health.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDisabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getPeriodSeconds();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getFailureThreshold();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getInitialDelaySeconds();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional bool disabled = 1;
 * @return {boolean}
 */
proto.agones.dev.sdk.GameServer.Spec.Health.prototype.getDisabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.agones.dev.sdk.GameServer.Spec.Health} returns this
 */
proto.agones.dev.sdk.GameServer.Spec.Health.prototype.setDisabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int32 period_seconds = 2;
 * @return {number}
 */
proto.agones.dev.sdk.GameServer.Spec.Health.prototype.getPeriodSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.agones.dev.sdk.GameServer.Spec.Health} returns this
 */
proto.agones.dev.sdk.GameServer.Spec.Health.prototype.setPeriodSeconds = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 failure_threshold = 3;
 * @return {number}
 */
proto.agones.dev.sdk.GameServer.Spec.Health.prototype.getFailureThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.agones.dev.sdk.GameServer.Spec.Health} returns this
 */
proto.agones.dev.sdk.GameServer.Spec.Health.prototype.setFailureThreshold = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 initial_delay_seconds = 4;
 * @return {number}
 */
proto.agones.dev.sdk.GameServer.Spec.Health.prototype.getInitialDelaySeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.agones.dev.sdk.GameServer.Spec.Health} returns this
 */
proto.agones.dev.sdk.GameServer.Spec.Health.prototype.setInitialDelaySeconds = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional Health health = 1;
 * @return {?proto.agones.dev.sdk.GameServer.Spec.Health}
 */
proto.agones.dev.sdk.GameServer.Spec.prototype.getHealth = function() {
  return /** @type{?proto.agones.dev.sdk.GameServer.Spec.Health} */ (
    jspb.Message.getWrapperField(this, proto.agones.dev.sdk.GameServer.Spec.Health, 1));
};


/**
 * @param {?proto.agones.dev.sdk.GameServer.Spec.Health|undefined} value
 * @return {!proto.agones.dev.sdk.GameServer.Spec} returns this
*/
proto.agones.dev.sdk.GameServer.Spec.prototype.setHealth = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agones.dev.sdk.GameServer.Spec} returns this
 */
proto.agones.dev.sdk.GameServer.Spec.prototype.clearHealth = function() {
  return this.setHealth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agones.dev.sdk.GameServer.Spec.prototype.hasHealth = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.agones.dev.sdk.GameServer.Status.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agones.dev.sdk.GameServer.Status.prototype.toObject = function(opt_includeInstance) {
  return proto.agones.dev.sdk.GameServer.Status.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agones.dev.sdk.GameServer.Status} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agones.dev.sdk.GameServer.Status.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, ""),
    address: jspb.Message.getFieldWithDefault(msg, 2, ""),
    portsList: jspb.Message.toObjectList(msg.getPortsList(),
    proto.agones.dev.sdk.GameServer.Status.Port.toObject, includeInstance),
    players: (f = msg.getPlayers()) && proto.agones.dev.sdk.GameServer.Status.PlayerStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agones.dev.sdk.GameServer.Status}
 */
proto.agones.dev.sdk.GameServer.Status.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agones.dev.sdk.GameServer.Status;
  return proto.agones.dev.sdk.GameServer.Status.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agones.dev.sdk.GameServer.Status} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agones.dev.sdk.GameServer.Status}
 */
proto.agones.dev.sdk.GameServer.Status.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 3:
      var value = new proto.agones.dev.sdk.GameServer.Status.Port;
      reader.readMessage(value,proto.agones.dev.sdk.GameServer.Status.Port.deserializeBinaryFromReader);
      msg.addPorts(value);
      break;
    case 4:
      var value = new proto.agones.dev.sdk.GameServer.Status.PlayerStatus;
      reader.readMessage(value,proto.agones.dev.sdk.GameServer.Status.PlayerStatus.deserializeBinaryFromReader);
      msg.setPlayers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agones.dev.sdk.GameServer.Status.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agones.dev.sdk.GameServer.Status.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agones.dev.sdk.GameServer.Status} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agones.dev.sdk.GameServer.Status.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPortsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.agones.dev.sdk.GameServer.Status.Port.serializeBinaryToWriter
    );
  }
  f = message.getPlayers();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.agones.dev.sdk.GameServer.Status.PlayerStatus.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agones.dev.sdk.GameServer.Status.Port.prototype.toObject = function(opt_includeInstance) {
  return proto.agones.dev.sdk.GameServer.Status.Port.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agones.dev.sdk.GameServer.Status.Port} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agones.dev.sdk.GameServer.Status.Port.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    port: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agones.dev.sdk.GameServer.Status.Port}
 */
proto.agones.dev.sdk.GameServer.Status.Port.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agones.dev.sdk.GameServer.Status.Port;
  return proto.agones.dev.sdk.GameServer.Status.Port.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agones.dev.sdk.GameServer.Status.Port} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agones.dev.sdk.GameServer.Status.Port}
 */
proto.agones.dev.sdk.GameServer.Status.Port.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agones.dev.sdk.GameServer.Status.Port.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agones.dev.sdk.GameServer.Status.Port.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agones.dev.sdk.GameServer.Status.Port} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agones.dev.sdk.GameServer.Status.Port.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.agones.dev.sdk.GameServer.Status.Port.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agones.dev.sdk.GameServer.Status.Port} returns this
 */
proto.agones.dev.sdk.GameServer.Status.Port.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.agones.dev.sdk.GameServer.Status.Port.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.agones.dev.sdk.GameServer.Status.Port} returns this
 */
proto.agones.dev.sdk.GameServer.Status.Port.prototype.setPort = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.agones.dev.sdk.GameServer.Status.PlayerStatus.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agones.dev.sdk.GameServer.Status.PlayerStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.agones.dev.sdk.GameServer.Status.PlayerStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agones.dev.sdk.GameServer.Status.PlayerStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agones.dev.sdk.GameServer.Status.PlayerStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0),
    capacity: jspb.Message.getFieldWithDefault(msg, 2, 0),
    idsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agones.dev.sdk.GameServer.Status.PlayerStatus}
 */
proto.agones.dev.sdk.GameServer.Status.PlayerStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agones.dev.sdk.GameServer.Status.PlayerStatus;
  return proto.agones.dev.sdk.GameServer.Status.PlayerStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agones.dev.sdk.GameServer.Status.PlayerStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agones.dev.sdk.GameServer.Status.PlayerStatus}
 */
proto.agones.dev.sdk.GameServer.Status.PlayerStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCapacity(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agones.dev.sdk.GameServer.Status.PlayerStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agones.dev.sdk.GameServer.Status.PlayerStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agones.dev.sdk.GameServer.Status.PlayerStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agones.dev.sdk.GameServer.Status.PlayerStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getCapacity();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional int64 count = 1;
 * @return {number}
 */
proto.agones.dev.sdk.GameServer.Status.PlayerStatus.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.agones.dev.sdk.GameServer.Status.PlayerStatus} returns this
 */
proto.agones.dev.sdk.GameServer.Status.PlayerStatus.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 capacity = 2;
 * @return {number}
 */
proto.agones.dev.sdk.GameServer.Status.PlayerStatus.prototype.getCapacity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.agones.dev.sdk.GameServer.Status.PlayerStatus} returns this
 */
proto.agones.dev.sdk.GameServer.Status.PlayerStatus.prototype.setCapacity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated string ids = 3;
 * @return {!Array<string>}
 */
proto.agones.dev.sdk.GameServer.Status.PlayerStatus.prototype.getIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.agones.dev.sdk.GameServer.Status.PlayerStatus} returns this
 */
proto.agones.dev.sdk.GameServer.Status.PlayerStatus.prototype.setIdsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.agones.dev.sdk.GameServer.Status.PlayerStatus} returns this
 */
proto.agones.dev.sdk.GameServer.Status.PlayerStatus.prototype.addIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.agones.dev.sdk.GameServer.Status.PlayerStatus} returns this
 */
proto.agones.dev.sdk.GameServer.Status.PlayerStatus.prototype.clearIdsList = function() {
  return this.setIdsList([]);
};


/**
 * optional string state = 1;
 * @return {string}
 */
proto.agones.dev.sdk.GameServer.Status.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.agones.dev.sdk.GameServer.Status} returns this
 */
proto.agones.dev.sdk.GameServer.Status.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string address = 2;
 * @return {string}
 */
proto.agones.dev.sdk.GameServer.Status.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.agones.dev.sdk.GameServer.Status} returns this
 */
proto.agones.dev.sdk.GameServer.Status.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Port ports = 3;
 * @return {!Array<!proto.agones.dev.sdk.GameServer.Status.Port>}
 */
proto.agones.dev.sdk.GameServer.Status.prototype.getPortsList = function() {
  return /** @type{!Array<!proto.agones.dev.sdk.GameServer.Status.Port>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.agones.dev.sdk.GameServer.Status.Port, 3));
};


/**
 * @param {!Array<!proto.agones.dev.sdk.GameServer.Status.Port>} value
 * @return {!proto.agones.dev.sdk.GameServer.Status} returns this
*/
proto.agones.dev.sdk.GameServer.Status.prototype.setPortsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.agones.dev.sdk.GameServer.Status.Port=} opt_value
 * @param {number=} opt_index
 * @return {!proto.agones.dev.sdk.GameServer.Status.Port}
 */
proto.agones.dev.sdk.GameServer.Status.prototype.addPorts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.agones.dev.sdk.GameServer.Status.Port, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.agones.dev.sdk.GameServer.Status} returns this
 */
proto.agones.dev.sdk.GameServer.Status.prototype.clearPortsList = function() {
  return this.setPortsList([]);
};


/**
 * optional PlayerStatus players = 4;
 * @return {?proto.agones.dev.sdk.GameServer.Status.PlayerStatus}
 */
proto.agones.dev.sdk.GameServer.Status.prototype.getPlayers = function() {
  return /** @type{?proto.agones.dev.sdk.GameServer.Status.PlayerStatus} */ (
    jspb.Message.getWrapperField(this, proto.agones.dev.sdk.GameServer.Status.PlayerStatus, 4));
};


/**
 * @param {?proto.agones.dev.sdk.GameServer.Status.PlayerStatus|undefined} value
 * @return {!proto.agones.dev.sdk.GameServer.Status} returns this
*/
proto.agones.dev.sdk.GameServer.Status.prototype.setPlayers = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agones.dev.sdk.GameServer.Status} returns this
 */
proto.agones.dev.sdk.GameServer.Status.prototype.clearPlayers = function() {
  return this.setPlayers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agones.dev.sdk.GameServer.Status.prototype.hasPlayers = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ObjectMeta object_meta = 1;
 * @return {?proto.agones.dev.sdk.GameServer.ObjectMeta}
 */
proto.agones.dev.sdk.GameServer.prototype.getObjectMeta = function() {
  return /** @type{?proto.agones.dev.sdk.GameServer.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, proto.agones.dev.sdk.GameServer.ObjectMeta, 1));
};


/**
 * @param {?proto.agones.dev.sdk.GameServer.ObjectMeta|undefined} value
 * @return {!proto.agones.dev.sdk.GameServer} returns this
*/
proto.agones.dev.sdk.GameServer.prototype.setObjectMeta = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agones.dev.sdk.GameServer} returns this
 */
proto.agones.dev.sdk.GameServer.prototype.clearObjectMeta = function() {
  return this.setObjectMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agones.dev.sdk.GameServer.prototype.hasObjectMeta = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Spec spec = 2;
 * @return {?proto.agones.dev.sdk.GameServer.Spec}
 */
proto.agones.dev.sdk.GameServer.prototype.getSpec = function() {
  return /** @type{?proto.agones.dev.sdk.GameServer.Spec} */ (
    jspb.Message.getWrapperField(this, proto.agones.dev.sdk.GameServer.Spec, 2));
};


/**
 * @param {?proto.agones.dev.sdk.GameServer.Spec|undefined} value
 * @return {!proto.agones.dev.sdk.GameServer} returns this
*/
proto.agones.dev.sdk.GameServer.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agones.dev.sdk.GameServer} returns this
 */
proto.agones.dev.sdk.GameServer.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agones.dev.sdk.GameServer.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Status status = 3;
 * @return {?proto.agones.dev.sdk.GameServer.Status}
 */
proto.agones.dev.sdk.GameServer.prototype.getStatus = function() {
  return /** @type{?proto.agones.dev.sdk.GameServer.Status} */ (
    jspb.Message.getWrapperField(this, proto.agones.dev.sdk.GameServer.Status, 3));
};


/**
 * @param {?proto.agones.dev.sdk.GameServer.Status|undefined} value
 * @return {!proto.agones.dev.sdk.GameServer} returns this
*/
proto.agones.dev.sdk.GameServer.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.agones.dev.sdk.GameServer} returns this
 */
proto.agones.dev.sdk.GameServer.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.agones.dev.sdk.GameServer.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.agones.dev.sdk);
