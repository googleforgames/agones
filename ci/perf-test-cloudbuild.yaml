---
# Copyright 2023 Google LLC All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Google Cloud Builder CI configuration
#
steps:
  #
  # Creates the initial make + docker build platform
  #
  - name: ubuntu
    args:
      - bash
      - -c
      - "echo 'FROM gcr.io/cloud-builders/docker:24.0.6\nRUN apt-get install make\nENTRYPOINT\
        \ [\"/usr/bin/make\"]' > Dockerfile.build"
    waitFor: ['-']

  - name: gcr.io/cloud-builders/docker:24.0.6
    id: build-make-docker
    args: [build, -f, Dockerfile.build, -t, make-docker, .]  # we need docker and make to run everything.

  #
  # pull the main build image if it exists
  #
  - name: make-docker
    id: pull-build-image
    dir: build
    env: ['REGISTRY=${_REGISTRY}']
    args: [pull-build-image]
    waitFor:
      - build-make-docker

  #
  # add tag to build image
  #
  - name: make-docker
    id: tag-build-image
    dir: build
    env: ['CUSTOM_LOCAL_TAG=performance-test']
    args: [tag-build-image]
    waitFor:
      - pull-build-image

  #
  # Build all the images and sdks, and push them up to the repository
  #

  - name: "make-docker"
    id: build-images
    waitFor:
      - pull-build-image
    dir: "build"
    env:
      - "REGISTRY=${_REGISTRY}"
    args: ["-j", "4", "build-images"]
  - name: "make-docker"
    id: push-images
    waitFor:
      - build-images
    dir: "build"
    env:
      - "REGISTRY=${_REGISTRY}"
    args: ["-j", "4", "push"]

  #
  # Run the performance tests with default feature gates setting
  #
  - name: performance-test
    dir: build
    args:
      - ./performance-test.sh
      - ${_TEST_CLUSTER_NAME}
      - ${_TEST_CLUSTER_LOCATION}
      - ${_REGISTRY}
      - ${_TEST_PROJECT_ID}
      - ${_TEST_FLEET_REPLICAS}
      - ${_TEST_AUTOMATIC_SHUTDOWN_DELAY_SEC}
      - ${_TEST_BUFFER_SIZE}
      - ${_TEST_MAX_REPLICAS}
      - ${_TEST_DURATION}
      - ${_TEST_CLIENTS}
      - ${_TEST_INTERVAL}
    id: performance-test
    waitFor:
      - tag-build-image

substitutions:
  _TEST_CLUSTER_NAME: standard-performance-test-cluster-1-28
  _TEST_CLUSTER_LOCATION: us-central1
  _REGISTRY: us-docker.pkg.dev/agones-images/ci
  _TEST_PROJECT_ID: agones-images
  _TEST_FLEET_REPLICAS: "10000"
  _TEST_AUTOMATIC_SHUTDOWN_DELAY_SEC: "60"
  _TEST_BUFFER_SIZE: "9900"
  _TEST_MAX_REPLICAS: "20000"
  _TEST_DURATION: "10m"
  _TEST_CLIENTS: "50"
  _TEST_INTERVAL: "1000"
tags: [ci, 'commit-${COMMIT_SHA}']
timeout: 7200s  # 2h
queueTtl: 10800s  # 3h
options:
  machineType: E2_HIGHCPU_32
  dynamic_substitutions: true
