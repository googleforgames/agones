# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
  #
  # Restore any caches
  #
  - name: us-docker.pkg.dev/$PROJECT_ID/ci/restore_cache
    id: cpp-sdk-build-restore-cache
    args:
      - "--bucket=gs://$_CACHE_BUCKET"
      - "--key=$_CPP_SDK_BUILD_CACHE_KEY-$( checksum sdks/cpp/cmake/prerequisites.cmake )"
    waitFor: ["-"]

  - name: us-docker.pkg.dev/$PROJECT_ID/ci/restore_cache
    id: cpp-sdk-conformance-restore-cache
    args:
      - "--bucket=gs://$_CACHE_BUCKET"
      - "--key=$_CPP_SDK_CONFORMANCE_CACHE_KEY-$( checksum sdks/cpp/cmake/prerequisites.cmake )"
    waitFor: ["-"]

  - name: us-docker.pkg.dev/$PROJECT_ID/ci/restore_cache
    id: rust-sdk-build-restore-cache
    args:
      - "--bucket=gs://$_CACHE_BUCKET"
      - "--key=$_RUST_SDK_BUILD_CACHE_KEY-$( checksum test/sdk/rust/Cargo.toml )"
    waitFor: ["-"]

  #
  # Creates the initial make + docker build platform
  #
  - name: "ubuntu"
    args:
      [
        "bash",
        "-c",
        "echo 'FROM gcr.io/cloud-builders/docker\nRUN apt-get install make\nENTRYPOINT [\"/usr/bin/make\"]' > Dockerfile.build",
      ]
    waitFor: ["-"]
  - name: gcr.io/cloud-builders/docker
    id: build-make-docker
    args: ["build", "-f", "Dockerfile.build", "-t", "make-docker", "."]

  #
  # pull the main build image if it exists
  #
  # - name: make-docker
  #   id: pull-build-image
  #   dir: "build"
  #   env:
  #     - "REGISTRY=${_REGISTRY}/ci"
  #   args: ["pull-build-image"]
  #   waitFor:
  #     - build-make-docker

  #
  # Ensure example images exists
  #
  # - name: make-docker
  #   id: test-examples-on-gar
  #   dir: "build"
  #   env:
  #     - "REGISTRY=${_REGISTRY}"
  #     - DOCKER_RUN_ARGS=--network=cloudbuild
  #   args: ["test-examples-on-gar"]

  #
  # Build all the images
  #
  - name: make-docker
    id: build
    dir: "build"
    env:
      - "VERSION=${_VERSION}"
      - "REGISTRY=${_REGISTRY}/release"
      - "FULL_BUILD=1"
    args: ["-j", "1", "build"]

  #
  # Creating cloud storage bucket
  #
  - name: gcr.io/cloud-builders/gsutil
    entrypoint: bash
    args:
      - "-c"
      - "gsutil mb $_STORAGE || true"
    id: create-bucket

  #
  # Zip up artifacts and push to cloud storage
  #
  - name: gcr.io/cloud-builders/gsutil
    waitFor:
      - build
    dir: "cmd/sdk-server/bin"
    args: ["-m", "cp", "*.zip", $_STORAGE]

  - name: gcr.io/cloud-builders/gsutil
    waitFor:
      - build
    dir: "sdks/cpp/.archives"
    args: ["-m", "cp", "*.tar.gz", $_STORAGE]

  - name: gcr.io/cloud-builders/gsutil
    entrypoint: bash
    waitFor:
      - build
    dir: "."
    args:
      - "-c"
      - zip -r agones-install-${_VERSION}.zip ./README.md ./install ./LICENSE | gsutil -m cp -r agones-install-${_VERSION}.zip $_STORAGE

  #
  # Generate the Changelog file in the cloud storage
  #
#   - name: ferrarimarco/github-changelog-generator:1.15.0
#     id: changelog
#     entrypoint: sh
#     args:
#       - "-c"
#       - 'github_changelog_generator --user=googleforgames --project=agones --bug-labels=kind/bug --enhancement-labels=kind/feature --breaking-labels=kind/breaking --security-labels=area/security --exclude-labels=duplicate,question,invalid,wontfix,priority/wontfix --future-release "v${_VERSION}" --release-branch=main --token $$GH_TOKEN'
#     secretEnv:
#       - GH_TOKEN

# artifacts:
#   objects:
#     location: "$_STORAGE"
#     paths:
#       - "CHANGELOG.md"

options:
  machineType: E2_HIGHCPU_32
  dynamic_substitutions: true
substitutions:
  _STORAGE: gs://${PROJECT_ID}-agones-releases
  _VERSION: 1.31.0
  _REGISTRY: us-docker.pkg.dev/${PROJECT_ID}
  _CACHE_BUCKET: agones-build-cache
  _CPP_SDK_BUILD_CACHE_KEY: cpp-sdk-build
  _CPP_SDK_CONFORMANCE_CACHE_KEY: cpp-sdk-conformance
  _RUST_SDK_BUILD_CACHE_KEY: rust-sdk-build

# availableSecrets:
#   secretManager:
#     - versionName: projects/${PROJECT_ID}/secrets/release-github-token/versions/latest
#       env: GH_TOKEN
timeout: 7200s
