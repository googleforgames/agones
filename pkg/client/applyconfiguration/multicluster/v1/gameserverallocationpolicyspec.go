// Copyright 2023 Google LLC All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This code was autogenerated. Do not edit directly.

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// GameServerAllocationPolicySpecApplyConfiguration represents an declarative configuration of the GameServerAllocationPolicySpec type for use
// with apply.
type GameServerAllocationPolicySpecApplyConfiguration struct {
	Priority       *int32                                   `json:"priority,omitempty"`
	Weight         *int                                     `json:"weight,omitempty"`
	ConnectionInfo *ClusterConnectionInfoApplyConfiguration `json:"connectionInfo,omitempty"`
}

// GameServerAllocationPolicySpecApplyConfiguration constructs an declarative configuration of the GameServerAllocationPolicySpec type for use with
// apply.
func GameServerAllocationPolicySpec() *GameServerAllocationPolicySpecApplyConfiguration {
	return &GameServerAllocationPolicySpecApplyConfiguration{}
}

// WithPriority sets the Priority field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Priority field is set to the value of the last call.
func (b *GameServerAllocationPolicySpecApplyConfiguration) WithPriority(value int32) *GameServerAllocationPolicySpecApplyConfiguration {
	b.Priority = &value
	return b
}

// WithWeight sets the Weight field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Weight field is set to the value of the last call.
func (b *GameServerAllocationPolicySpecApplyConfiguration) WithWeight(value int) *GameServerAllocationPolicySpecApplyConfiguration {
	b.Weight = &value
	return b
}

// WithConnectionInfo sets the ConnectionInfo field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ConnectionInfo field is set to the value of the last call.
func (b *GameServerAllocationPolicySpecApplyConfiguration) WithConnectionInfo(value *ClusterConnectionInfoApplyConfiguration) *GameServerAllocationPolicySpecApplyConfiguration {
	b.ConnectionInfo = value
	return b
}
