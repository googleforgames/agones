// Copyright 2023 Google LLC All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This code was autogenerated. Do not edit directly.

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// PriorityApplyConfiguration represents an declarative configuration of the Priority type for use
// with apply.
type PriorityApplyConfiguration struct {
	Type  *string `json:"type,omitempty"`
	Key   *string `json:"key,omitempty"`
	Order *string `json:"order,omitempty"`
}

// PriorityApplyConfiguration constructs an declarative configuration of the Priority type for use with
// apply.
func Priority() *PriorityApplyConfiguration {
	return &PriorityApplyConfiguration{}
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *PriorityApplyConfiguration) WithType(value string) *PriorityApplyConfiguration {
	b.Type = &value
	return b
}

// WithKey sets the Key field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Key field is set to the value of the last call.
func (b *PriorityApplyConfiguration) WithKey(value string) *PriorityApplyConfiguration {
	b.Key = &value
	return b
}

// WithOrder sets the Order field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Order field is set to the value of the last call.
func (b *PriorityApplyConfiguration) WithOrder(value string) *PriorityApplyConfiguration {
	b.Order = &value
	return b
}
