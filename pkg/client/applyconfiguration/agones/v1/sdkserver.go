// Copyright 2023 Google LLC All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This code was autogenerated. Do not edit directly.

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "agones.dev/agones/pkg/apis/agones/v1"
)

// SdkServerApplyConfiguration represents an declarative configuration of the SdkServer type for use
// with apply.
type SdkServerApplyConfiguration struct {
	LogLevel *v1.SdkServerLogLevel `json:"logLevel,omitempty"`
	GRPCPort *int32                `json:"grpcPort,omitempty"`
	HTTPPort *int32                `json:"httpPort,omitempty"`
}

// SdkServerApplyConfiguration constructs an declarative configuration of the SdkServer type for use with
// apply.
func SdkServer() *SdkServerApplyConfiguration {
	return &SdkServerApplyConfiguration{}
}

// WithLogLevel sets the LogLevel field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LogLevel field is set to the value of the last call.
func (b *SdkServerApplyConfiguration) WithLogLevel(value v1.SdkServerLogLevel) *SdkServerApplyConfiguration {
	b.LogLevel = &value
	return b
}

// WithGRPCPort sets the GRPCPort field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GRPCPort field is set to the value of the last call.
func (b *SdkServerApplyConfiguration) WithGRPCPort(value int32) *SdkServerApplyConfiguration {
	b.GRPCPort = &value
	return b
}

// WithHTTPPort sets the HTTPPort field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the HTTPPort field is set to the value of the last call.
func (b *SdkServerApplyConfiguration) WithHTTPPort(value int32) *SdkServerApplyConfiguration {
	b.HTTPPort = &value
	return b
}
