// Copyright 2024 Google LLC All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This code was autogenerated. Do not edit directly.

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "agones.dev/agones/pkg/apis/multicluster/v1"
	multiclusterv1 "agones.dev/agones/pkg/client/applyconfiguration/multicluster/v1"
	typedmulticlusterv1 "agones.dev/agones/pkg/client/clientset/versioned/typed/multicluster/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeGameServerAllocationPolicies implements GameServerAllocationPolicyInterface
type fakeGameServerAllocationPolicies struct {
	*gentype.FakeClientWithListAndApply[*v1.GameServerAllocationPolicy, *v1.GameServerAllocationPolicyList, *multiclusterv1.GameServerAllocationPolicyApplyConfiguration]
	Fake *FakeMulticlusterV1
}

func newFakeGameServerAllocationPolicies(fake *FakeMulticlusterV1, namespace string) typedmulticlusterv1.GameServerAllocationPolicyInterface {
	return &fakeGameServerAllocationPolicies{
		gentype.NewFakeClientWithListAndApply[*v1.GameServerAllocationPolicy, *v1.GameServerAllocationPolicyList, *multiclusterv1.GameServerAllocationPolicyApplyConfiguration](
			fake.Fake,
			namespace,
			v1.SchemeGroupVersion.WithResource("gameserverallocationpolicies"),
			v1.SchemeGroupVersion.WithKind("GameServerAllocationPolicy"),
			func() *v1.GameServerAllocationPolicy { return &v1.GameServerAllocationPolicy{} },
			func() *v1.GameServerAllocationPolicyList { return &v1.GameServerAllocationPolicyList{} },
			func(dst, src *v1.GameServerAllocationPolicyList) { dst.ListMeta = src.ListMeta },
			func(list *v1.GameServerAllocationPolicyList) []*v1.GameServerAllocationPolicy {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1.GameServerAllocationPolicyList, items []*v1.GameServerAllocationPolicy) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
