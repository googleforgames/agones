//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Copyright 2023 Google LLC All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This code was autogenerated. Do not edit directly.

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConnectionInfo) DeepCopyInto(out *ClusterConnectionInfo) {
	*out = *in
	if in.AllocationEndpoints != nil {
		in, out := &in.AllocationEndpoints, &out.AllocationEndpoints
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ServerCA != nil {
		in, out := &in.ServerCA, &out.ServerCA
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConnectionInfo.
func (in *ClusterConnectionInfo) DeepCopy() *ClusterConnectionInfo {
	if in == nil {
		return nil
	}
	out := new(ClusterConnectionInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionInfoIterator) DeepCopyInto(out *ConnectionInfoIterator) {
	*out = *in
	if in.orderedPriorities != nil {
		in, out := &in.orderedPriorities, &out.orderedPriorities
		*out = make([]int32, len(*in))
		copy(*out, *in)
	}
	if in.priorityToCluster != nil {
		in, out := &in.priorityToCluster, &out.priorityToCluster
		*out = make(map[int32]map[string][]*GameServerAllocationPolicy, len(*in))
		for key, val := range *in {
			var outVal map[string][]*GameServerAllocationPolicy
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make(map[string][]*GameServerAllocationPolicy, len(*in))
				for key, val := range *in {
					var outVal []*GameServerAllocationPolicy
					if val == nil {
						(*out)[key] = nil
					} else {
						in, out := &val, &outVal
						*out = make([]*GameServerAllocationPolicy, len(*in))
						for i := range *in {
							if (*in)[i] != nil {
								in, out := &(*in)[i], &(*out)[i]
								*out = new(GameServerAllocationPolicy)
								(*in).DeepCopyInto(*out)
							}
						}
					}
					(*out)[key] = outVal
				}
			}
			(*out)[key] = outVal
		}
	}
	if in.clusterBlackList != nil {
		in, out := &in.clusterBlackList, &out.clusterBlackList
		*out = make(map[string]bool, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionInfoIterator.
func (in *ConnectionInfoIterator) DeepCopy() *ConnectionInfoIterator {
	if in == nil {
		return nil
	}
	out := new(ConnectionInfoIterator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GameServerAllocationPolicy) DeepCopyInto(out *GameServerAllocationPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GameServerAllocationPolicy.
func (in *GameServerAllocationPolicy) DeepCopy() *GameServerAllocationPolicy {
	if in == nil {
		return nil
	}
	out := new(GameServerAllocationPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GameServerAllocationPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GameServerAllocationPolicyList) DeepCopyInto(out *GameServerAllocationPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GameServerAllocationPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GameServerAllocationPolicyList.
func (in *GameServerAllocationPolicyList) DeepCopy() *GameServerAllocationPolicyList {
	if in == nil {
		return nil
	}
	out := new(GameServerAllocationPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GameServerAllocationPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GameServerAllocationPolicySpec) DeepCopyInto(out *GameServerAllocationPolicySpec) {
	*out = *in
	in.ConnectionInfo.DeepCopyInto(&out.ConnectionInfo)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GameServerAllocationPolicySpec.
func (in *GameServerAllocationPolicySpec) DeepCopy() *GameServerAllocationPolicySpec {
	if in == nil {
		return nil
	}
	out := new(GameServerAllocationPolicySpec)
	in.DeepCopyInto(out)
	return out
}
