# Copyright 2018 Google LLC All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{- if .Values.agones.registerServiceAccounts }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.agones.serviceaccount.controller.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "agones.name" . }}
    chart: {{ template "agones.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
{{- if .Values.agones.serviceaccount.controller.annotations }}
  annotations:
{{- toYaml .Values.agones.serviceaccount.controller.annotations | nindent 4 }}
{{- end }}
---
{{- end}}
{{- if .Values.agones.rbacEnabled }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Values.agones.serviceaccount.controller.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "agones.name" . }}
    chart: {{ template "agones.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["create", "update", "delete", "list", "watch"]
- apiGroups: [""]
  resources: ["nodes", "secrets"]
  verbs: ["list", "watch"]
{{- if eq .Values.agones.cloudProduct "auto" }}
- apiGroups: ["admissionregistration.k8s.io"] # only needed for cloudProduct detection
  resources: ["mutatingwebhookconfigurations"]
  verbs: ["get"]
{{- end}}
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["get"]
- apiGroups: ["agones.dev"]
  resources: ["gameservers", "gameserversets"]
  verbs: ["create", "delete", "get", "list", "update", "watch"]
- apiGroups: ["agones.dev"]
  resources: ["gameservers"]
  verbs: ["patch"]
- apiGroups: ["agones.dev"]
  resources: ["fleets"]
  verbs: ["get", "list", "update", "watch"]
- apiGroups: ["agones.dev"]
  resources: ["fleets/status", "gameserversets/status"]
  verbs: ["update"]
- apiGroups: ["agones.dev"]
  resources: ["fleets/finalizers", "gameserversets/finalizers", "gameservers/finalizers"]
  verbs: ["update"]
- apiGroups: ["multicluster.agones.dev"]
  resources: ["gameserverallocationpolicies"]
  verbs: ["create", "delete", "get", "list", "update", "watch"]
- apiGroups: ["autoscaling.agones.dev"]
  resources: ["fleetautoscalers"]
  verbs: ["get", "list", "update", "watch"]
- apiGroups: ["autoscaling.agones.dev"]
  resources: ["fleetautoscalers/status"]
  verbs: ["update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Values.agones.serviceaccount.controller.name }}-access
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "agones.name" . }}
    chart: {{ template "agones.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
subjects:
- kind: User
  name: system:serviceaccount:{{ .Release.Namespace }}:{{ .Values.agones.serviceaccount.controller.name }}
  apiGroup: rbac.authorization.k8s.io
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ .Values.agones.serviceaccount.controller.name }}
---
#
# RBACs for APIService
#
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Values.agones.serviceaccount.controller.name }}:system:auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: {{ .Values.agones.serviceaccount.controller.name }}
    namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Values.agones.serviceaccount.controller.name }}-auth-reader
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
  - kind: ServiceAccount
    name: {{ .Values.agones.serviceaccount.controller.name }}
    namespace: {{ .Release.Namespace }}
{{- end }}
