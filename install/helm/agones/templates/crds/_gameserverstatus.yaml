# Copyright 2020 Google LLC All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{/* schema for a gameserver status */}}
{{- define "gameserver.status" }}
status:
  description: 'GameServerStatus is the status for a GameServer resource. More info:
    https://agones.dev/site/docs/reference/agones_crd_api_reference/#agones.dev/v1.GameServer'
  type: object
  title: The status values for the GameServer
  properties:
    state:
      type: string
      enum:
        - PortAllocation
        - Creating
        - Starting
        - Scheduled
        - RequestReady
        - Ready
        - Shutdown
        - Error
        - Unhealthy
        - Reserved
        - Allocated
    ports:
      type: array
      nullable: true
      items:
        type: object
        properties:
          name:
            type: string
          port:
            type: integer
    address:
      type: string
    addresses:
      type: array
      title: Array of addresses at which the GameServer can be reached; copy of Node.Status.addresses
      nullable: true
      items:
        type: object
        properties:
          address:
            type: string
          type:
            type: string
    nodeName:
      type: string
    reservedUntil:
      type: string
      nullable: true
      format: date-time
    players:
      type: object
      nullable: true
      properties:
        count:
          type: integer
        capacity:
          type: integer
        ids:
          type: array
          nullable: true
          items:
            type: string
    counters:
      type: object
      title: Map of player, room, session, etc. counters
      nullable: true
      maxProperties: 1000
      additionalProperties:
        type: object
        properties:
          count:
            title: The current count
            type: integer
            default: 0
            minimum: 0
          capacity:
            type: integer
            default: 1000
            minimum: 0
    lists:
      type: object
      title: Map of player, room, session, etc. lists
      nullable: true
      maxProperties: 1000
      additionalProperties:
        type: object
        properties:
          capacity:
            title: Max capacity of the array (can be less than or equal to value of values.maxItems)
            type: integer
            minimum: 0
            default: 1000
            maximum: 1000 # must be equal to values.maxItems
          values:
            title: Set of all the items in the list
            type: array
            x-kubernetes-list-type: set # Requires items in the array to be unique
            maxItems: 1000 # max possible size of the value array (cannot be updated)
            items: # name of the item (player1, session1, room1, etc.)
              type: string
            default: []
    eviction:
      type: object
      properties:
        safe:
          type: string
          enum:
          - Always
          - OnUpgrade
          - Never
    immutableReplicas:
      type: integer
      title: Immutable count of Pods to a GameServer. Always 1. (Implementation detail of implementing the Scale subresource.)
      default: 1
      minimum: 1
      maximum: 1
{{- end}}
